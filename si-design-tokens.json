{
  "Consumer/Global": {
    "jds": {
      "border-radius": {
        "regular": {
          "type": "borderRadius",
          "value": "4",
          "description": "Regular border radius (supporting multi-value notation using 1, 2, 3, or 4 values)"
        },
        "round": {
          "type": "borderRadius",
          "value": "9999",
          "description": "Border radius for circular elements. Multi-value notation using 1, 2, 3, or 4 values is supported."
        },
        "none": {
          "value": "0",
          "type": "borderRadius",
          "description": "Zero value for border radius"
        }
      },
      "border-width": {
        "regular": {
          "type": "borderWidth",
          "value": "1",
          "description": "Regular border width"
        },
        "thick": {
          "type": "borderWidth",
          "value": "2",
          "description": "Thick border width"
        },
        "none": {
          "type": "borderWidth",
          "value": "0",
          "description": "Zero border width"
        }
      },
      "color": {
        "palette-brand": {
          "10": {
            "type": "color",
            "value": "{jds.color.trusted-blue.10}",
            "description": "Lightest color stop of brand color."
          },
          "20": {
            "type": "color",
            "value": "{jds.color.trusted-blue.20}",
            "description": "Lighter color stop of brand color."
          },
          "30": {
            "type": "color",
            "value": "{jds.color.trusted-blue.30}",
            "description": "Lighter color stop of brand color."
          },
          "40": {
            "type": "color",
            "value": "{jds.color.trusted-blue.40}",
            "description": "Lighter color stop of brand color."
          },
          "50": {
            "type": "color",
            "value": "{jds.color.trusted-blue.50}",
            "description": "Lighter color stop of brand color."
          },
          "60": {
            "type": "color",
            "value": "{jds.color.trusted-blue.60}",
            "description": "Key color brand color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "{jds.color.trusted-blue.70}",
            "description": "Darker color stop of brand color."
          },
          "80": {
            "type": "color",
            "value": "{jds.color.trusted-blue.80}",
            "description": "Darker color stop of brand color."
          },
          "90": {
            "type": "color",
            "value": "{jds.color.trusted-blue.90}",
            "description": "Darker color stop of brand color."
          },
          "100": {
            "type": "color",
            "value": "{jds.color.trusted-blue.100}",
            "description": "Darkest color stop of brand color."
          }
        },
        "palette-brand-accent-1": {
          "10": {
            "type": "color",
            "value": "{jds.color.teal.10}",
            "description": "Lightest color stop of brand color"
          },
          "20": {
            "type": "color",
            "value": "{jds.color.teal.20}",
            "description": "Lighter color stop of brand color."
          },
          "30": {
            "type": "color",
            "value": "{jds.color.teal.30}",
            "description": "Lighter color stop of brand color."
          },
          "40": {
            "type": "color",
            "value": "{jds.color.teal.40}",
            "description": "Lighter color stop of brand color."
          },
          "50": {
            "type": "color",
            "value": "{jds.color.teal.50}",
            "description": "Lighter color stop of brand color."
          },
          "60": {
            "type": "color",
            "value": "{jds.color.teal.60}",
            "description": "Key color brand color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "{jds.color.teal.70}",
            "description": "Darker color stop of brand color."
          },
          "80": {
            "type": "color",
            "value": "{jds.color.teal.80}",
            "description": "Darker color stop of brand color."
          },
          "90": {
            "type": "color",
            "value": "{jds.color.teal.90}",
            "description": "Darker color stop of brand color."
          },
          "100": {
            "type": "color",
            "value": "{jds.color.teal.100}",
            "description": "Darkest color stop of brand color."
          }
        },
        "palette-brand-accent-2": {
          "10": {
            "type": "color",
            "value": "{jds.color.deep-blue.10}",
            "description": "Lightest color stop of brand color."
          },
          "20": {
            "type": "color",
            "value": "{jds.color.deep-blue.20}",
            "description": "Lighter color stop of brand color."
          },
          "30": {
            "type": "color",
            "value": "{jds.color.deep-blue.30}",
            "description": "Lighter color stop of brand color."
          },
          "40": {
            "type": "color",
            "value": "{jds.color.deep-blue.40}",
            "description": "Lighter color stop of brand color."
          },
          "50": {
            "type": "color",
            "value": "{jds.color.deep-blue.50}",
            "description": "Lighter color stop of brand color."
          },
          "60": {
            "type": "color",
            "value": "{jds.color.deep-blue.60}",
            "description": "Key color brand color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "{jds.color.deep-blue.70}",
            "description": "Darker color stop of brand color."
          },
          "80": {
            "type": "color",
            "value": "{jds.color.deep-blue.80}",
            "description": "Darker color stop of brand color."
          },
          "90": {
            "type": "color",
            "value": "{jds.color.deep-blue.90}",
            "description": "Darker color stop of brand color."
          },
          "100": {
            "type": "color",
            "value": "{jds.color.deep-blue.100}",
            "description": "Darkest color stop of brand color."
          }
        },
        "palette-neutral": {
          "10": {
            "type": "color",
            "value": "{jds.color.gray.10}",
            "description": "Lightest color stop of neutral color"
          },
          "20": {
            "type": "color",
            "value": "{jds.color.gray.20}",
            "description": "Lighter color stop of neutral color"
          },
          "30": {
            "type": "color",
            "value": "{jds.color.gray.30}",
            "description": "Lighter color stop of neutral color"
          },
          "40": {
            "type": "color",
            "value": "{jds.color.gray.40}",
            "description": "Lighter color stop of neutral color"
          },
          "50": {
            "type": "color",
            "value": "{jds.color.gray.50}",
            "description": "Lighter color stop of neutral color"
          },
          "60": {
            "type": "color",
            "value": "{jds.color.gray.60}",
            "description": "Lighter color stop of neutral color"
          },
          "70": {
            "type": "color",
            "value": "{jds.color.gray.70}",
            "description": "Lighter color stop of neutral color"
          },
          "80": {
            "type": "color",
            "value": "{jds.color.gray.80}",
            "description": "Lighter color stop of neutral color"
          },
          "90": {
            "type": "color",
            "value": "{jds.color.gray.90}",
            "description": "Lighter color stop of neutral color"
          },
          "100": {
            "type": "color",
            "value": "{jds.color.gray.100}",
            "description": "Darkest color stop of neutral color, often the basis for text color"
          }
        },
        "trusted-blue": {
          "10": {
            "type": "color",
            "value": "#e9f9ff",
            "description": "Trusted Blue 10"
          },
          "20": {
            "type": "color",
            "value": "#cff2ff",
            "description": "Trusted Blue 20"
          },
          "30": {
            "type": "color",
            "value": "#b6ebff",
            "description": "Trusted Blue 30"
          },
          "40": {
            "type": "color",
            "value": "#1fc3ff",
            "description": "Trusted Blue 40"
          },
          "50": {
            "type": "color",
            "value": "#0099d1",
            "description": "Trusted Blue 50"
          },
          "60": {
            "type": "color",
            "value": "#00739d",
            "description": "Trusted Blue 60"
          },
          "70": {
            "type": "color",
            "value": "#006083",
            "description": "Trusted Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#004e6a",
            "description": "Trusted Blue 80"
          },
          "90": {
            "type": "color",
            "value": "#00435c",
            "description": "Trusted Blue 90"
          },
          "100": {
            "type": "color",
            "value": "#00384d",
            "description": "Trusted Blue 100"
          }
        },
        "deep-blue": {
          "10": {
            "type": "color",
            "value": "#F6F7F9",
            "description": "Palette Deep Blue 10"
          },
          "20": {
            "type": "color",
            "value": "#ECF0F3",
            "description": "Palette Deep Blue 20"
          },
          "30": {
            "type": "color",
            "value": "#E0E5EB",
            "description": "Palette Deep Blue 30"
          },
          "40": {
            "type": "color",
            "value": "#8C9FB5",
            "description": "Palette Deep Blue 40"
          },
          "50": {
            "type": "color",
            "value": "#5F7995",
            "description": "Palette Deep Blue 50"
          },
          "60": {
            "type": "color",
            "value": "#3C4C5E",
            "description": "Palette Deep Blue 60"
          },
          "70": {
            "type": "color",
            "value": "#344151",
            "description": "Palette Deep Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#2A3541",
            "description": "Palette Deep Blue 80"
          },
          "90": {
            "type": "color",
            "value": "#242D38",
            "description": "Palette Deep Blue 90"
          },
          "100": {
            "type": "color",
            "value": "#1E262F",
            "description": "Palette Deep Blue 100"
          }
        },
        "teal": {
          "10": {
            "type": "color",
            "value": "#ecf8f8",
            "description": "Teal 10"
          },
          "20": {
            "type": "color",
            "value": "#ddf3f2",
            "description": "Teal 20"
          },
          "30": {
            "type": "color",
            "value": "#cfeded",
            "description": "Teal 30"
          },
          "40": {
            "type": "color",
            "value": "#9edbda",
            "description": "Teal 40"
          },
          "50": {
            "type": "color",
            "value": "#7dcfcd",
            "description": "Teal 50"
          },
          "60": {
            "type": "color",
            "value": "#66c7c5",
            "description": "Teal 60"
          },
          "70": {
            "type": "color",
            "value": "#4cbdbb",
            "description": "Teal Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#41afad",
            "description": "Teal 80"
          },
          "90": {
            "type": "color",
            "value": "#3ba09e",
            "description": "Teal 90"
          },
          "100": {
            "type": "color",
            "value": "#379593",
            "description": "Teal 100"
          }
        },
        "red": {
          "10": {
            "type": "color",
            "value": "#FDF2F2",
            "description": "Palette Red 10"
          },
          "20": {
            "type": "color",
            "value": "#F8D4D3",
            "description": "Palette Red 20"
          },
          "30": {
            "type": "color",
            "value": "#F7CFCE",
            "description": "Palette Red 30"
          },
          "40": {
            "type": "color",
            "value": "#E86F6D",
            "description": "Palette Red 40"
          },
          "50": {
            "type": "color",
            "value": "#E03B38",
            "description": "Palette Red 50"
          },
          "60": {
            "type": "color",
            "value": "#c4221f",
            "description": "Palette Red 60"
          },
          "70": {
            "type": "color",
            "value": "#B01F1C",
            "description": "Palette Red 70"
          },
          "80": {
            "type": "color",
            "value": "#9A1B18",
            "description": "Palette Red 80"
          },
          "90": {
            "type": "color",
            "value": "#8D1816",
            "description": "Palette Red 90"
          },
          "100": {
            "type": "color",
            "value": "#801614",
            "description": "Palette Red 100"
          }
        },
        "yellow": {
          "10": {
            "type": "color",
            "value": "#FFF5EB",
            "description": "Palette Yellow 10"
          },
          "20": {
            "type": "color",
            "value": "#FFEAD1",
            "description": "Palette Yellow 20"
          },
          "30": {
            "type": "color",
            "value": "#FFE2C2",
            "description": "Palette Yellow 30"
          },
          "40": {
            "type": "color",
            "value": "#FFC17A",
            "description": "Palette Yellow 40"
          },
          "50": {
            "type": "color",
            "value": "#FFB561",
            "description": "Palette Yellow 50"
          },
          "60": {
            "type": "color",
            "value": "#ff9d2e",
            "description": "Palette Yellow 60"
          },
          "70": {
            "type": "color",
            "value": "#FF8F0F",
            "description": "Palette Yellow 70"
          },
          "80": {
            "type": "color",
            "value": "#E57A00",
            "description": "Palette Yellow 80"
          },
          "90": {
            "type": "color",
            "value": "#DB7400",
            "description": "Palette Yellow 90"
          },
          "100": {
            "type": "color",
            "value": "#C76A00",
            "description": "Palette Yellow 100"
          }
        },
        "green": {
          "10": {
            "type": "color",
            "value": "#EBFFEF",
            "description": "Palette Green 10"
          },
          "20": {
            "type": "color",
            "value": "#E0F5E5",
            "description": "Palette Green 20"
          },
          "30": {
            "type": "color",
            "value": "#D0F0D7",
            "description": "Palette Green 30"
          },
          "40": {
            "type": "color",
            "value": "#6CD085",
            "description": "Palette Green 40"
          },
          "50": {
            "type": "color",
            "value": "#36AB53",
            "description": "Palette Green 50"
          },
          "60": {
            "type": "color",
            "value": "#2a8440",
            "description": "Palette Green 60"
          },
          "70": {
            "type": "color",
            "value": "#247036",
            "description": "Palette Green 70"
          },
          "80": {
            "type": "color",
            "value": "#1E5D2D",
            "description": "Palette Green 80"
          },
          "90": {
            "type": "color",
            "value": "#1A5127",
            "description": "Palette Green 90"
          },
          "100": {
            "type": "color",
            "value": "#164622",
            "description": "Palette Green 100"
          }
        },
        "blue": {
          "10": {
            "type": "color",
            "value": "#EFF3FB",
            "description": "Palette Blue 10"
          },
          "20": {
            "type": "color",
            "value": "#DFE7F7",
            "description": "Palette Blue 20"
          },
          "30": {
            "type": "color",
            "value": "#CEDCF2",
            "description": "Palette Blue 30"
          },
          "40": {
            "type": "color",
            "value": "#81A4DF",
            "description": "Palette Blue 40"
          },
          "50": {
            "type": "color",
            "value": "#5986D4",
            "description": "Palette Blue 50"
          },
          "60": {
            "type": "color",
            "value": "#4074ce",
            "description": "Palette Blue 60"
          },
          "70": {
            "type": "color",
            "value": "#3063BB",
            "description": "Palette Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#2C5AAA",
            "description": "Palette Blue 80"
          },
          "90": {
            "type": "color",
            "value": "#274F96",
            "description": "Palette Blue 90"
          },
          "100": {
            "type": "color",
            "value": "#254D92",
            "description": "Palette Blue 100"
          }
        },
        "gray": {
          "10": {
            "type": "color",
            "value": "#f8f9fA",
            "description": "Color Gray 10"
          },
          "20": {
            "type": "color",
            "value": "#f0f3f6",
            "description": "Color Gray 20"
          },
          "30": {
            "type": "color",
            "value": "#dfe5ec",
            "description": "Color Gray 30"
          },
          "40": {
            "type": "color",
            "value": "#d1d9e2",
            "description": "Color Gray 40"
          },
          "50": {
            "type": "color",
            "value": "#c0ccd8",
            "description": "Color Gray 50"
          },
          "60": {
            "type": "color",
            "value": "#b1bfce",
            "description": "Color Gray 60"
          },
          "70": {
            "type": "color",
            "value": "#7d94ac",
            "description": "Color Gray 70"
          },
          "80": {
            "type": "color",
            "value": "#6d87a2",
            "description": "Color Gray 80"
          },
          "90": {
            "type": "color",
            "value": "#5f758c",
            "description": "Color Gray 90"
          },
          "100": {
            "type": "color",
            "value": "#28333f",
            "description": "Color Gray 100"
          }
        },
        "purple": {
          "10": {
            "value": "#F8F1F8",
            "type": "color",
            "description": "Color Purple 10"
          },
          "20": {
            "value": "#F0E4F1",
            "type": "color",
            "description": "Color Purple 20"
          },
          "30": {
            "value": "#E5D0E7",
            "type": "color",
            "description": "Color Purple 30"
          },
          "40": {
            "value": "#D0AAD4",
            "type": "color",
            "description": "Color Purple 40"
          },
          "50": {
            "value": "#B87EBE",
            "type": "color",
            "description": "Color Purple 50"
          },
          "60": {
            "value": "#954F9C",
            "type": "color",
            "description": "Color Purple 60"
          },
          "70": {
            "value": "#85468B",
            "type": "color",
            "description": "Color Purple 70"
          },
          "80": {
            "value": "#713C76",
            "type": "color",
            "description": "Color Purple 80"
          },
          "90": {
            "value": "#5E3262",
            "type": "color",
            "description": "Color Purple 90"
          },
          "100": {
            "value": "#47264A",
            "type": "color",
            "description": "Color Purple 100"
          }
        },
        "black": {
          "type": "color",
          "value": "#000000",
          "description": "Color Black"
        },
        "transparent": {
          "type": "color",
          "value": "transparent",
          "description": "Color Transparent"
        },
        "transparent-virtual": {
          "type": "color",
          "value": "rgba(0, 0, 0, 0.01)",
          "description": "Virtually transparent for enabling focus shadows"
        },
        "white": {
          "type": "color",
          "value": "#ffffff",
          "description": "Color White"
        }
      },
      "font-family": {
        "heading": {
          "type": "fontFamilies",
          "value": "'Source Sans 3', 'Helvetica', 'Arial', sans-serif",
          "description": "Global font-family for headings"
        },
        "label": {
          "type": "fontFamilies",
          "value": "'Source Sans 3', 'Helvetica', 'Arial', sans-serif",
          "description": "Global font-family for label text"
        },
        "body": {
          "type": "fontFamilies",
          "value": "'Source Sans 3', 'Helvetica', 'Arial', sans-serif",
          "description": "Global font-family for body text"
        },
        "monospace": {
          "type": "fontFamilies",
          "value": "'Source Code Pro', 'Courier New', 'Courier', monospace",
          "description": "Global font-family for monospace text"
        }
      },
      "font-size": {
        "1": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.1}",
          "description": "Font Size 1"
        },
        "2": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.2}",
          "description": "Font Size 2"
        },
        "3": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.3}",
          "description": "Font Size 3"
        },
        "4": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.4}",
          "description": "Font Size 4"
        },
        "5": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.5}",
          "description": "Font Size 5"
        },
        "6": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.6}",
          "description": "Font Size 6"
        },
        "7": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.7}",
          "description": "Font Size 7"
        },
        "8": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.8}",
          "description": "Font Size 8"
        },
        "9": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.9}",
          "description": "Font Size 9"
        },
        "10": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.10}",
          "description": "Font Size 10"
        },
        "11": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.11}",
          "description": "Font Size 11"
        },
        "12": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.12}",
          "description": "Font Size 12"
        },
        "base": {
          "type": "fontSizes",
          "value": "16",
          "description": "Base font size used in typographic scale"
        }
      },
      "font-scale": {
        "fixed": {
          "1": {
            "type": "sizing",
            "value": "11",
            "description": "Fixed font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "14",
            "description": "Fixed font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "16",
            "description": "Fixed font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "20",
            "description": "Fixed font scale size 4"
          },
          "5": {
            "type": "sizing",
            "value": "24",
            "description": "Fixed font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "32",
            "description": "Fixed font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "40",
            "description": "Fixed font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "56",
            "description": "Fixed font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "64",
            "description": "Fixed font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "72",
            "description": "Fixed font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "84",
            "description": "Fixed font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "96",
            "description": "Fixed font scale size 12"
          }
        },
        "harmonic": {
          "1": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.2} / {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.3} / {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.4} / {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "{jds.font-size.base}",
            "description": "Harmonic font scale size typically corresponding to the base font size at 100%"
          },
          "5": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.4} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.5} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.6} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.7} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.8} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.9} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.10} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.11} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 12"
          },
          "ratios": {
            "selection": {
              "type": "sizing",
              "value": "{jds.font-scale.harmonic.ratios.1250-major-third}",
              "description": "Current selection of harmonic ratio to be applied to harmonic font scale"
            },
            "1067-minor-second": {
              "type": "sizing",
              "value": "1.067",
              "description": "Scale 1.067 - Minor Second"
            },
            "1125-major-second": {
              "type": "sizing",
              "value": "1.125",
              "description": "Scale 1.125 - Major Second"
            },
            "1200-minor-third": {
              "type": "sizing",
              "value": "1.200",
              "description": "Scale 1.200 - Minor Third"
            },
            "1250-major-third": {
              "type": "sizing",
              "value": "1.250",
              "description": "Scale 1.250 - Major Third"
            },
            "1333-perfect-fourth": {
              "type": "sizing",
              "value": "1.333",
              "description": "Scale 1.333 - Perfect Fourth"
            },
            "1414-augmented-fourth": {
              "type": "sizing",
              "value": "1.414",
              "description": "Scale 1.414 - Augmented Fourth"
            },
            "1500-perfect-fifth": {
              "type": "sizing",
              "value": "1.500",
              "description": "Scale 1.500 - Perfect Fifth"
            },
            "1618-golden-ratio": {
              "type": "sizing",
              "value": "1.618",
              "description": "Scale 1.618 - Golden Ratio"
            }
          }
        },
        "progressive": {
          "1": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.2} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.3} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.4} + (round((3-2) / 4) - 1) * 2",
            "description": "Progressive font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "{jds.font-size.base}",
            "description": "Progressive font scale size typically corresponding to the base font size at 100%"
          },
          "5": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.4} + (round((5-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.5} + (round((6-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.6} + (round((7-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.7} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.8} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.9} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.10} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.11} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 12"
          }
        },
        "progressive-ratio": {
          "1": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.2} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive ratio font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.3} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive ratio font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.4} + (round((3-2) / 4) - 1) * 2",
            "description": "Progressive ratio font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "{jds.font-size.base}",
            "description": "Progressive ratio font scale size typically corresponding to the base font size at 100%"
          },
          "5": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.4} + (round((5-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.5} + (round((6-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.6} + (round((7-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.7} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.8} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.9} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.10} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.11} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 12"
          }
        }
      },
      "line-height": {
        "fixed": {
          "1": {
            "type": "lineHeights",
            "value": "15",
            "description": "Fixed line-height size 1"
          },
          "2": {
            "type": "lineHeights",
            "value": "18",
            "description": "Fixed line-height size 2"
          },
          "3": {
            "type": "lineHeights",
            "value": "20",
            "description": "Fixed line-height size 3"
          },
          "4": {
            "type": "lineHeights",
            "value": "25",
            "description": "Fixed line-height size 4"
          },
          "5": {
            "type": "lineHeights",
            "value": "30",
            "description": "Fixed line-height size 5"
          },
          "6": {
            "type": "lineHeights",
            "value": "40",
            "description": "Fixed line-height size 6"
          },
          "7": {
            "type": "lineHeights",
            "value": "50",
            "description": "Fixed line-height size 7"
          },
          "8": {
            "type": "lineHeights",
            "value": "70",
            "description": "Fixed line-height size 8"
          },
          "9": {
            "type": "lineHeights",
            "value": "80",
            "description": "Fixed line-height size 9"
          },
          "10": {
            "type": "lineHeights",
            "value": "90",
            "description": "Fixed line-height size 10"
          },
          "11": {
            "type": "lineHeights",
            "value": "105",
            "description": "Fixed line-height size 11"
          },
          "12": {
            "type": "lineHeights",
            "value": "120",
            "description": "Fixed line-height size 12"
          }
        },
        "heading": {
          "type": "lineHeights",
          "value": "125%",
          "description": "Global line-height for headings"
        },
        "body": {
          "type": "lineHeights",
          "value": "150%",
          "description": "Global line-height for body text"
        },
        "label": {
          "type": "lineHeights",
          "value": "150%",
          "description": "Global line-height for label text"
        },
        "monospace": {
          "type": "lineHeights",
          "value": "125%",
          "description": "Global line-height for monospace text"
        }
      },
      "text-case": {
        "capitalize": {
          "type": "textCase",
          "value": "capitalize",
          "description": "Global capitalize for text."
        },
        "none": {
          "type": "textCase",
          "value": "none",
          "description": "Global default case for text."
        },
        "uppercase": {
          "type": "textCase",
          "value": "uppercase",
          "description": "Global uppercase for text."
        }
      },
      "font-weight": {
        "100-thin": {
          "type": "fontWeights",
          "value": "100",
          "description": "Global font-weight property for Thin (Hairline) text per OpenType specification. In case of mapping error, replace value with precise weight name. This weight is rarely used."
        },
        "200-extralight": {
          "type": "fontWeights",
          "value": "200",
          "description": "Global font-weight property for Extra Light (Ultra Light) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "300-light": {
          "type": "fontWeights",
          "value": "300",
          "description": "Global font-weight property for Light text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "400-normal": {
          "type": "fontWeights",
          "value": "400",
          "description": "Global font-weight property for Normal (Regular, Book) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "500-medium": {
          "type": "fontWeights",
          "value": "500",
          "description": "Global font-weight property for Medium text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "600-semibold": {
          "type": "fontWeights",
          "value": "600",
          "description": "Global font-weight property for Semi Bold (Demi Bold) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "700-bold": {
          "type": "fontWeights",
          "value": "700",
          "description": "Global font-weight property for Bold text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "800-extrabold": {
          "type": "fontWeights",
          "value": "800",
          "description": "Global font-weight property for Extra Bold (Ultra Bold) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "900-black": {
          "type": "fontWeights",
          "value": "900",
          "description": "Global font-weight property for Black (Heavy) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "950-extrablack": {
          "type": "fontWeights",
          "value": "950",
          "description": "Global font-weight property for Extra Black (Ultra Black) text per OpenType specification. In case of mapping error, replace value with precise weight name. This weight is rarely used."
        }
      },
      "letter-spacing": {
        "normal": {
          "type": "letterSpacing",
          "value": "0",
          "description": "Global default letter-spacing for text."
        }
      },
      "media-query": {
        "phone": {
          "type": "sizing",
          "value": "580",
          "description": "Small form factor for devices such as a phone in a vertical orientation."
        },
        "phone-wide": {
          "type": "sizing",
          "value": "768",
          "description": "Medium form factor for devices such as a phone in horizontal orientation or a tablet in vertical orientation."
        },
        "tablet": {
          "type": "sizing",
          "value": "1024",
          "description": "Large form factor for devices similar to a tablet in landscape orientation and smaller than desktop."
        }
      },
      "paragraph-spacing": {
        "normal": {
          "type": "paragraphSpacing",
          "value": "0",
          "description": "Global default paragraph spacing for text."
        }
      },
      "size": {
        "1": {
          "type": "sizing",
          "value": "8",
          "description": "1x unit of 8-pixel grid"
        },
        "2": {
          "type": "sizing",
          "value": "16",
          "description": "2x unit of 8-pixel grid"
        },
        "3": {
          "type": "sizing",
          "value": "24",
          "description": "3x unit of 8-pixel grid"
        },
        "4": {
          "type": "sizing",
          "value": "32",
          "description": "4x unit of 8-pixel grid"
        },
        "5": {
          "type": "sizing",
          "value": "48",
          "description": "6x unit of 8-pixel grid"
        },
        "6": {
          "type": "sizing",
          "value": "64",
          "description": "8x unit of 8-pixel grid"
        },
        "7": {
          "type": "sizing",
          "value": "80",
          "description": "10x unit of 8-pixel grid"
        }
      },
      "space": {
        "1": {
          "type": "spacing",
          "value": "2",
          "description": "One quarter unit of 8-pixel grid"
        },
        "2": {
          "type": "spacing",
          "value": "4",
          "description": "One half unit of 8-pixel grid"
        },
        "3": {
          "type": "spacing",
          "value": "8",
          "description": "Unit of 8-pixel grid"
        },
        "4": {
          "type": "spacing",
          "value": "12",
          "description": "150% of base unit of 8-pixel grid"
        },
        "5": {
          "type": "spacing",
          "value": "16",
          "description": "200% of base unit of 8-pixel grid"
        },
        "6": {
          "type": "spacing",
          "value": "20",
          "description": "250% of base unit of 8-pixel grid"
        },
        "7": {
          "type": "spacing",
          "value": "24",
          "description": "300% of base unit of 8-pixel grid"
        },
        "8": {
          "type": "spacing",
          "value": "28",
          "description": "350% of base unit of 8-pixel grid"
        },
        "9": {
          "type": "spacing",
          "value": "32",
          "description": "400% of base unit of 8-pixel grid"
        },
        "10": {
          "type": "spacing",
          "value": "40",
          "description": "500% of base unit of 8-pixel grid"
        },
        "11": {
          "type": "spacing",
          "value": "48",
          "description": "600% of base unit of 8-pixel grid"
        },
        "12": {
          "type": "spacing",
          "value": "64",
          "description": "800% of base unit of 8-pixel grid"
        },
        "13": {
          "type": "spacing",
          "value": "80",
          "description": "1000% of base unit of 8-pixel grid"
        },
        "14": {
          "type": "spacing",
          "value": "96",
          "description": "1200% of base unit of 8-pixel grid"
        },
        "15": {
          "type": "spacing",
          "value": "80",
          "description": "2000% of base unit of 8-pixel grid"
        }
      },
      "text-decoration": {
        "line-through": {
          "type": "textDecoration",
          "value": "line-through",
          "description": "Global line-through decoration for text."
        },
        "none": {
          "type": "textDecoration",
          "value": "none",
          "description": "Global default decoration for text."
        },
        "underline": {
          "type": "textDecoration",
          "value": "underline",
          "description": "Global underline decoration for text."
        }
      },
      "duration": {
        "immediate": {
          "value": "70ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "faster": {
          "value": "110ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "fast": {
          "value": "150ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "moderate": {
          "value": "250ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "slow": {
          "value": "400ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "slower": {
          "value": "700ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        }
      },
      "transition": {
        "ease-in": {
          "value": "cubic-bezier({jds.cubic-bezier.accelerate})",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "ease-out": {
          "value": "cubic-bezier({jds.cubic-bezier.decelerate})",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "ease-in-out": {
          "value": "cubic-bezier({jds.cubic-bezier.accelerate-decelerate})",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "ease-none": {
          "value": "cubic-bezier(0, 0, 1, 1)",
          "type": "other",
          "description": "Experimental token for motion duration"
        }
      },
      "cubic-bezier": {
        "accelerate": {
          "value": "0.65, 0, 1, 1",
          "type": "other",
          "description": "Experimental token for cubic bezier"
        },
        "decelerate": {
          "value": "0, 0, 0.35, 1",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "accelerate-decelerate": {
          "value": "0.5, 0, 0.5, 1",
          "type": "other",
          "description": "Experimental token for motion duration"
        }
      }
    }
  },
  "Consumer/Semantic": {
    "jds": {
      "font": {
        "display": {
          "value": {
            "fontFamily": "{jds.font-family.heading}",
            "fontWeight": "{jds.font-weight.400-normal}",
            "lineHeight": "{jds.line-height.body}",
            "fontSize": "{jds.font-size.8}",
            "letterSpacing": "{jds.letter-spacing.normal}",
            "paragraphSpacing": "{jds.paragraph-spacing.normal}",
            "textCase": "{jds.text-case.none}",
            "textDecoration": "{jds.text-decoration.none}"
          },
          "type": "typography",
          "description": "Font properties for display text"
        },
        "heading": {
          "1": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.7}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 1 text"
          },
          "2": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.6}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 2 text"
          },
          "3": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 3 text"
          },
          "4": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.4}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 4 text"
          },
          "5": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 5 text"
          },
          "6": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 6 text"
          },
          "7": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 7 text"
          },
          "eyebrow": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.4}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.uppercase}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for eyebrow text typically used in conjunction with a heading"
          },
          "slug": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.uppercase}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for slug text typically used as a section title within a vertical navigation"
          }
        },
        "body": {
          "large": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for large body text"
          },
          "medium": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for medium body text (formerly body-1)"
          },
          "small": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for small body text (formerly body-2)"
          },
          "x-small": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for x-small body text (formerly body-3)"
          }
        },
        "label": {
          "large": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for large label text"
          },
          "large-strong": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for strong large label text"
          },
          "large-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for large label text with a stronger font weight"
          },
          "medium": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for medium label text"
          },
          "medium-strong": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for strong medium label text"
          },
          "medium-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for label text with a stronger font weight"
          },
          "small": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for label text."
          },
          "small-strong": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for small label text with a strong font weight"
          },
          "small-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for small label text with a stronger font weight"
          },
          "x-small": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for x-small label text"
          },
          "x-small-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for extra small label text with a stronger font weight"
          }
        },
        "code": {
          "medium": {
            "value": {
              "fontFamily": "{jds.font-family.monospace}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.monospace}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for medium code text"
          }
        },
        "link": {
          "default": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for default state of link text"
          },
          "hover": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.underline}"
            },
            "type": "typography",
            "description": "Font properties for hover state of link text"
          },
          "active": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.underline}"
            },
            "type": "typography",
            "description": "Font properties for active state of link text"
          },
          "visited": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for visited state of link text"
          }
        },
        "button": {
          "label": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for button text label"
          }
        },
        "toggle-button": {
          "label": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for toggle button text label"
          }
        },
        "table": {
          "header-cell": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for table header cell text."
          },
          "data-cell": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for table data cell text."
          },
          "data-cell-action": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for table data cell text."
          }
        },
        "progress": {
          "step-inner-text": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for progress step inner text"
          }
        }
      },
      "focus": {
        "shadow": {
          "regular": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "{jds.color.border.focus}66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Focus shadow using 40% opacity of focus color for use over light backgrounds"
          },
          "inverse": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "{jds.color.white}66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Focus shadow for use over dark backgrounds"
          },
          "error": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "{jds.color.border.error}66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Error focus shadow for use over light backgrounds"
          },
          "error-inverse": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "#e69acf66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Error focus shadow for use over dark backgrounds"
          }
        }
      },
      "color": {
        "background": {
          "neutral": {
            "value": "{jds.color.palette-neutral.20}",
            "type": "color",
            "description": "Neutral background color"
          },
          "neutral-hover": {
            "value": "{jds.color.palette-neutral.30}",
            "type": "color",
            "description": "Neutral background color hover state"
          },
          "neutral-active": {
            "value": "{jds.color.palette-neutral.40}",
            "type": "color",
            "description": "Neutral background color active state"
          },
          "neutral-subtle": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Light neutral background color"
          },
          "neutral-subtle-hover": {
            "value": "{jds.color.palette-neutral.10}",
            "type": "color",
            "description": "Light neutral background color hover state"
          },
          "neutral-subtle-active": {
            "value": "{jds.color.palette-neutral.20}",
            "type": "color",
            "description": "Light neutral background color active state"
          },
          "neutral-inverse": {
            "value": "{jds.color.palette-neutral.100}",
            "type": "color",
            "description": "Neutral inverse background color"
          },
          "page": {
            "value": "{jds.color.palette-neutral.10}",
            "type": "color",
            "description": "Background color for page"
          },
          "track": {
            "value": "{jds.color.palette-neutral.40}",
            "type": "color",
            "description": "Default background color for track element"
          },
          "progress": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Color used for progress indicators"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Background color for error"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Background color for information"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Background color for success"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Background color for warning"
          },
          "error-subtle": {
            "value": "{jds.color.red.10}",
            "type": "color",
            "description": "Subtle background color for error"
          },
          "information-subtle": {
            "value": "{jds.color.blue.10}",
            "type": "color",
            "description": "Subtle background color for information"
          },
          "success-subtle": {
            "value": "{jds.color.green.10}",
            "type": "color",
            "description": "Subtle background color for success"
          },
          "warning-subtle": {
            "value": "{jds.color.yellow.10}",
            "type": "color",
            "description": "Subtle background color for warning"
          },
          "selected": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Color indicating a selected state"
          },
          "selected-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Color indicating a selected hover state"
          },
          "selected-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Color indicating a selected active state"
          },
          "selected-subtle": {
            "value": "{jds.color.palette-brand.10}",
            "type": "color",
            "description": "Lighter color indicating a selected state"
          },
          "selected-subtle-hover": {
            "value": "{jds.color.palette-brand.20}",
            "type": "color",
            "description": "Lighter color indicating a selected hover state"
          },
          "selected-subtle-active": {
            "value": "{jds.color.palette-brand.30}",
            "type": "color",
            "description": "Lighter color indicating a selected active state"
          },
          "input": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Background color for inputs"
          },
          "input-hover": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Background color for hover state of inputs"
          },
          "input-active": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Background color for hover state of inputs"
          },
          "input-read-only": {
            "value": "{jds.color.palette-neutral.20}",
            "type": "color",
            "description": "Background color for read-only state of inputs"
          },
          "brand": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "To be written"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of background"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of background"
          },
          "brand-subtle": {
            "value": "{jds.color.palette-brand.10}",
            "type": "color",
            "description": "Light brand color for background"
          },
          "brand-subtle-hover": {
            "value": "{jds.color.palette-brand.20}",
            "type": "color",
            "description": "Light brand color for background hover"
          },
          "brand-subtle-active": {
            "value": "{jds.color.palette-brand.30}",
            "type": "color",
            "description": "Light brand color for background active"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for background"
          },
          "brand-accent-1-hover": {
            "value": "{jds.color.palette-brand-accent-1.70}",
            "type": "color",
            "description": "Brand accent 1 color for hover state of background"
          },
          "brand-accent-1-active": {
            "value": "{jds.color.palette-brand-accent-1.80}",
            "type": "color",
            "description": "Brand accent 1 color for hover state of background"
          },
          "brand-accent-1-subtle": {
            "value": "{jds.color.palette-brand-accent-1.10}",
            "type": "color",
            "description": "Light brand accent 1 color"
          },
          "brand-accent-1-subtle-hover": {
            "value": "{jds.color.palette-brand-accent-1.20}",
            "type": "color",
            "description": "Light brand accent 1 color hover"
          },
          "brand-accent-1-subtle-active": {
            "value": "{jds.color.palette-brand-accent-1.30}",
            "type": "color",
            "description": "Light brand accent 1 color active"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for background"
          },
          "brand-accent-2-hover": {
            "value": "{jds.color.palette-brand-accent-2.70}",
            "type": "color",
            "description": "Brand accent 2 color for hover state of background"
          },
          "brand-accent-2-active": {
            "value": "{jds.color.palette-brand-accent-2.80}",
            "type": "color",
            "description": "Brand accent 2 color for active state of background"
          },
          "brand-accent-2-subtle": {
            "value": "{jds.color.palette-brand-accent-2.10}",
            "type": "color",
            "description": "Light brand accent 2 color for background"
          },
          "brand-accent-2-subtle-hover": {
            "value": "{jds.color.palette-brand-accent-2.20}",
            "type": "color",
            "description": "Light brand accent 2 color for hover state of background"
          },
          "brand-accent-2-subtle-active": {
            "value": "{jds.color.palette-brand-accent-2.30}",
            "type": "color",
            "description": "Light brand accent 2 color for active state of background"
          }
        },
        "border": {
          "regular": {
            "value": "{jds.color.palette-neutral.70}",
            "type": "color",
            "description": "Regular border color for UI elements"
          },
          "inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse border color for UI elements"
          },
          "focus": {
            "value": "{jds.color.trusted-blue.50}",
            "type": "color",
            "description": "Border color used to indicate focus state"
          },
          "focus-inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse border color used to indicate focus state over a dark background"
          },
          "separator": {
            "value": "{jds.color.palette-neutral.40}",
            "type": "color",
            "description": "Border color of separator"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Border color for error"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Border color for information"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Border color for success"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Border color for warning"
          },
          "selected": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Border color indicating a selected state"
          },
          "selected-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Border color indicating a selected hover state"
          },
          "selected-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Border color indicating a selected active state"
          },
          "input": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for inputs"
          },
          "brand": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Brand color for border"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of border"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of border"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for border"
          },
          "brand-accent-1-hover": {
            "value": "{jds.color.palette-brand-accent-1.70}",
            "type": "color",
            "description": "Brand accent 1 color for hover state of border"
          },
          "brand-accent-1-active": {
            "value": "{jds.color.palette-brand-accent-1.80}",
            "type": "color",
            "description": "Brand accent 1 color for active state of border"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for border"
          },
          "brand-accent-2-hover": {
            "value": "{jds.color.palette-brand-accent-2.70}",
            "type": "color",
            "description": "Brand accent 2 color for hover state of border"
          },
          "brand-accent-2-active": {
            "value": "{jds.color.palette-brand-accent-2.70}",
            "type": "color",
            "description": "Brand accent 2 color for active state of border"
          }
        },
        "text": {
          "regular": {
            "value": "{jds.color.palette-neutral.100}",
            "type": "color",
            "description": "Regular text color"
          },
          "subtle": {
            "value": "{jds.color.palette-neutral.90}",
            "type": "color",
            "description": "Subtle text color"
          },
          "inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse text color"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Error color for text"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Information color for text"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Success color for text"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Warning color for text"
          },
          "required": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Color for indicating required action"
          },
          "brand": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Brand color for text"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of text"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of text"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for text"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for text"
          },
          "link-default": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Link text color"
          },
          "link-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Link text color hover"
          },
          "link-active": {
            "value": "{jds.color.text.brand-active}",
            "type": "color",
            "description": "Link text color active"
          },
          "link-visited": {
            "value": "{jds.color.purple.60}",
            "type": "color",
            "description": "Link text color visited"
          },
          "link-visited-hover": {
            "value": "{jds.color.purple.70}",
            "type": "color",
            "description": "Link text color visited hover"
          },
          "link-visited-active": {
            "value": "{jds.color.purple.80}",
            "type": "color",
            "description": "Link text color visited active"
          },
          "link-default-inverse": {
            "value": "{jds.color.palette-brand.40}",
            "type": "color",
            "description": "Link text color on dark background"
          },
          "link-inverse-hover": {
            "value": "{jds.color.palette-brand.30}",
            "type": "color",
            "description": "Text color for hover state of link on dark background"
          },
          "link-inverse-active": {
            "value": "{jds.color.palette-brand.20}",
            "type": "color",
            "description": "Text color for active state of link on dark background"
          }
        },
        "icon": {
          "regular": {
            "value": "{jds.color.palette-neutral.100}",
            "type": "color",
            "description": "Regular icon color"
          },
          "subtle": {
            "value": "{jds.color.palette-neutral.90}",
            "type": "color",
            "description": "Subtle color for icons"
          },
          "inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse icon color"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Error color for icon"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Information color for icon"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Success color for icon"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Warning color for icon"
          },
          "brand": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Brand action color of icon"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of icon"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of icon"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for icon"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for icon"
          },
          "link-default": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Link icon color"
          },
          "link-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Link icon color hover"
          },
          "link-active": {
            "value": "{jds.color.text.brand-active}",
            "type": "color",
            "description": "Link icon color active"
          },
          "link-visited": {
            "value": "{jds.color.purple.60}",
            "type": "color",
            "description": "Link icon color visited"
          },
          "link-visited-hover": {
            "value": "{jds.color.purple.70}",
            "type": "color",
            "description": "Link icon color visited hover"
          },
          "link-visited-active": {
            "value": "{jds.color.purple.80}",
            "type": "color",
            "description": "Link icon color visited active"
          },
          "link-default-inverse": {
            "value": "{jds.color.palette-brand.40}",
            "type": "color",
            "description": "Link icon color on dark background"
          }
        },
        "interaction-overlay": {
          "hover": {
            "value": "#ffffff33",
            "type": "color",
            "description": "Overlay to indicate hover state when a background color cannot change, such as images"
          },
          "active": {
            "value": "#ffffff66",
            "type": "color",
            "description": "Overlay to indicate active state when a background color cannot change, such as images"
          }
        },
        "shadow": {
          "type": "color",
          "value": "rgba(40, 51, 63, 0.24)",
          "description": "Used for color and opacity of shadows"
        }
      },
      "utility": {
        "color": {
          "shadow": {
            "focus": {
              "regular": {
                "value": "{jds.color.border.focus}66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for focus shadow. Will be deprecated."
              },
              "inverse": {
                "value": "{jds.color.white}66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for focus shadow inverse. Will be deprecated."
              },
              "error": {
                "value": "{jds.color.border.error}66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for error focus shadow. Will be deprecated."
              },
              "error-inverse": {
                "value": "#e69acf66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for error focus shadow inverse. Will be deprecated."
              }
            }
          }
        }
      },
      "elevation": {
        "surface": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Primary background for the UI"
        },
        "surface-hover": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color",
          "description": "Primary background hover state for the UI"
        },
        "surface-active": {
          "value": "{jds.color.palette-neutral.20}",
          "type": "color",
          "description": "Primary background active state for the UI"
        },
        "surface-recessed": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color",
          "description": "Secondary background for the UI often used for grouping items"
        },
        "surface-raised": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Primary background for for cards that can be moved"
        },
        "surface-raised-hover": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color",
          "description": "Primary background hover state for for cards that can be moved"
        },
        "surface-raised-active": {
          "value": "{jds.color.palette-neutral.20}",
          "type": "color",
          "description": "Primary background active state for for cards that can be moved"
        },
        "surface-overlay": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background for elements positioned above the UI such as modals, dropdown menus, dialogues, etc., as well as the background for cards that are in a dragged state."
        },
        "surface-overlay-hover": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background hover state for elements positioned above the UI such as modals, dropdown menus, dialogues, etc., as well as the background for cards that are in a dragged state."
        },
        "surface-overlay-active": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background active state for elements positioned above the UI such as modals, dropdown menus, dialogues, etc., as well as the background for cards that are in a dragged state."
        },
        "shadow": {
          "low": {
            "value": {
              "x": "0",
              "y": "1",
              "blur": "1",
              "spread": "0",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow for lowest elevation"
          },
          "raised": {
            "value": {
              "x": "0",
              "y": "2",
              "blur": "4",
              "spread": "0",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Default shadow used for most components"
          },
          "overlay": {
            "value": {
              "x": "0",
              "y": "4",
              "blur": "8",
              "spread": "0",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow for highest level"
          },
          "overflow": {
            "value": {
              "x": "0",
              "y": "1",
              "blur": "6",
              "spread": "2.5",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow used when content scrolls underneath a surface"
          },
          "inset": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "1",
              "spread": "1",
              "color": "{jds.color.shadow}",
              "type": "innerShadow"
            },
            "type": "boxShadow",
            "description": "Inset shadow"
          },
          "none": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "0",
              "color": "{jds.color.transparent}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow value for none"
          }
        }
      },
      "opacity-disabled": {
        "value": ".4",
        "type": "opacity",
        "description": "Opacity for disabled state"
      },
      "size": {
        "input-height": {
          "value": "40",
          "type": "sizing",
          "description": "Height for inputs and related components including fields, selects, and buttons"
        }
      }
    }
  },
  "Consumer/Component": {
    "jds": {
      "accordion": {
        "card-header-title-color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Color for the title text of the accordion card header"
        },
        "card-header-title-color-text-hover": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Color for the hover state of title text of the accordion card header"
        },
        "card-header-title-color-text-active": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Color for the active state of title text of the accordion card header"
        },
        "card-header-color-action-icon": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Color for accordion card header action icon"
        },
        "card-header-color-action-icon-hover": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Color for the hover state of the accordion card header action icon"
        },
        "card-header-color-action-icon-active": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Color for the active state of the accordion card header action icon"
        },
        "card-header-color-background": {
          "value": "{jds.elevation.surface}",
          "type": "color",
          "description": "Background color for accordion card header"
        },
        "card-header-color-background-hover": {
          "value": "{jds.elevation.surface-hover}",
          "type": "color",
          "description": "Background color for hover state of accordion card header"
        },
        "card-header-color-background-active": {
          "value": "{jds.elevation.surface-active}",
          "type": "color",
          "description": "Background color for active state of accordion card header"
        },
        "card-content-color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color",
          "description": "Background color for accordion card content container"
        },
        "card-header-padding": {
          "value": "5 {jds.space.4} 5",
          "type": "spacing",
          "description": "Padding for the accordion card header"
        },
        "card-header-gap": {
          "value": "{jds.space.2}",
          "type": "spacing",
          "description": "Gap between elements in the accordion card header"
        },
        "card-content-padding": {
          "value": "{jds.space.5} {jds.space.5} {jds.space.5} 36",
          "type": "spacing",
          "description": "Padding for the accordion card content container"
        },
        "item-divider-color-border": {
          "value": "{jds.color.border.separator}",
          "type": "color",
          "description": "Border color for divider between accordion item cards"
        },
        "card-header": {
          "height": {
            "value": "{jds.input-field.height}",
            "type": "sizing",
            "description": "Height for accordion card header"
          }
        }
      },
      "checkbox": {
        "selector": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for checkbox selector"
            },
            "background-hover": {
              "value": "{jds.color.background.neutral-subtle-hover}",
              "type": "color",
              "description": "Background color for hover state of checkbox selector"
            },
            "background-active": {
              "value": "{jds.color.background.neutral-subtle-active}",
              "type": "color",
              "description": "Background color for active state of checkbox selector"
            },
            "border": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for checkbox selector"
            },
            "border-hover": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for hover state of checkbox selector"
            },
            "border-active": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for active state of checkbox selector"
            },
            "border-error": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error state of checkbox selector"
            },
            "background-selected": {
              "value": "{jds.color.background.selected}",
              "type": "color",
              "description": "Background color for selected state of checkbox selector"
            },
            "background-selected-hover": {
              "value": "{jds.color.background.selected-hover}",
              "type": "color",
              "description": "Background color for selected state hover of checkbox selector"
            },
            "background-selected-active": {
              "value": "{jds.color.background.selected-active}",
              "type": "color",
              "description": "Background color for selected state active of checkbox selector"
            },
            "background-selected-error": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Background color for selected state of checkbox selector"
            },
            "border-selected": {
              "value": "{jds.color.border.selected}",
              "type": "color",
              "description": "Border color for selected state of checkbox selector"
            },
            "border-selected-hover": {
              "value": "{jds.color.border.selected-hover}",
              "type": "color",
              "description": "Border color for selected state hover of checkbox selector"
            },
            "border-selected-active": {
              "value": "{jds.color.border.selected-active}",
              "type": "color",
              "description": "Border color for selected state active of checkbox selector"
            }
          },
          "icon": {
            "color": {
              "icon-selected": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for selected state of checkbox selector icon"
              },
              "icon-selected-hover": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for selected hover state of checkbox selector icon"
              },
              "icon-selected-active": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for selected active state of checkbox selector icon"
              }
            },
            "size": {
              "value": "{jds.size.2} - 2",
              "type": "dimension",
              "description": "Size for checkbox selector icon"
            }
          },
          "size": {
            "value": "{jds.size.2}",
            "type": "dimension",
            "description": "Size for checkbox selector"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for checkbox selector"
          },
          "border-width": {
            "value": "{jds.border-width.regular}",
            "type": "borderWidth",
            "description": "Border width for checkbox selector"
          }
        },
        "group": {
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for the checkbox group container"
          },
          "gap-vertical": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap between vertically-aligned checkbox group elements"
          },
          "gap-horizontal": {
            "value": "{jds.space.5}",
            "type": "spacing",
            "description": "Gap between horizontally-aligned checkbox group elements"
          }
        }
      },
      "radio": {
        "selector": {
          "border-width": {
            "value": "{jds.border-width.regular}",
            "type": "borderWidth"
          },
          "color-background": {
            "value": "{jds.elevation.surface}",
            "type": "color",
            "description": "Background color for radio selector"
          },
          "color-background-hover": {
            "value": "{jds.elevation.surface-hover}",
            "type": "color",
            "description": "Background color for hover state of radio selector"
          },
          "color-background-active": {
            "value": "{jds.elevation.surface-active}",
            "type": "color",
            "description": "Background color for active state of radio selector"
          },
          "color-border-error": {
            "value": "{jds.color.border.error}",
            "type": "color",
            "description": "Border color for error state of radio selector"
          },
          "color-background-selected": {
            "value": "{jds.color.background.selected}",
            "type": "color",
            "description": "Background color for selected state of radio selector"
          },
          "color-background-selected-hover": {
            "value": "{jds.color.background.selected-hover}",
            "type": "color",
            "description": "Background color for selected state hover of radio selector"
          },
          "color-background-selected-active": {
            "value": "{jds.color.background.selected-active}",
            "type": "color",
            "description": "Background color for selected state active of radio selector"
          },
          "inner": {
            "color-background-selected": {
              "value": "{jds.elevation.surface}",
              "type": "color",
              "description": "Background color for selected state of radio selector inner"
            },
            "color-background-selected-hover": {
              "value": "{jds.elevation.surface-hover}",
              "type": "color",
              "description": "Background color for selected state hover of radio selector inner"
            },
            "color-background-selected-active": {
              "value": "{jds.elevation.surface-active}",
              "type": "color",
              "description": "Background color for selected state active of radio selector inner"
            },
            "size-selected": {
              "value": "{jds.size.1}",
              "type": "dimension",
              "description": "Size for inner element of radio selector"
            }
          },
          "color-background-selected-error": {
            "value": "{jds.color.background.error}",
            "type": "color",
            "description": "Background color for selected state of radio selector"
          },
          "color-border": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for radio selector"
          },
          "color-border-hover": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for hover state of radio selector"
          },
          "color-border-active": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for active state of radio selector"
          },
          "color-border-selected": {
            "value": "{jds.color.border.selected}",
            "type": "color",
            "description": "Border color for selected state of radio selector"
          },
          "color-border-selected-hover": {
            "value": "{jds.color.border.selected-hover}",
            "type": "color",
            "description": "Border color for selected state hover of radio selector"
          },
          "color-border-selected-active": {
            "value": "{jds.color.border.selected-active}",
            "type": "color",
            "description": "Border color for selected state active of radio selector"
          },
          "size": {
            "value": "{jds.size.2}",
            "type": "dimension",
            "description": "Size for radio selector"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for radio selector"
          }
        },
        "group": {
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for the radio group container"
          },
          "gap-vertical": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap between vertically-aligned radio group elements"
          },
          "gap-horizontal": {
            "value": "{jds.space.5}",
            "type": "spacing",
            "description": "Gap between horizontally-aligned radio group elements"
          }
        }
      },
      "avatar": {
        "color-text-inverse": {
          "value": "{jds.color.text.inverse}",
          "type": "color"
        },
        "color-background": {
          "value": "{jds.color.background.brand}",
          "type": "color"
        },
        "color-background-hover": {
          "value": "{jds.color.background.brand-hover}",
          "type": "color"
        },
        "color-background-active": {
          "value": "{jds.color.background.brand-active}",
          "type": "color"
        },
        "color-border": {
          "value": "{jds.color.border.brand}",
          "type": "color"
        },
        "size": {
          "value": "32px",
          "type": "sizing"
        },
        "header-color-border-focus": {
          "value": "{jds.color.border.focus-inverse}",
          "type": "color"
        }
      },
      "badge": {
        "notification": {
          "color": {
            "background": {
              "value": "{jds.color.background.error}",
              "type": "color"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color"
            }
          },
          "border-width": {
            "value": "{jds.border-width.regular}",
            "type": "borderWidth",
            "description": "Border width for notification badge"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.low}",
            "type": "boxShadow",
            "description": "Shadow for notification badge"
          }
        },
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.error}",
              "type": "color",
              "description": "Background color for error badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for error badge"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for error badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for error badge"
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.information}",
              "type": "color",
              "description": "Background color for information badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for information badge"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for information badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for information badge"
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.success}",
              "type": "color",
              "description": "Background color for success badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for success badge"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for success badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for success badge"
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.warning}",
              "type": "color",
              "description": "Background color for warning badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for warning badge"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for warning badge"
          }
        },
        "inverse": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for inverse badge"
            },
            "border": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for inverse badge"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for inverse badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for inverse badge"
          }
        },
        "neutral": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral}",
              "type": "color",
              "description": "Background color for neutral badge"
            },
            "border": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for neutral badge"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for neutral badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for neutral badge"
          }
        },
        "color": {
          "background": {
            "value": "{jds.color.background.brand}",
            "type": "color"
          },
          "border": {
            "value": "{jds.color.border.inverse}",
            "type": "color",
            "description": "Border color for badge"
          },
          "text": {
            "value": "{jds.color.text.inverse}",
            "type": "color"
          }
        },
        "height": {
          "value": "23",
          "type": "sizing",
          "description": "Test value"
        },
        "min-width": {
          "value": "{jds.badge.height}",
          "type": "sizing",
          "description": "Test value"
        },
        "border-radius": {
          "value": "{jds.border-radius.round}",
          "type": "borderRadius"
        },
        "border-width": {
          "value": "{jds.border-width.none}",
          "type": "borderWidth",
          "description": "Border width for badge"
        },
        "padding": {
          "value": "0 6",
          "type": "spacing"
        }
      },
      "breadcrumb": {
        "divider-color-text": {
          "value": "{jds.color.text.subtle}",
          "type": "color"
        }
      },
      "button": {
        "primary": {
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for primary button (formerly filled button)"
          },
          "color-text-hover": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for hover state of primary button (formerly filled button)"
          },
          "color-text-active": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for active state of primary button (formerly filled button)"
          },
          "color-icon": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon of primary button (formerly filled button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon hover state of primary button (formerly filled button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon active state of primary button (formerly filled button)"
          },
          "color-background": {
            "value": "{jds.color.background.brand-accent-1}",
            "type": "color",
            "description": "Background color for primary button (formerly filled button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-accent-1-hover}",
            "type": "color",
            "description": "Background color for hover state of primary button (formerly filled button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-accent-1-active}",
            "type": "color",
            "description": "Background color for active state of primary button (formerly filled button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for primary button (formerly filled button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of primary button (formerly filled button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of primary button (formerly filled button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for primary button (formerly filled button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of primary button (formerly filled button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of primary button (formerly filled button)"
          },
          "height-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Height for small primary button"
          },
          "height-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for medium primary button"
          },
          "icon-size": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of primary button"
          },
          "label-font": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textDecoration": "{jds.text-decoration.none}",
              "textCase": "{jds.text-case.none}"
            },
            "type": "typography",
            "description": "Font for primary button label"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for primary button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for primary button"
          },
          "padding": {
            "value": "0 {jds.space.5}",
            "type": "spacing",
            "description": "Padding for primary button"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Spacing for gap between elements within primary button"
          }
        },
        "secondary": {
          "color-text": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Text color for secondary button (formerly outlined button)"
          },
          "color-text-hover": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for hover state of secondary button (formerly outlined button)"
          },
          "color-text-active": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for active state of secondary button (formerly outlined button)"
          },
          "color-icon": {
            "value": "{jds.color.icon.brand}",
            "type": "color",
            "description": "Icon color for secondary button (formerly outlined button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for hover state of secondary button (formerly outlined button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for active state of secondary button (formerly outlined button)"
          },
          "color-background": {
            "type": "color",
            "value": "{jds.color.background.neutral-subtle}",
            "description": "Background color for secondary button (formerly outlined button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-hover}",
            "type": "color",
            "description": "Background color for hover state of secondary button (formerly outlined button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-active}",
            "type": "color",
            "description": "Background color for active state of secondary button (formerly outlined button)"
          },
          "color-border": {
            "value": "{jds.color.border.brand}",
            "type": "color",
            "description": "Border color for secondary button (formerly outlined button)"
          },
          "color-border-hover": {
            "value": "{jds.color.border.brand-hover}",
            "type": "color",
            "description": "Border color for hover state of secondary button (formerly outlined button)"
          },
          "color-border-active": {
            "value": "{jds.color.border.brand-active}",
            "type": "color",
            "description": "Border color for active state of secondary button (formerly outlined button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for secondary button (formerly outlined button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of secondary button (formerly outlined button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of secondary button (formerly outlined button)"
          },
          "height-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Height for small secondary button"
          },
          "height-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for medium secondary button"
          },
          "icon-size": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of secondary button"
          },
          "label-font": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textDecoration": "{jds.text-decoration.none}",
              "textCase": "{jds.text-case.none}"
            },
            "type": "typography",
            "description": "Font for secondary button label"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for secondary button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for secondary button"
          },
          "padding": {
            "value": "0 {jds.space.5}",
            "type": "spacing",
            "description": "Padding for secondary button"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Spacing for gap between elements within secondary button"
          }
        },
        "tertiary": {
          "color-text": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Text color for tertiary button (formerly text button)"
          },
          "color-text-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Text color for hover state of tertiary button (formerly text button)"
          },
          "color-text-active": {
            "value": "{jds.color.text.brand-active}",
            "type": "color",
            "description": "Text color for active state of tertiary button (formerly text button)"
          },
          "color-icon": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Color of icon for tertiary button (formerly text button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Color of icon for hover state of tertiary button (formerly text button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.brand-active}",
            "type": "color",
            "description": "Color of icon for active state of tertiary button (formerly text button)"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for tertiary button (formerly text button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of tertiary button (formerly text button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.neutral-subtle-active}",
            "type": "color",
            "description": "Text color for active state of tertiary button (formerly text button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for tertiary button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of tertiary button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of tertiary button (formerly text button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for tertiary button (formerly text button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of tertiary button (formerly text button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of tertiary button (formerly text button)"
          },
          "height-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Height for small tertiary button"
          },
          "height-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for medium tertiary button"
          },
          "icon-size": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of tertiary button"
          },
          "label-font": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textDecoration": "{jds.text-decoration.none}",
              "textCase": "{jds.text-case.none}"
            },
            "type": "typography",
            "description": "Font for tertiary button label"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for tertiary button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for tertiary button"
          },
          "padding": {
            "value": "0 {jds.space.5}",
            "type": "spacing",
            "description": "Padding for tertiary button"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Spacing for gap between elements within tertiary button"
          }
        }
      },
      "toggle-button": {
        "color": {
          "background": {
            "value": "{jds.elevation.surface}",
            "type": "color",
            "description": "Background color for toggle button"
          },
          "background-hover": {
            "value": "{jds.elevation.surface-hover}",
            "type": "color",
            "description": "Background color for hover state of toggle button"
          },
          "background-active": {
            "value": "{jds.elevation.surface-active}",
            "type": "color",
            "description": "Background color for active state of toggle button"
          },
          "background-selected": {
            "value": "{jds.color.background.selected}",
            "type": "color",
            "description": "Background color for selected state of toggle button"
          },
          "background-selected-hover": {
            "value": "{jds.color.background.selected-hover}",
            "type": "color",
            "description": "Background color for selected hover state of toggle button"
          },
          "background-selected-active": {
            "value": "{jds.color.background.selected-active}",
            "type": "color",
            "description": "Background color for selected active state of toggle button"
          },
          "border": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for toggle button"
          },
          "text": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Text color for toggle button"
          },
          "text-hover": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Text color for hover state of toggle button"
          },
          "text-active": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Text color for active state of toggle button"
          },
          "text-selected": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Selected text color for toggle button"
          },
          "text-selected-hover": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for selected hover state of toggle button"
          },
          "text-selected-active": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for selected active state of toggle button"
          }
        },
        "left": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for left toggle button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for the left button in a toggle button"
          }
        },
        "center": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for center toggle button"
          },
          "border-radius": {
            "value": "0",
            "type": "borderRadius",
            "description": "Border radius for the center button(s) in a toggle button"
          }
        },
        "right": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for right toggle button"
          },
          "border-radius": {
            "value": "0 {jds.border-radius.regular} {jds.border-radius.regular} 0",
            "type": "borderRadius",
            "description": "Border radius for the right button in a toggle button"
          }
        },
        "height-medium": {
          "value": "{jds.size.input-height}",
          "type": "sizing",
          "description": "Height for medium toggle button"
        },
        "padding": {
          "value": "0 {jds.space.5}",
          "type": "spacing",
          "description": "Padding for toggle button"
        },
        "group": {
          "gap": {
            "value": "-1",
            "type": "spacing",
            "description": "Gap between buttons in toggle button group"
          }
        }
      },
      "validation": {
        "icon-size": {
          "value": "{jds.size.2}",
          "type": "sizing",
          "description": "Size for icon in a validation message"
        },
        "gap": {
          "inner": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between elements in a validation message"
          },
          "bottom": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between bottom-positioned validation and the affected component"
          }
        }
      },
      "date-picker": {
        "calendar": {
          "card": {
            "color-background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color of date picker calendar"
            },
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker calendar card"
            },
            "shadow": {
              "value": "{jds.elevation.shadow.raised}",
              "type": "boxShadow",
              "description": "Shadow for date picker calendar"
            }
          },
          "content": {
            "gap": {
              "value": "{jds.space.2}",
              "type": "spacing",
              "description": "Gap for date picker calendar"
            },
            "padding": {
              "value": "{jds.space.3}",
              "type": "spacing",
              "description": "Padding for date picker calendar"
            }
          },
          "day-month-year": {
            "color-background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color for date picker calendar elements"
            },
            "color-background-hover": {
              "value": "{jds.color.background.neutral-subtle-hover}",
              "type": "color",
              "description": "Background color of hover state for date picker calendar elements"
            },
            "color-background-active": {
              "value": "{jds.color.background.neutral-subtle-active}",
              "type": "color",
              "description": "Background color of actove state for date picker calendar elements"
            },
            "color-background-selected": {
              "value": "{jds.color.background.selected}",
              "type": "color",
              "description": "Background color of selected state for date picker calendar elements"
            },
            "color-background-selected-hover": {
              "value": "{jds.color.background.selected-hover}",
              "type": "color",
              "description": "Background color of selected hover state for date picker calendar elements"
            },
            "color-background-selected-active": {
              "value": "{jds.color.background.selected-active}",
              "type": "color",
              "description": "Background color of selected active state for date picker calendar elements"
            },
            "color-text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Background color of date picker calendar text"
            },
            "color-text-selected": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Color for date picker calendar selected text"
            },
            "range": {
              "color-background-selected": {
                "value": "{jds.color.background.selected-subtle}",
                "type": "color",
                "description": "Background color of selected state for date picker days range"
              },
              "color-background-selected-hover": {
                "value": "{jds.color.background.selected-subtle-hover}",
                "type": "color",
                "description": "Background color of selected hover state for date picker days range"
              },
              "color-background-selected-active": {
                "value": "{jds.color.background.selected-subtle-active}",
                "type": "color",
                "description": "Background color of selected active state for date picker days range"
              }
            },
            "previous-next-month": {
              "color-text": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Color of date picker calendar previous or next month text"
              }
            }
          },
          "today": {
            "color-border": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Border color of date picker calendar today"
            },
            "color-background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of date picker calendar today"
            },
            "color-border-selected": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Border color of date picker calendar today selected"
            },
            "color-background-selected": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of date picker calendar today selected"
            },
            "previous-next-month": {
              "color-border": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Border color of previous or next month for date picker calendar today"
              }
            },
            "border-width": {
              "value": {
                "borderWidthTop": "{jds.border-width.none}",
                "borderWidthRight": "{jds.border-width.none}",
                "borderWidthBottom": "{jds.border-width.thick}",
                "borderWidthLeft": "{jds.border-width.none}"
              },
              "type": "composition",
              "description": "Composition token with individual border width values for date picker calendar today border"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for date picker today"
            }
          },
          "day-content": {
            "gap": {
              "value": "2",
              "type": "spacing",
              "description": "Gap between date picker calendar days content elements"
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for date picker calendar days content"
            }
          },
          "day-row": {
            "gap": {
              "value": "0",
              "type": "spacing",
              "description": "Gap for date picker calendar row"
            }
          },
          "month-year-row": {
            "gap": {
              "value": "AUTO",
              "type": "spacing",
              "description": "Gap for date picker calendar row"
            }
          },
          "month-year-content": {
            "gap": {
              "value": "16",
              "type": "spacing",
              "description": "Gap for month-year selection for the date picker"
            },
            "padding": {
              "value": "0 12",
              "type": "spacing",
              "description": "Padding for date picker calendar month and year selection"
            }
          },
          "month-year": {
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker month element"
            }
          },
          "day": {
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker day"
            },
            "range-start-border-radius": {
              "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker day range start"
            },
            "range-border-radius": {
              "value": "0",
              "type": "borderRadius",
              "description": "Border radius for date picker day range"
            },
            "range-end-border-radius": {
              "value": "0 {jds.border-radius.regular} {jds.border-radius.regular} 0",
              "type": "borderRadius",
              "description": "Border radius for date picker day range end"
            }
          }
        },
        "card": {
          "min-width": {
            "value": "240",
            "type": "sizing",
            "description": "Min-width for the date picker card for consistent width with varying content"
          }
        },
        "elements": {
          "height": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for date picker elements"
          }
        },
        "date-input-field": {
          "month-day": {
            "width": {
              "value": "48",
              "type": "sizing",
              "description": "Width for date picker date two-digit month and day input"
            }
          },
          "year": {
            "width": {
              "value": "64",
              "type": "sizing",
              "description": "Width for date picker date four-digit year input"
            }
          }
        },
        "today": {
          "width": {
            "value": "16",
            "type": "sizing",
            "description": "Width for date picker today container"
          },
          "height": {
            "value": "21",
            "type": "sizing",
            "description": "Height for date picker today container"
          }
        },
        "day": {
          "width": {
            "value": "{jds.date-picker.elements.height}",
            "type": "sizing",
            "description": "Width for date picker day"
          }
        }
      },
      "input-field": {
        "border-width": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for input field"
        },
        "border-width-hover": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for hover state of input field"
        },
        "border-width-active": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for active state of input field"
        },
        "border-width-focus": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for focus state of input field"
        },
        "read-only": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for read-only state of input field"
          }
        },
        "text": {
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-text-read-only": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Color for read-only state of input text"
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for input field"
        },
        "color-background": {
          "value": "{jds.color.background.input}",
          "type": "color",
          "description": "Background color for input field"
        },
        "color-background-hover": {
          "value": "{jds.color.background.input-hover}",
          "type": "color",
          "description": "Background color for hover state of input field"
        },
        "color-background-active": {
          "value": "{jds.color.background.input-active}",
          "type": "color",
          "description": "Background color for active state of input field"
        },
        "color-background-read-only": {
          "value": "{jds.color.background.input-read-only}",
          "type": "color",
          "description": "Background color for read-only state of input field"
        },
        "color-border": {
          "value": "{jds.color.border.input}",
          "type": "color",
          "description": "Color of border for input field"
        },
        "color-border-read-only": {
          "value": "{jds.color.border.input}",
          "type": "color",
          "description": "Color of border for read-only state of input field"
        },
        "placeholder": {
          "color-text": {
            "value": "{jds.color.text.subtle}",
            "type": "color"
          }
        },
        "currency": {
          "color-text": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Color for currency text in a currency input field"
          }
        },
        "height": {
          "value": "{jds.size.input-height}",
          "type": "sizing",
          "description": "Height for input field components"
        },
        "gap": {
          "value": "{jds.space.3}",
          "type": "spacing",
          "description": "Gap for input field"
        },
        "padding": {
          "value": "0 12",
          "type": "spacing",
          "description": "Padding for input field"
        },
        "multiselect-gap": {
          "value": "{jds.space.3}",
          "type": "spacing",
          "description": "Gap for the multiselect container in the input field"
        },
        "compound-field": {
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap between multiple fields in a compound input"
          }
        }
      },
      "dropdown": {
        "list-item": {
          "padding": {
            "value": "0 12",
            "type": "spacing",
            "description": "Padding for dropdown list item"
          },
          "gap": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap for dropdown list item"
          },
          "height": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for dropdown option component"
          },
          "placeholder": {
            "color-text": {
              "value": "{jds.color.text.subtle}",
              "type": "color"
            }
          },
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-background": {
            "value": "{jds.elevation.surface}",
            "type": "color"
          },
          "color-background-hover": {
            "value": "{jds.elevation.surface-hover}",
            "type": "color"
          },
          "color-background-active": {
            "value": "{jds.elevation.surface-active}",
            "type": "color"
          },
          "color-text-selected": {
            "value": "{jds.color.text.inverse}",
            "type": "color"
          },
          "color-background-selected": {
            "value": "{jds.color.background.selected}",
            "type": "color"
          },
          "color-background-selected-hover": {
            "value": "{jds.color.background.selected-hover}",
            "type": "color"
          },
          "color-background-selected-active": {
            "value": "{jds.color.background.selected-active}",
            "type": "color"
          }
        },
        "card": {
          "color": {
            "background": {
              "value": "{jds.elevation.surface}",
              "type": "color",
              "description": "Background color for dropdown card container"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for dropdown card container"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for dropdown card container"
          }
        },
        "gap": {
          "value": "{jds.space.1}",
          "type": "spacing",
          "description": "Gap between dropdown card container and its trigger element"
        },
        "max-height": {
          "value": "300",
          "type": "sizing",
          "description": "Maximum height for a dropdown container"
        }
      },
      "label": {
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Text color for labels"
        },
        "color-text-secondary": {
          "value": "{jds.color.text.subtle}",
          "type": "color",
          "description": "Text color for secondary form labels"
        },
        "help": {
          "color-icon": {
            "value": "{jds.color.icon.brand}",
            "type": "color",
            "description": "Color for the help icon used with labels"
          },
          "icon": {
            "size": {
              "value": "{jds.icon.size-medium}",
              "type": "sizing",
              "description": "Size of help icon in label"
            }
          }
        },
        "required": {
          "color-text": {
            "value": "{jds.color.text.required}",
            "type": "color",
            "description": "Required indicator, most typically an asterisk."
          }
        },
        "gap": {
          "inner": {
            "value": "{jds.space.1}",
            "type": "spacing",
            "description": "Gap between elements in the main line of the label base component"
          },
          "top": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between an top-positioned base label and the component it describes"
          },
          "side": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between an side-positioned base label and the selector it describes"
          },
          "side-large": {
            "value": "{jds.space.7}",
            "type": "spacing",
            "description": "Gap between the base inline label and the component it describes"
          }
        }
      },
      "text-area-field": {
        "padding": {
          "value": "6 12",
          "type": "spacing",
          "description": "Padding for text area input field"
        }
      },
      "phone-field": {
        "country-icon": {
          "border": {
            "value": {
              "style": "solid",
              "width": "{jds.border-width.regular}",
              "color": "{jds.color.white}"
            },
            "type": "border",
            "description": "Border for country icon in the phone field component"
          },
          "shadow": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "2",
              "spread": "1",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Drop shadow for the phone field country icon"
          },
          "border-radius": {
            "value": "2",
            "type": "borderRadius",
            "description": "Border radius for the country icon in the phone field component"
          }
        }
      },
      "icon-button": {
        "primary": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small primary icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium primary icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small primary icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium primary icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for primary icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for primary icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon of primary icon button (formerly filled icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon hover state of primary icon button (formerly filled icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon active state of primary icon button (formerly filled icon button)"
          },
          "color-background": {
            "value": "{jds.color.background.brand}",
            "type": "color",
            "description": "Background color for primary icon button (formerly filled icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-hover}",
            "type": "color",
            "description": "Background color for hover state of primary icon button (formerly filled icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-active}",
            "type": "color",
            "description": "Background color for active state of primary icon button (formerly filled icon button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for primary icon button (formerly filled icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of primary icon button (formerly filled icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of primary icon button (formerly filled icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for primary icon button(formerly filled button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of primary icon button (formerly filled button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of primary icon button (formerly filled button)"
          }
        },
        "secondary": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small secondary icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium secondary icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small secondary icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium secondary icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for secondary icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for secondary icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.brand}",
            "type": "color",
            "description": "Icon color for secondary icon button (formerly outlined icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for hover state of secondary icon button (formerly outlined icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for active state of secondary icon button (formerly outlined icon button)"
          },
          "color-background": {
            "type": "color",
            "value": "{jds.color.background.neutral-subtle}",
            "description": "Background color for secondary icon button (formerly outlined icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-hover}",
            "type": "color",
            "description": "Background color for hover state of secondary icon button (formerly outlined icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-active}",
            "type": "color",
            "description": "Background color for active state of secondary icon button (formerly outlined icon button)"
          },
          "color-border": {
            "value": "{jds.color.border.brand}",
            "type": "color",
            "description": "Border color for secondary icon button (formerly outlined icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.border.brand-hover}",
            "type": "color",
            "description": "Border color for hover state of secondary icon button (formerly outlined icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.border.brand-active}",
            "type": "color",
            "description": "Border color for active state of secondary icon button (formerly outlined icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for secondary icon button (formerly outlined button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of secondary icon button (formerly outlined button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of secondary icon button (formerly outlined button)"
          }
        },
        "tertiary": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small tertiary icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium tertiary icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small tertiary icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium tertiary icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for tertiary icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for tertiary icon button"
          },
          "color-icon": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Color of icon for tertiary icon button (formerly text icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Color of icon for hover state of tertiary icon button (formerly text icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.brand-active}",
            "type": "color",
            "description": "Color of icon for active state of tertiary icon button (formerly text icon button)"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for tertiary icon button (formerly text icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of tertiary icon button (formerly text icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.neutral-subtle-active}",
            "type": "color",
            "description": "Text color for active state of tertiary icon button (formerly text icon button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for tertiary icon button (formerly text icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of tertiary icon button (formerly text icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of tertiary icon button (formerly text icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for tertiary icon button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of tertiary icon button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of tertiary icon button (formerly text button)"
          }
        },
        "neutral": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small neutral icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium neutral icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small neutral icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium neutral icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for neutral icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for neutral icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.regular}",
            "type": "color",
            "description": "Color of icon for neutral icon button (formerly black icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.regular}",
            "type": "color",
            "description": "Color of icon for hover state of neutral icon button (formerly black icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.regular}",
            "type": "color",
            "description": "Color of icon for active state of neutral icon button (formerly black icon button)"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for neutral icon button (formerly black icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of neutral icon button (formerly black icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.neutral-subtle-active}",
            "type": "color",
            "description": "Text color for active state of neutral icon button (formerly black icon button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for neutral icon button (formerly black icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of neutral icon button (formerly black icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of neutral icon button (formerly black icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for neutral icon button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of neutral icon button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of neutral icon button (formerly text button)"
          }
        },
        "inverse": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small inverse icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium inverse icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small inverse icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium inverse icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for inverse icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for inverse icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color of icon for inverse icon button"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color of icon for hover state of inverse icon button"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color of icon for active state of inverse icon button"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for inverse icon button"
          },
          "color-background-hover": {
            "value": "{jds.color.interaction-overlay.hover}",
            "type": "color",
            "description": "Background color for hover state of inverse icon button"
          },
          "color-background-active": {
            "value": "{jds.color.interaction-overlay.active}",
            "type": "color",
            "description": "Text color for active state of inverse icon button"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for inverse icon button"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of inverse icon button"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of inverse icon button"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for inverse icon button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of inverse icon button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of inverse icon button (formerly text button)"
          }
        }
      },
      "card": {
        "color-background": {
          "value": "{jds.elevation.surface}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        }
      },
      "footer": {
        "color-background": {
          "value": "{jds.color.background.brand-accent-2}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color"
        }
      },
      "header": {
        "height": {
          "value": "56px",
          "type": "sizing",
          "description": "Height for header"
        },
        "logo-height": {
          "value": "40",
          "type": "sizing",
          "description": "Equivalent to 2.5rem at 16px root. Need to add rem conversion."
        },
        "avatar-size": {
          "value": "28px",
          "type": "sizing",
          "description": "Avatar size when in header"
        },
        "consumer": {
          "height-phone": {
            "value": "48",
            "type": "sizing",
            "description": "Height for consumer header phone."
          },
          "color-border-bottom": {
            "value": "{jds.color.border.brand}",
            "type": "color"
          }
        },
        "color-background": {
          "value": "{jds.color.background.brand-accent-2}",
          "type": "color",
          "description": "Default header background uses the alternate brand color."
        },
        "color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Default text color for header."
        },
        "search-color-background": {
          "value": "{jds.color.interaction-overlay.hover}",
          "type": "color"
        },
        "search-color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Color for text in header search"
        },
        "logo-color-background": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Color for logo in header"
        },
        "title-color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Color for title in header"
        },
        "icon-color-background": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background color for icon buttons in header"
        },
        "icon-color-icon": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Icon color for icon buttons in header"
        },
        "icon-color-icon-inverse": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Icon color for icon buttons in header"
        },
        "label-color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Color for labels in header"
        },
        "subheader-height": {
          "value": "40",
          "type": "sizing",
          "description": "Equivalent of 2.5rem with root of 16px."
        },
        "border-bottom": {
          "value": "0",
          "type": "borderWidth"
        }
      },
      "icon": {
        "size-small": {
          "value": "14px",
          "type": "sizing",
          "description": "Size of small icon"
        },
        "size-medium": {
          "value": "16px",
          "type": "sizing",
          "description": "Size of medium icon"
        },
        "size-large": {
          "value": "20px",
          "type": "sizing",
          "description": "Size of large icon"
        }
      },
      "info-label": {
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.error}",
              "type": "color",
              "description": "Background color for error info label"
            },
            "border": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error info label"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for error info label"
            },
            "icon": {
              "value": "{jds.color.icon.inverse}",
              "type": "color",
              "description": "Icon color for error info label"
            }
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.information}",
              "type": "color",
              "description": "Background color for information info label"
            },
            "border": {
              "value": "{jds.color.border.information}",
              "type": "color",
              "description": "Border color for information info label"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for information info label"
            },
            "icon": {
              "value": "{jds.color.icon.inverse}",
              "type": "color",
              "description": "Icon color for information info label"
            }
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.success}",
              "type": "color",
              "description": "Background color for success info label"
            },
            "border": {
              "value": "{jds.color.border.success}",
              "type": "color",
              "description": "Border color for success info label"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for success info label"
            },
            "icon": {
              "value": "{jds.color.icon.inverse}",
              "type": "color",
              "description": "Icon color for success info label"
            }
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.warning}",
              "type": "color",
              "description": "Background color for warning info label"
            },
            "border": {
              "value": "{jds.color.border.warning}",
              "type": "color",
              "description": "Border color for warning info label"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning info label"
            },
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for warning info label"
            }
          }
        },
        "neutral": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral}",
              "type": "color",
              "description": "Background color for neutral info label"
            },
            "border": {
              "value": "{jds.color.palette-neutral.10}",
              "type": "color",
              "description": "Border color for neutral info label"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for neutral info label"
            },
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for neutral info label"
            }
          }
        },
        "height": {
          "value": "23",
          "type": "sizing"
        },
        "border-radius": {
          "value": "{jds.border-radius.round}",
          "type": "borderRadius",
          "description": "Border radius for info label"
        },
        "padding": {
          "value": "0 {jds.space.3}",
          "type": "spacing",
          "description": "Padding for info label"
        },
        "border-width": {
          "value": "{jds.border-width.regular}",
          "type": "borderWidth",
          "description": "Border width for info label"
        }
      },
      "layout": {
        "page-content-area-max-width": {
          "value": "720px",
          "type": "sizing",
          "description": "Maximum of the page content area."
        }
      },
      "progress-bar": {
        "status": {
          "color": {
            "text": {
              "value": "{jds.color.text.subtle}",
              "type": "color",
              "description": "Text color for progress bar status"
            },
            "background": {
              "value": "{jds.color.background.brand}",
              "type": "color",
              "description": "Background color for progress bar status indicator"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of the progress bar status indicator"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of progress bar status indicator"
          }
        },
        "track": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral}",
              "type": "color",
              "description": "Background color for progress bar track"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of the progress bar track"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of progress bar track"
          }
        },
        "label": {
          "color": {
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for progress bar label"
            }
          }
        },
        "color-background-hover": {
          "value": "{jds.color.background.brand}",
          "type": "color"
        },
        "color-background-complete-hover": {
          "value": "{jds.color.background.brand-hover}",
          "type": "color"
        }
      },
      "progress-step": {
        "node": {
          "completed": {
            "color": {
              "background": {
                "value": "{jds.color.background.brand}",
                "type": "color",
                "description": "Background color of completed state of progress step node"
              },
              "background-hover": {
                "value": "{jds.color.background.brand-hover}",
                "type": "color",
                "description": "Background color of completed hover state of progress step node"
              },
              "background-active": {
                "value": "{jds.color.background.brand-active}",
                "type": "color",
                "description": "Background color of completed active state of progress step node"
              },
              "border": {
                "value": "{jds.color.border.brand}",
                "type": "color",
                "description": "Border color of completed state of progress step node"
              },
              "icon": {
                "value": "{jds.color.icon.inverse}",
                "type": "color",
                "description": "Color for icon of completed state of progress step node"
              },
              "icon-hover": {
                "value": "{jds.color.icon.inverse}",
                "type": "color",
                "description": "Color for icon hover state of completed state of progress step node"
              },
              "icon-active": {
                "value": "{jds.color.icon.inverse}",
                "type": "color",
                "description": "Color for icon active state of completed state of progress step node"
              }
            },
            "size": {
              "value": "20",
              "type": "sizing",
              "description": "Size of completed node for progress step"
            },
            "border-radius": {
              "value": "{jds.border-radius.round}",
              "type": "borderRadius",
              "description": "Border radius for completed node of progress step"
            },
            "border-width": {
              "value": "0",
              "type": "borderWidth",
              "description": "Border width for completed node of progress step"
            }
          },
          "current": {
            "color": {
              "background": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Background color for current node of progress step"
              },
              "background-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Background color for current node hover state of progress step"
              },
              "background-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Background color for current node active state of progress step"
              },
              "border": {
                "value": "{jds.color.border.brand}",
                "type": "color",
                "description": "Border color for current node of progress step"
              }
            },
            "inner": {
              "color": {
                "background": {
                  "value": "{jds.color.background.neutral-subtle}",
                  "type": "color",
                  "description": "Background color for inner current node of progress step"
                },
                "background-hover": {
                  "value": "{jds.color.background.neutral-subtle}",
                  "type": "color",
                  "description": "Background color for hover state of inner current node of progress step"
                },
                "background-active": {
                  "value": "{jds.color.background.neutral-subtle}",
                  "type": "color",
                  "description": "Background color for active state of inner current node of progress step"
                }
              },
              "size": {
                "value": "8",
                "type": "sizing",
                "description": "Inner size of current node for progress step"
              }
            },
            "size": {
              "value": "20",
              "type": "sizing",
              "description": "Size of current node for progress step"
            },
            "border-radius": {
              "value": "{jds.border-radius.round}",
              "type": "borderRadius",
              "description": "Border radius for current node of progress step"
            },
            "border-width": {
              "value": "0",
              "type": "borderWidth",
              "description": "Border width for current node of progress step"
            }
          },
          "next": {
            "color": {
              "background": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for next node state of progress step"
              },
              "background-hover": {
                "value": "{jds.color.background.neutral-subtle-hover}",
                "type": "color",
                "description": "Background color for next node hover state of progress step"
              },
              "background-active": {
                "value": "{jds.color.background.neutral-subtle-active}",
                "type": "color",
                "description": "Background color for next node active state of progress step"
              },
              "border": {
                "value": "{jds.color.border.regular}",
                "type": "color",
                "description": "Border color for next node state of progress step"
              },
              "border-hover": {
                "value": "{jds.color.border.brand-hover}",
                "type": "color",
                "description": "Border color for next node hover state of progress step"
              },
              "border-active": {
                "value": "{jds.color.border.brand-active}",
                "type": "color",
                "description": "Border color for next node active state of progress step"
              },
              "text": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next node state of progress step"
              },
              "text-hover": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next node hover state of progress step"
              },
              "text-active": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next node active state of progress step"
              }
            },
            "size": {
              "value": "20",
              "type": "sizing",
              "description": "Size of next node for progress step"
            },
            "border-radius": {
              "value": "{jds.border-radius.round}",
              "type": "borderRadius",
              "description": "Border radius for next node of progress step"
            },
            "border-width": {
              "value": "0",
              "type": "borderWidth",
              "description": "Border width for next node of progress step"
            }
          }
        },
        "label": {
          "current": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color for current state of progress step label"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color for current hover state of progress step label"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color for current active state of progress step label"
              }
            }
          },
          "completed": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color for completed state of progress step label"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color for completed hover state of progress step label"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color for completed active state of progress step label"
              }
            }
          },
          "next": {
            "color": {
              "text": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next state of progress step label"
              },
              "text-hover": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next hover state of progress step label"
              },
              "text-active": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next active state of progress step label"
              }
            }
          }
        },
        "status": {
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of status indicator for progress step"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of status indicator for progress step"
          },
          "color": {
            "background": {
              "value": "{jds.color.background.progress}",
              "type": "color",
              "description": "Background color for progress step status indicator"
            }
          }
        },
        "track": {
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of track for progress step"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of track for progress step"
          },
          "color": {
            "background": {
              "value": "{jds.color.background.track}",
              "type": "color",
              "description": "Background color for progress step track"
            }
          }
        },
        "vertical-track": {
          "thickness": {
            "value": "2",
            "type": "sizing",
            "description": "Thickness of vertical track for progress step"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius of vertical track for progress step"
          },
          "completed": {
            "color": {
              "background": {
                "value": "{jds.color.background.brand}",
                "type": "color",
                "description": "Background color for progress step completed vertical track"
              }
            }
          },
          "current": {
            "color": {
              "background": {
                "value": "{jds.color.background.track}",
                "type": "color",
                "description": "Background color for progress step completed vertical track"
              }
            }
          },
          "next": {
            "color": {
              "background": {
                "value": "{jds.color.background.track}",
                "type": "color",
                "description": "Background color for progress step completed next vertical track"
              }
            }
          }
        },
        "vertical": {
          "node-label": {
            "gap": {
              "value": "8",
              "type": "spacing",
              "description": "Gap between the node and label for the vertical progress step"
            }
          },
          "node-bar": {
            "gap": {
              "value": "2",
              "type": "spacing",
              "description": "Gap between the node and bar for the vertical progress step"
            }
          }
        },
        "node-label": {
          "gap": {
            "value": "8",
            "type": "spacing",
            "description": "Gap between the node and label for the progress step"
          }
        },
        "node-bar": {
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap between the node and bar for the progress step"
          }
        }
      },
      "progress-phase": {
        "status": {
          "color": {
            "background": {
              "value": "{jds.color.background.progress}",
              "type": "color",
              "description": "Background color for progress phase status indicator"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of status indicator for progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of status indicator for progress phase"
          }
        },
        "track": {
          "color": {
            "background": {
              "value": "{jds.color.background.track}",
              "type": "color",
              "description": "Background color for progress phase track"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of track for progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of track for progress phase"
          }
        },
        "current": {
          "color": {
            "background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of current state of progress phase"
            },
            "background-hover": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of current hover state of progress phase"
            },
            "background-active": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of current active state of progress phase"
            },
            "icon": {
              "value": "{jds.color.icon.brand}",
              "type": "color",
              "description": "Icon color of current state of progress phase"
            },
            "icon-hover": {
              "value": "{jds.color.icon.brand-hover}",
              "type": "color",
              "description": "Icon color of current hover state of progress phase"
            },
            "icon-active": {
              "value": "{jds.color.icon.brand-active}",
              "type": "color",
              "description": "Icon color of current active state of progress phase"
            }
          },
          "icon-container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for current state of progress phase"
              },
              "background-hover": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for current hover state of progress phase"
              },
              "background-active": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for current active state of progress phase"
              }
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for container of icon in current state of progress phase"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for current state icon of progress phase"
            }
          },
          "label": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color of label for current state of progress phase"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color of label for current hover state of progress phase"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color of label for current active state of progress phase"
              }
            }
          },
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for container of current state of progress phase"
          },
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap for container of current state of progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for current state container of progress phase"
          }
        },
        "completed": {
          "icon-container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for completed state of progress phase"
              },
              "background-hover": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for completed hover state of progress phase"
              },
              "background-active": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for completed active state of progress phase"
              }
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for container of icon in completed state of progress phase"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for completed state node of progress phase"
            }
          },
          "color": {
            "background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of completed state of progress phase"
            },
            "background-hover": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of completed hover state of progress phase"
            },
            "background-active": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of completed active state of progress phase"
            },
            "icon": {
              "value": "{jds.color.icon.brand}",
              "type": "color",
              "description": "Icon color of completed state of progress phase"
            },
            "icon-hover": {
              "value": "{jds.color.icon.brand-hover}",
              "type": "color",
              "description": "Icon color of completed hover state of progress phase"
            },
            "icon-active": {
              "value": "{jds.color.icon.brand-active}",
              "type": "color",
              "description": "Icon color of completed active state of progress phase"
            }
          },
          "label": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color of label for completed state of progress phase"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color of label for completed hover state of progress phase"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color of label for completed active state of progress phase"
              }
            }
          },
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for container of completed state of progress phase"
          },
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap for container of completed state of progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for completed state container of progress phase"
          }
        },
        "next": {
          "icon-container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for next state of progress phase"
              },
              "background-hover": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for next hover state of progress phase"
              },
              "background-active": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for next active state of progress phase"
              }
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for container of icon in next state of progress phase"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for next state node of progress phase"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for next state container of progress phase"
          },
          "color": {
            "background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of next state of progress phase"
            },
            "background-hover": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of next hover state of progress phase"
            },
            "background-active": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of next active state of progress phase"
            },
            "icon": {
              "value": "{jds.color.icon.subtle}",
              "type": "color",
              "description": "Icon color of next state of progress phase"
            },
            "icon-hover": {
              "value": "{jds.color.icon.subtle}",
              "type": "color",
              "description": "Icon color of next hover state of progress phase"
            },
            "icon-active": {
              "value": "{jds.color.icon.subtle}",
              "type": "color",
              "description": "Icon color of next active state of progress phase"
            }
          },
          "label": {
            "color": {
              "text": {
                "value": "{jds.color.icon.subtle}",
                "type": "color",
                "description": "Text color of label for next state of progress phase"
              },
              "text-hover": {
                "value": "{jds.color.icon.subtle}",
                "type": "color",
                "description": "Text color of label for next hover state of progress phase"
              },
              "text-active": {
                "value": "{jds.color.icon.subtle}",
                "type": "color",
                "description": "Text color of label for next active state of progress phase"
              }
            }
          },
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for container of next state of progress phase"
          },
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap for container of next state of progress phase"
          }
        },
        "bar-label": {
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap between progress bar and label for progress phase"
          }
        },
        "label": {
          "color": {
            "error": {
              "text": {
                "value": "{jds.color.text.error}",
                "type": "color",
                "description": "Text color for error state of progress phase label"
              }
            }
          }
        },
        "icon": {
          "color": {
            "error": {
              "value": "{jds.color.icon.error}",
              "type": "color",
              "description": "Background color of error state of progress phase icon"
            }
          }
        },
        "label-secondary": {
          "color": {
            "text": {
              "value": "{jds.color.text.subtle}",
              "type": "color",
              "description": "Text color for progress phase secondary label"
            }
          }
        }
      },
      "selector": {
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text-selected": {
          "value": "{jds.color.text.inverse}",
          "type": "color"
        },
        "color-background": {
          "value": "{jds.elevation.surface}",
          "type": "color"
        },
        "color-background-hover": {
          "value": "{jds.elevation.surface-hover}",
          "type": "color"
        },
        "color-background-active": {
          "value": "{jds.elevation.surface-active}",
          "type": "color"
        },
        "color-icon-selected": {
          "value": "{jds.color.icon.inverse}",
          "type": "color"
        },
        "color-background-selected": {
          "value": "{jds.color.background.selected}",
          "type": "color"
        },
        "color-background-selected-hover": {
          "value": "{jds.color.background.selected-hover}",
          "type": "color"
        },
        "color-background-selected-active": {
          "value": "{jds.color.background.selected-active}",
          "type": "color"
        },
        "color-border-selected": {
          "value": "{jds.color.border.selected}",
          "type": "color"
        },
        "color-border-focus": {
          "value": "{jds.color.border.focus}",
          "type": "color"
        },
        "shadow-border": {
          "value": {
            "x": "0",
            "y": "0",
            "blur": "0",
            "spread": "3",
            "color": "{jds.color.background.neutral-subtle}",
            "type": "innerShadow"
          },
          "type": "boxShadow",
          "description": "Inset shadow used as an optional second border for selectors"
        }
      },
      "side-navigation": {
        "color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text-hover": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text-active": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-background-active": {
          "value": "{jds.color.background.brand-accent-1-subtle}",
          "type": "color",
          "description": "In code, value is ‘unset’. Figma does not have this concept."
        },
        "color-border": {
          "value": "{jds.color.border.regular}",
          "type": "color"
        },
        "item": {
          "color-border-selected": {
            "value": "{jds.color.border.selected}",
            "type": "color"
          },
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-text-hover": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-text-active": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "item-color-background": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "In code, value is ‘unset’. Figma does not have this concept."
          },
          "item-color-background-hover": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color"
          },
          "item-color-background-active": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color"
          },
          "item-select-indicator-color-background": {
            "value": "{jds.color.background.brand-accent-1}",
            "type": "color"
          }
        },
        "left-icon-color-icon": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "left-icon-color-icon-active": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "right-icon-color-icon": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "right-icon-color-icon-active": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "accordion-color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "sub-item-color-background": {
          "value": "{jds.side-navigation.accordion-color-background}",
          "type": "color"
        },
        "sub-item-color-background-hover": {
          "value": "{jds.color.background.brand-accent-1-subtle-hover}",
          "type": "color"
        }
      },
      "switch": {
        "handle": {
          "color": {
            "background": {
              "value": "{jds.elevation.surface}",
              "type": "color",
              "description": "Background color for switch handle"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for switch handle"
          },
          "size": {
            "value": "16",
            "type": "sizing",
            "description": "Size for switch button"
          }
        },
        "track": {
          "color": {
            "background-off": {
              "value": "{jds.color.palette-neutral.70}",
              "type": "color",
              "description": "Background color for off state of switch track"
            },
            "background-off-hover": {
              "value": "{jds.color.palette-neutral.80}",
              "type": "color",
              "description": "Background color for hover off state of switch track"
            },
            "background-off-active": {
              "value": "{jds.color.palette-neutral.90}",
              "type": "color",
              "description": "Background color for active off state of switch track"
            },
            "background-on": {
              "value": "{jds.color.background.selected}",
              "type": "color",
              "description": "Background color for the on state of switch track"
            },
            "background-on-hover": {
              "value": "{jds.color.background.selected-hover}",
              "type": "color",
              "description": "Background color for the hover on state of switch track"
            },
            "background-on-active": {
              "value": "{jds.color.background.selected-active}",
              "type": "color",
              "description": "Background color for the active on state of switch track"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for switch track"
          }
        },
        "width": {
          "value": "40px",
          "type": "sizing",
          "description": "Width for switch"
        },
        "height": {
          "value": "20px",
          "type": "sizing",
          "description": "Height for switch"
        },
        "padding": {
          "value": "2",
          "type": "spacing",
          "description": "Padding for switch"
        }
      },
      "tab": {
        "bar-color-background": {
          "value": "{jds.color.transparent}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-text-hover": {
          "value": "{jds.color.text.brand}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-background-hover": {
          "value": "{jds.color.background.brand}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-border-focus": {
          "value": "{jds.color.border.focus}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-border-active": {
          "value": "{jds.color.border.brand-accent-1}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "height": {
          "value": "{jds.size.input-height}",
          "type": "sizing",
          "description": "Height of tab"
        },
        "color": {
          "background": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for tab"
          },
          "background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of tab"
          },
          "background-active": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for active state of tab"
          },
          "background-selected": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for selected state of tab"
          },
          "background-selected-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for selected hover state of tab"
          },
          "background-selected-active": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for selected activ state of tab"
          },
          "text": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for tab"
          },
          "text-hover": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for hover state of tab"
          },
          "text-active": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for active state of tab"
          },
          "text-selected": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for selected state of tab"
          },
          "text-selected-hover": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for selected hover state of tab"
          },
          "text-selected-active": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for selected active state of tab"
          },
          "border-selected": {
            "value": "{jds.color.border.brand-accent-1}",
            "type": "color",
            "description": "Border color for selected state of tab"
          }
        },
        "header": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for tab header"
            },
            "border": {
              "value": "{jds.color.border.separator}",
              "type": "color",
              "description": "Border color for tab header"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for tab header"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Border width for tab header"
          }
        },
        "content": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for tab content container"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for tab content container"
          },
          "padding": {
            "value": "0 12",
            "type": "spacing",
            "description": "Padding for tab content container"
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.none}",
          "type": "borderRadius",
          "description": "Border radius for tab"
        },
        "padding": {
          "value": "0 12",
          "type": "spacing",
          "description": "Padding for tab"
        },
        "border-width-selected": {
          "value": {
            "borderWidthTop": "{jds.border-width.none}",
            "borderWidthRight": "{jds.border-width.none}",
            "borderWidthBottom": "{jds.border-width.thick}",
            "borderWidthLeft": "{jds.border-width.none}"
          },
          "type": "composition",
          "description": "Border width for selected state of tab"
        }
      },
      "table": {
        "title-bar-color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "cell-color-background": {
          "value": "{jds.color.transparent}",
          "type": "color"
        },
        "row-color-background-hover": {
          "value": "{jds.color.background.selected-subtle}",
          "type": "color"
        },
        "no-data-color-text": {
          "value": "{jds.color.text.subtle}",
          "type": "color"
        },
        "card-odd-row-color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "card-even-row-color-background": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color"
        }
      },
      "top-navigation": {
        "color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "item-select-indicator-thickness": {
          "value": "4",
          "type": "sizing",
          "description": "Thickness of the select indicator for top navigation"
        },
        "item": {
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color within a top nav item."
          },
          "color-text-active": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Active text color within a top nav item."
          },
          "select-indicator-color-background": {
            "value": "{jds.color.background.brand-accent-1}",
            "type": "color",
            "description": "Background color of the select indicator within a top nav item."
          },
          "color-background": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Background color of the default state of a top nav item."
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color",
            "description": "Background color of the hover state of a top nav item."
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color",
            "description": "Background color of the active state of a top nav item."
          }
        }
      },
      "slider": {
        "handle": {
          "color": {
            "background": {
              "value": "{jds.color.background.brand}",
              "type": "color",
              "description": "Background color for slider handle"
            },
            "background-hover": {
              "value": "{jds.color.background.brand-hover}",
              "type": "color",
              "description": "Background color for hover state of slider handle"
            },
            "background-active": {
              "value": "{jds.color.background.brand-active}",
              "type": "color",
              "description": "Background color for active state of slider handle"
            },
            "border": {
              "value": "{jds.color.border.brand}",
              "type": "color",
              "description": "Border color for slider handle"
            },
            "border-hover": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for hover state of slider handle"
            },
            "border-active": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for active state of slider handle"
            }
          },
          "current-value": {
            "color": {
              "text": {
                "value": "{jds.color.text.regular}",
                "type": "color",
                "description": "Text color for slider handle value"
              }
            }
          },
          "width": {
            "value": "20",
            "type": "sizing",
            "description": "Width of slider handle"
          },
          "height": {
            "value": "20",
            "type": "sizing",
            "description": "Height of slider handle"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for slider knob"
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for slider handle"
          },
          "border-width-hover": {
            "value": "{jds.border-width.thick}",
            "type": "borderWidth",
            "description": "Border width for hover state of slider handle"
          },
          "border-width-active": {
            "value": "{jds.border-width.thick}",
            "type": "borderWidth",
            "description": "Border width for active state of slider handle"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.low}",
            "type": "boxShadow",
            "description": "Shadow for slider handle"
          }
        },
        "range": {
          "color": {
            "text": {
              "value": "{jds.color.text.subtle}",
              "type": "color",
              "description": "Text color for slider range"
            }
          }
        },
        "filled-track": {
          "color": {
            "background": {
              "value": "{jds.color.background.brand}",
              "type": "color",
              "description": "Background color for slider progress bar"
            }
          },
          "thickness": {
            "value": "2",
            "type": "sizing",
            "description": "Thickness of slider progress indicator"
          }
        },
        "track": {
          "color": {
            "background": {
              "value": "{jds.color.background.track}",
              "type": "color",
              "description": "Background color for slider progress track"
            }
          },
          "thickness": {
            "value": "2",
            "type": "sizing",
            "description": "Thickness of slider track"
          }
        },
        "gap": {
          "value": "12",
          "type": "spacing",
          "description": "Gap between elements of slider"
        }
      },
      "toggle": {
        "field": {
          "color-text": {
            "value": "{jds.color.text.subtle}",
            "type": "color"
          }
        }
      },
      "stepper": {
        "gap": {
          "value": "4",
          "type": "spacing",
          "description": "Gap between elements of stepper"
        },
        "input-field": {
          "height": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for stepper input field"
          },
          "min-width": {
            "value": "{jds.size.4}",
            "type": "sizing",
            "description": "Min-width for stepper input field"
          }
        }
      },
      "tag": {
        "color": {
          "background": {
            "value": "{jds.color.background.neutral}",
            "type": "color",
            "description": "Background color for tag"
          },
          "background-hover": {
            "value": "{jds.color.background.neutral-hover}",
            "type": "color",
            "description": "Background color for hover state of tag"
          },
          "background-active": {
            "value": "{jds.color.background.neutral-active}",
            "type": "color",
            "description": "Background color for active state of tag"
          }
        },
        "icon": {
          "color": {
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Color for tag close icon"
            }
          }
        },
        "padding": {
          "value": "2 {jds.space.3} 3",
          "type": "spacing",
          "description": "Padding for tag"
        },
        "gap": {
          "value": "{jds.space.1}",
          "type": "spacing",
          "description": "Gap for tag"
        },
        "collapsed": {
          "padding": {
            "value": "2 {jds.space.3} 3",
            "type": "spacing",
            "description": "Padding for collapsed tag"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap for collapsed tag"
          }
        },
        "container": {
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap for tag container"
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for tag"
        },
        "min-height": {
          "value": "23",
          "type": "sizing",
          "description": "Min-height for tag"
        },
        "max-width": {
          "value": "98",
          "type": "sizing",
          "description": "Max-width for tag"
        },
        "icon-size": {
          "value": "14",
          "type": "sizing",
          "description": "Size of icon for tag"
        }
      },
      "inline-notification": {
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.error-subtle}",
              "type": "color",
              "description": "Background color for error inline notification"
            },
            "border": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.error}",
              "type": "color",
              "description": "Icon color for error inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for error inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification error icon container"
                }
              }
            }
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.information-subtle}",
              "type": "color",
              "description": "Background color for information inline notification"
            },
            "border": {
              "value": "{jds.color.border.information}",
              "type": "color",
              "description": "Border color for information inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.information}",
              "type": "color",
              "description": "Icon color for information inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for information inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification information icon container"
                }
              }
            }
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.success-subtle}",
              "type": "color",
              "description": "Background color for success inline notification"
            },
            "border": {
              "value": "{jds.color.border.success}",
              "type": "color",
              "description": "Border color for success inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.success}",
              "type": "color",
              "description": "Icon color for success inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for success inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification success icon container"
                }
              }
            }
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.warning-subtle}",
              "type": "color",
              "description": "Background color for warning inline notification"
            },
            "border": {
              "value": "{jds.color.border.warning}",
              "type": "color",
              "description": "Border color for warning inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.warning}",
              "type": "color",
              "description": "Icon color for warning inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification warning icon container"
                }
              }
            }
          }
        },
        "border-width": {
          "value": "{jds.border-width.regular}",
          "type": "borderWidth",
          "description": "Border width for inline notification"
        },
        "close": {
          "container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color for inline notification close container"
              }
            },
            "border-radius": {
              "value": "0 {jds.border-radius.regular} {jds.border-radius.regular} 0",
              "type": "borderRadius",
              "description": "Border radius of close container for inline notification"
            }
          },
          "color": {
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for inline notification close"
            }
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for inline notification"
        },
        "icon": {
          "container": {
            "border-radius": {
              "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius of icon container for inline notification"
            }
          }
        },
        "width": {
          "value": "320",
          "type": "sizing",
          "description": "Width for inline notification"
        },
        "min-height": {
          "value": "40",
          "type": "sizing",
          "description": "Min-height for inline notification"
        },
        "gap": {
          "value": "0",
          "type": "spacing",
          "description": "Gap between elements within inline notification"
        }
      },
      "toast-notification": {
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for error toast notification"
            },
            "border": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for error toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for error toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.error}",
                  "type": "color",
                  "description": "Background color for toast notification error icon container"
                }
              }
            }
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for toast inline notification"
            },
            "border": {
              "value": "{jds.color.border.information}",
              "type": "color",
              "description": "Border color for information toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for information toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for information toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.information}",
                  "type": "color",
                  "description": "Background color for toast notification information icon container"
                }
              }
            }
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for success toast notification"
            },
            "border": {
              "value": "{jds.color.border.success}",
              "type": "color",
              "description": "Border color for success toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for success toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for success toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.success}",
                  "type": "color",
                  "description": "Background color for toast notification success icon container"
                }
              }
            }
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for warning toast notification"
            },
            "border": {
              "value": "{jds.color.border.warning}",
              "type": "color",
              "description": "Border color for warning toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for warning toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.warning}",
                  "type": "color",
                  "description": "Background color for toast notification warning icon container"
                }
              }
            }
          }
        },
        "border-width": {
          "value": "{jds.border-width.regular}",
          "type": "borderWidth",
          "description": "Border width for toast notification"
        },
        "close": {
          "container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color for toast notification close container"
              }
            },
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius of close container for toast notification"
            }
          },
          "color": {
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for toast notification close"
            }
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for toast notification"
        },
        "icon": {
          "container": {
            "border-radius": {
              "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius of icon container for toast notification"
            }
          }
        },
        "width": {
          "value": "320",
          "type": "sizing",
          "description": "Width for toast notification"
        },
        "min-height": {
          "value": "40",
          "type": "sizing",
          "description": "Min-height for toast notification"
        },
        "gap": {
          "value": "12",
          "type": "spacing",
          "description": "Gap between elements within toast notification"
        }
      },
      "tooltip": {
        "color": {
          "background": {
            "value": "{jds.color.background.neutral-inverse}",
            "type": "color",
            "description": "Background color for tooltip"
          },
          "text": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Background color for tooltip"
          },
          "link": {
            "color": {
              "text": {
                "value": "{jds.color.text.link-default-inverse}",
                "type": "color",
                "description": "Text color for tooltip link"
              },
              "text-hover": {
                "value": "{jds.color.text.link-inverse-hover}",
                "type": "color",
                "description": "Text color for hover state of tooltip link"
              },
              "text-active": {
                "value": "{jds.color.text.link-inverse-active}",
                "type": "color",
                "description": "Text color for active state of tooltip link"
              }
            }
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for tooltip"
        },
        "min-height": {
          "value": "31",
          "type": "sizing",
          "description": "Min-height for tooltip"
        },
        "max-width": {
          "value": "350",
          "type": "sizing",
          "description": "Max-width for tooltip"
        },
        "padding": {
          "value": "5 {jds.space.3}",
          "type": "spacing",
          "description": "Padding for tooltip"
        },
        "icon-trigger": {
          "color": {
            "icon": {
              "value": "{jds.color.icon.brand}",
              "type": "color",
              "description": "Color for tooltip help icon"
            }
          }
        }
      }
    }
  },
  "Succeed Insurance/Global": {
    "jds": {
      "border-radius": {
        "regular": {
          "type": "borderRadius",
          "value": "6",
          "description": "Regular border radius (supporting multi-value notation using 1, 2, 3, or 4 values)"
        },
        "round": {
          "type": "borderRadius",
          "value": "9999",
          "description": "Border radius for circular elements. Multi-value notation using 1, 2, 3, or 4 values is supported."
        },
        "none": {
          "value": "0",
          "type": "borderRadius",
          "description": "Zero value for border radius"
        }
      },
      "border-width": {
        "regular": {
          "type": "borderWidth",
          "value": "1",
          "description": "Regular border width"
        },
        "thick": {
          "type": "borderWidth",
          "value": "2",
          "description": "Thick border width"
        },
        "none": {
          "type": "borderWidth",
          "value": "0",
          "description": "Zero border width"
        }
      },
      "color": {
        "cypher-blue": {
          "10": {
            "type": "color",
            "value": "#F5F5FF",
            "description": "Lightest color stop of cypher-blue color."
          },
          "20": {
            "type": "color",
            "value": "#EBECFE",
            "description": "Lighter color stop of cypher-blue color."
          },
          "30": {
            "type": "color",
            "value": "#E2E2FE",
            "description": "Lighter color stop of cypher-blue color."
          },
          "40": {
            "type": "color",
            "value": "#C5C5FC",
            "description": "Lighter color stop of cypher-blue color."
          },
          "50": {
            "type": "color",
            "value": "#8F90FA",
            "description": "Lighter color stop of cypher-blue color."
          },
          "60": {
            "type": "color",
            "value": "#2628F5",
            "description": "Key color cypher-blue color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "#090BC3",
            "description": "Darker color stop of cypher-blue color."
          },
          "80": {
            "type": "color",
            "value": "#070897",
            "description": "Darker color stop of cypher-blue color."
          },
          "90": {
            "type": "color",
            "value": "#06077A",
            "description": "Darker color stop of cypher-blue color."
          },
          "100": {
            "type": "color",
            "value": "#04055D",
            "description": "Darkest color stop of cypher-blue color."
          }
        },
        "palette-brand": {
          "10": {
            "type": "color",
            "value": "{jds.color.cypher-blue.10}",
            "description": "Lightest color stop of brand color."
          },
          "20": {
            "type": "color",
            "value": "{jds.color.cypher-blue.20}",
            "description": "Lighter color stop of brand color."
          },
          "30": {
            "type": "color",
            "value": "{jds.color.cypher-blue.30}",
            "description": "Lighter color stop of brand color."
          },
          "40": {
            "type": "color",
            "value": "{jds.color.cypher-blue.40}",
            "description": "Lighter color stop of brand color."
          },
          "50": {
            "type": "color",
            "value": "{jds.color.cypher-blue.50}",
            "description": "Lighter color stop of brand color."
          },
          "60": {
            "type": "color",
            "value": "{jds.color.cypher-blue.60}",
            "description": "Key color brand color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "{jds.color.cypher-blue.70}",
            "description": "Darker color stop of brand color."
          },
          "80": {
            "type": "color",
            "value": "{jds.color.cypher-blue.80}",
            "description": "Darker color stop of brand color."
          },
          "90": {
            "type": "color",
            "value": "{jds.color.cypher-blue.90}",
            "description": "Darker color stop of brand color."
          },
          "100": {
            "type": "color",
            "value": "{jds.color.cypher-blue.100}",
            "description": "Darkest color stop of brand color."
          }
        },
        "palette-brand-accent-1": {
          "10": {
            "type": "color",
            "value": "{jds.color.purple.10}",
            "description": "Lightest color stop of brand color"
          },
          "20": {
            "type": "color",
            "value": "{jds.color.purple.20}",
            "description": "Lighter color stop of brand color."
          },
          "30": {
            "type": "color",
            "value": "{jds.color.purple.30}",
            "description": "Lighter color stop of brand color."
          },
          "40": {
            "type": "color",
            "value": "{jds.color.purple.40}",
            "description": "Lighter color stop of brand color."
          },
          "50": {
            "type": "color",
            "value": "{jds.color.purple.50}",
            "description": "Lighter color stop of brand color."
          },
          "60": {
            "type": "color",
            "value": "{jds.color.purple.60}",
            "description": "Key color brand color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "{jds.color.purple.70}",
            "description": "Darker color stop of brand color."
          },
          "80": {
            "type": "color",
            "value": "{jds.color.purple.80}",
            "description": "Darker color stop of brand color."
          },
          "90": {
            "type": "color",
            "value": "{jds.color.purple.90}",
            "description": "Darker color stop of brand color."
          },
          "100": {
            "type": "color",
            "value": "{jds.color.purple.100}",
            "description": "Darkest color stop of brand color."
          }
        },
        "palette-brand-accent-2": {
          "10": {
            "type": "color",
            "value": "{jds.color.deep-blue.10}",
            "description": "Lightest color stop of brand color."
          },
          "20": {
            "type": "color",
            "value": "{jds.color.deep-blue.20}",
            "description": "Lighter color stop of brand color."
          },
          "30": {
            "type": "color",
            "value": "{jds.color.deep-blue.30}",
            "description": "Lighter color stop of brand color."
          },
          "40": {
            "type": "color",
            "value": "{jds.color.deep-blue.40}",
            "description": "Lighter color stop of brand color."
          },
          "50": {
            "type": "color",
            "value": "{jds.color.deep-blue.50}",
            "description": "Lighter color stop of brand color."
          },
          "60": {
            "type": "color",
            "value": "{jds.color.deep-blue.60}",
            "description": "Key color brand color from which the lighter and darker values are derived."
          },
          "70": {
            "type": "color",
            "value": "{jds.color.deep-blue.70}",
            "description": "Darker color stop of brand color."
          },
          "80": {
            "type": "color",
            "value": "{jds.color.deep-blue.80}",
            "description": "Darker color stop of brand color."
          },
          "90": {
            "type": "color",
            "value": "{jds.color.deep-blue.90}",
            "description": "Darker color stop of brand color."
          },
          "100": {
            "type": "color",
            "value": "{jds.color.deep-blue.100}",
            "description": "Darkest color stop of brand color."
          }
        },
        "palette-neutral": {
          "10": {
            "type": "color",
            "value": "{jds.color.gray.10}",
            "description": "Lightest color stop of neutral color"
          },
          "20": {
            "type": "color",
            "value": "{jds.color.gray.20}",
            "description": "Lighter color stop of neutral color"
          },
          "30": {
            "type": "color",
            "value": "{jds.color.gray.30}",
            "description": "Lighter color stop of neutral color"
          },
          "40": {
            "type": "color",
            "value": "{jds.color.gray.40}",
            "description": "Lighter color stop of neutral color"
          },
          "50": {
            "type": "color",
            "value": "{jds.color.gray.50}",
            "description": "Lighter color stop of neutral color"
          },
          "60": {
            "type": "color",
            "value": "{jds.color.gray.60}",
            "description": "Lighter color stop of neutral color"
          },
          "70": {
            "type": "color",
            "value": "{jds.color.gray.70}",
            "description": "Lighter color stop of neutral color"
          },
          "80": {
            "type": "color",
            "value": "{jds.color.gray.80}",
            "description": "Lighter color stop of neutral color"
          },
          "90": {
            "type": "color",
            "value": "{jds.color.gray.90}",
            "description": "Lighter color stop of neutral color"
          },
          "100": {
            "type": "color",
            "value": "{jds.color.gray.100}",
            "description": "Darkest color stop of neutral color, often the basis for text color"
          }
        },
        "trusted-blue": {
          "10": {
            "type": "color",
            "value": "#e9f9ff",
            "description": "Trusted Blue 10"
          },
          "20": {
            "type": "color",
            "value": "#cff2ff",
            "description": "Trusted Blue 20"
          },
          "30": {
            "type": "color",
            "value": "#b6ebff",
            "description": "Trusted Blue 30"
          },
          "40": {
            "type": "color",
            "value": "#1fc3ff",
            "description": "Trusted Blue 40"
          },
          "50": {
            "type": "color",
            "value": "#0099d1",
            "description": "Trusted Blue 50"
          },
          "60": {
            "type": "color",
            "value": "#00739d",
            "description": "Trusted Blue 60"
          },
          "70": {
            "type": "color",
            "value": "#006083",
            "description": "Trusted Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#004e6a",
            "description": "Trusted Blue 80"
          },
          "90": {
            "type": "color",
            "value": "#00435c",
            "description": "Trusted Blue 90"
          },
          "100": {
            "type": "color",
            "value": "#00384d",
            "description": "Trusted Blue 100"
          }
        },
        "deep-blue": {
          "10": {
            "type": "color",
            "value": "#F6F7F9",
            "description": "Palette Deep Blue 10"
          },
          "20": {
            "type": "color",
            "value": "#ECF0F3",
            "description": "Palette Deep Blue 20"
          },
          "30": {
            "type": "color",
            "value": "#E0E5EB",
            "description": "Palette Deep Blue 30"
          },
          "40": {
            "type": "color",
            "value": "#8C9FB5",
            "description": "Palette Deep Blue 40"
          },
          "50": {
            "type": "color",
            "value": "#5F7995",
            "description": "Palette Deep Blue 50"
          },
          "60": {
            "type": "color",
            "value": "#3C4C5E",
            "description": "Palette Deep Blue 60"
          },
          "70": {
            "type": "color",
            "value": "#344151",
            "description": "Palette Deep Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#2A3541",
            "description": "Palette Deep Blue 80"
          },
          "90": {
            "type": "color",
            "value": "#242D38",
            "description": "Palette Deep Blue 90"
          },
          "100": {
            "type": "color",
            "value": "#1E262F",
            "description": "Palette Deep Blue 100"
          }
        },
        "teal": {
          "10": {
            "type": "color",
            "value": "#ecf8f8",
            "description": "Teal 10"
          },
          "20": {
            "type": "color",
            "value": "#ddf3f2",
            "description": "Teal 20"
          },
          "30": {
            "type": "color",
            "value": "#cfeded",
            "description": "Teal 30"
          },
          "40": {
            "type": "color",
            "value": "#9edbda",
            "description": "Teal 40"
          },
          "50": {
            "type": "color",
            "value": "#7dcfcd",
            "description": "Teal 50"
          },
          "60": {
            "type": "color",
            "value": "#66c7c5",
            "description": "Teal 60"
          },
          "70": {
            "type": "color",
            "value": "#4cbdbb",
            "description": "Teal Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#41afad",
            "description": "Teal 80"
          },
          "90": {
            "type": "color",
            "value": "#3ba09e",
            "description": "Teal 90"
          },
          "100": {
            "type": "color",
            "value": "#379593",
            "description": "Teal 100"
          }
        },
        "red": {
          "10": {
            "type": "color",
            "value": "#FDF2F2",
            "description": "Palette Red 10"
          },
          "20": {
            "type": "color",
            "value": "#F8D4D3",
            "description": "Palette Red 20"
          },
          "30": {
            "type": "color",
            "value": "#F7CFCE",
            "description": "Palette Red 30"
          },
          "40": {
            "type": "color",
            "value": "#E86F6D",
            "description": "Palette Red 40"
          },
          "50": {
            "type": "color",
            "value": "#E03B38",
            "description": "Palette Red 50"
          },
          "60": {
            "type": "color",
            "value": "#c4221f",
            "description": "Palette Red 60"
          },
          "70": {
            "type": "color",
            "value": "#B01F1C",
            "description": "Palette Red 70"
          },
          "80": {
            "type": "color",
            "value": "#9A1B18",
            "description": "Palette Red 80"
          },
          "90": {
            "type": "color",
            "value": "#8D1816",
            "description": "Palette Red 90"
          },
          "100": {
            "type": "color",
            "value": "#801614",
            "description": "Palette Red 100"
          }
        },
        "yellow": {
          "10": {
            "type": "color",
            "value": "#FFF5EB",
            "description": "Palette Yellow 10"
          },
          "20": {
            "type": "color",
            "value": "#FFEAD1",
            "description": "Palette Yellow 20"
          },
          "30": {
            "type": "color",
            "value": "#FFE2C2",
            "description": "Palette Yellow 30"
          },
          "40": {
            "type": "color",
            "value": "#FFC17A",
            "description": "Palette Yellow 40"
          },
          "50": {
            "type": "color",
            "value": "#FFB561",
            "description": "Palette Yellow 50"
          },
          "60": {
            "type": "color",
            "value": "#ff9d2e",
            "description": "Palette Yellow 60"
          },
          "70": {
            "type": "color",
            "value": "#FF8F0F",
            "description": "Palette Yellow 70"
          },
          "80": {
            "type": "color",
            "value": "#E57A00",
            "description": "Palette Yellow 80"
          },
          "90": {
            "type": "color",
            "value": "#DB7400",
            "description": "Palette Yellow 90"
          },
          "100": {
            "type": "color",
            "value": "#C76A00",
            "description": "Palette Yellow 100"
          }
        },
        "green": {
          "10": {
            "type": "color",
            "value": "#EBFFEF",
            "description": "Palette Green 10"
          },
          "20": {
            "type": "color",
            "value": "#E0F5E5",
            "description": "Palette Green 20"
          },
          "30": {
            "type": "color",
            "value": "#D0F0D7",
            "description": "Palette Green 30"
          },
          "40": {
            "type": "color",
            "value": "#6CD085",
            "description": "Palette Green 40"
          },
          "50": {
            "type": "color",
            "value": "#36AB53",
            "description": "Palette Green 50"
          },
          "60": {
            "type": "color",
            "value": "#2a8440",
            "description": "Palette Green 60"
          },
          "70": {
            "type": "color",
            "value": "#247036",
            "description": "Palette Green 70"
          },
          "80": {
            "type": "color",
            "value": "#1E5D2D",
            "description": "Palette Green 80"
          },
          "90": {
            "type": "color",
            "value": "#1A5127",
            "description": "Palette Green 90"
          },
          "100": {
            "type": "color",
            "value": "#164622",
            "description": "Palette Green 100"
          }
        },
        "blue": {
          "10": {
            "type": "color",
            "value": "#EFF3FB",
            "description": "Palette Blue 10"
          },
          "20": {
            "type": "color",
            "value": "#DFE7F7",
            "description": "Palette Blue 20"
          },
          "30": {
            "type": "color",
            "value": "#CEDCF2",
            "description": "Palette Blue 30"
          },
          "40": {
            "type": "color",
            "value": "#81A4DF",
            "description": "Palette Blue 40"
          },
          "50": {
            "type": "color",
            "value": "#5986D4",
            "description": "Palette Blue 50"
          },
          "60": {
            "type": "color",
            "value": "#4074ce",
            "description": "Palette Blue 60"
          },
          "70": {
            "type": "color",
            "value": "#3063BB",
            "description": "Palette Blue 70"
          },
          "80": {
            "type": "color",
            "value": "#2C5AAA",
            "description": "Palette Blue 80"
          },
          "90": {
            "type": "color",
            "value": "#274F96",
            "description": "Palette Blue 90"
          },
          "100": {
            "type": "color",
            "value": "#254D92",
            "description": "Palette Blue 100"
          }
        },
        "gray": {
          "10": {
            "type": "color",
            "value": "#f8f9fA",
            "description": "Color Gray 10"
          },
          "20": {
            "type": "color",
            "value": "#f0f3f6",
            "description": "Color Gray 20"
          },
          "30": {
            "type": "color",
            "value": "#dfe5ec",
            "description": "Color Gray 30"
          },
          "40": {
            "type": "color",
            "value": "#d1d9e2",
            "description": "Color Gray 40"
          },
          "50": {
            "type": "color",
            "value": "#c0ccd8",
            "description": "Color Gray 50"
          },
          "60": {
            "type": "color",
            "value": "#b1bfce",
            "description": "Color Gray 60"
          },
          "70": {
            "type": "color",
            "value": "#7d94ac",
            "description": "Color Gray 70"
          },
          "80": {
            "type": "color",
            "value": "#6d87a2",
            "description": "Color Gray 80"
          },
          "90": {
            "type": "color",
            "value": "#5f758c",
            "description": "Color Gray 90"
          },
          "100": {
            "type": "color",
            "value": "#28333f",
            "description": "Color Gray 100"
          }
        },
        "purple": {
          "10": {
            "value": "#F8F1F8",
            "type": "color",
            "description": "Color Purple 10"
          },
          "20": {
            "value": "#F0E4F1",
            "type": "color",
            "description": "Color Purple 20"
          },
          "30": {
            "value": "#E5D0E7",
            "type": "color",
            "description": "Color Purple 30"
          },
          "40": {
            "value": "#D0AAD4",
            "type": "color",
            "description": "Color Purple 40"
          },
          "50": {
            "value": "#B87EBE",
            "type": "color",
            "description": "Color Purple 50"
          },
          "60": {
            "value": "#954F9C",
            "type": "color",
            "description": "Color Purple 60"
          },
          "70": {
            "value": "#85468B",
            "type": "color",
            "description": "Color Purple 70"
          },
          "80": {
            "value": "#713C76",
            "type": "color",
            "description": "Color Purple 80"
          },
          "90": {
            "value": "#5E3262",
            "type": "color",
            "description": "Color Purple 90"
          },
          "100": {
            "value": "#47264A",
            "type": "color",
            "description": "Color Purple 100"
          }
        },
        "black": {
          "type": "color",
          "value": "#000000",
          "description": "Color Black"
        },
        "transparent": {
          "type": "color",
          "value": "transparent",
          "description": "Color Transparent"
        },
        "transparent-virtual": {
          "type": "color",
          "value": "rgba(0, 0, 0, 0.01)",
          "description": "Virtually transparent for enabling focus shadows"
        },
        "white": {
          "type": "color",
          "value": "#ffffff",
          "description": "Color White"
        },
        "cypher-ocean": {
          "10": {
            "value": "#EEFBFB",
            "type": "color"
          },
          "20": {
            "value": "#D9F7F7",
            "type": "color"
          },
          "30": {
            "value": "#C5F2F2",
            "type": "color"
          },
          "40": {
            "value": "#A3EAEB",
            "type": "color"
          },
          "50": {
            "value": "#79E1E1",
            "type": "color"
          },
          "60": {
            "value": "#44D5D6",
            "type": "color"
          },
          "70": {
            "value": "#2ABBBC",
            "type": "color"
          },
          "80": {
            "value": "#239E9F",
            "type": "color"
          },
          "90": {
            "value": "#1D8181",
            "type": "color"
          },
          "100": {
            "value": "#145B5C",
            "type": "color"
          }
        }
      },
      "font-family": {
        "heading": {
          "type": "fontFamilies",
          "value": "'Nunito', 'Roboto', 'Helvetica', sans-serif",
          "description": "Global font-family for headings"
        },
        "label": {
          "type": "fontFamilies",
          "value": "'Nunito', 'Roboto', 'Helvetica', sans-serif",
          "description": "Global font-family for label text"
        },
        "body": {
          "type": "fontFamilies",
          "value": "'Nunito', 'Roboto', 'Helvetica', sans-serif",
          "description": "Global font-family for body text"
        },
        "monospace": {
          "type": "fontFamilies",
          "value": "'Source Code Pro', 'Courier New', 'Courier', monospace",
          "description": "Global font-family for monospace text"
        }
      },
      "font-size": {
        "1": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.1}",
          "description": "Font Size 1"
        },
        "2": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.2}",
          "description": "Font Size 2"
        },
        "3": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.3}",
          "description": "Font Size 3"
        },
        "4": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.4}",
          "description": "Font Size 4"
        },
        "5": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.5}",
          "description": "Font Size 5"
        },
        "6": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.6}",
          "description": "Font Size 6"
        },
        "7": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.7}",
          "description": "Font Size 7"
        },
        "8": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.8}",
          "description": "Font Size 8"
        },
        "9": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.9}",
          "description": "Font Size 9"
        },
        "10": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.10}",
          "description": "Font Size 10"
        },
        "11": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.11}",
          "description": "Font Size 11"
        },
        "12": {
          "type": "fontSizes",
          "value": "{jds.font-scale.fixed.12}",
          "description": "Font Size 12"
        },
        "base": {
          "type": "fontSizes",
          "value": "16",
          "description": "Base font size used in typographic scale"
        }
      },
      "font-scale": {
        "fixed": {
          "1": {
            "type": "sizing",
            "value": "12",
            "description": "Fixed font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "14",
            "description": "Fixed font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "16",
            "description": "Fixed font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "20",
            "description": "Fixed font scale size 4"
          },
          "5": {
            "type": "sizing",
            "value": "24",
            "description": "Fixed font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "32",
            "description": "Fixed font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "40",
            "description": "Fixed font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "56",
            "description": "Fixed font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "64",
            "description": "Fixed font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "72",
            "description": "Fixed font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "84",
            "description": "Fixed font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "96",
            "description": "Fixed font scale size 12"
          }
        },
        "harmonic": {
          "1": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.2} / {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.3} / {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.4} / {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "{jds.font-size.base}",
            "description": "Harmonic font scale size typically corresponding to the base font size at 100%"
          },
          "5": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.4} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.5} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.6} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.7} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.8} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.9} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.10} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "round({jds.font-scale.harmonic.11} * {jds.font-scale.harmonic.ratios.selection})",
            "description": "Harmonic font scale size 12"
          },
          "ratios": {
            "selection": {
              "type": "sizing",
              "value": "{jds.font-scale.harmonic.ratios.1250-major-third}",
              "description": "Current selection of harmonic ratio to be applied to harmonic font scale"
            },
            "1067-minor-second": {
              "type": "sizing",
              "value": "1.067",
              "description": "Scale 1.067 - Minor Second"
            },
            "1125-major-second": {
              "type": "sizing",
              "value": "1.125",
              "description": "Scale 1.125 - Major Second"
            },
            "1200-minor-third": {
              "type": "sizing",
              "value": "1.200",
              "description": "Scale 1.200 - Minor Third"
            },
            "1250-major-third": {
              "type": "sizing",
              "value": "1.250",
              "description": "Scale 1.250 - Major Third"
            },
            "1333-perfect-fourth": {
              "type": "sizing",
              "value": "1.333",
              "description": "Scale 1.333 - Perfect Fourth"
            },
            "1414-augmented-fourth": {
              "type": "sizing",
              "value": "1.414",
              "description": "Scale 1.414 - Augmented Fourth"
            },
            "1500-perfect-fifth": {
              "type": "sizing",
              "value": "1.500",
              "description": "Scale 1.500 - Perfect Fifth"
            },
            "1618-golden-ratio": {
              "type": "sizing",
              "value": "1.618",
              "description": "Scale 1.618 - Golden Ratio"
            }
          }
        },
        "progressive": {
          "1": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.2} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.3} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.4} + (round((3-2) / 4) - 1) * 2",
            "description": "Progressive font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "{jds.font-size.base}",
            "description": "Progressive font scale size typically corresponding to the base font size at 100%"
          },
          "5": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.4} + (round((5-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.5} + (round((6-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.6} + (round((7-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.7} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.8} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.9} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.10} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive.11} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive font scale size 12"
          }
        },
        "progressive-ratio": {
          "1": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.2} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive ratio font scale size 1"
          },
          "2": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.3} + (round((2-2) / 4) - 1) * 2",
            "description": "Progressive ratio font scale size 2"
          },
          "3": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.4} + (round((3-2) / 4) - 1) * 2",
            "description": "Progressive ratio font scale size 3"
          },
          "4": {
            "type": "sizing",
            "value": "{jds.font-size.base}",
            "description": "Progressive ratio font scale size typically corresponding to the base font size at 100%"
          },
          "5": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.4} + (round((5-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 5"
          },
          "6": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.5} + (round((6-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 6"
          },
          "7": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.6} + (round((7-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 7"
          },
          "8": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.7} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 8"
          },
          "9": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.8} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 9"
          },
          "10": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.9} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 10"
          },
          "11": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.10} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 11"
          },
          "12": {
            "type": "sizing",
            "value": "{jds.font-scale.progressive-ratio.11} + (round((8-2) / 4) + 1) * 2",
            "description": "Progressive ratio font scale size 12"
          }
        }
      },
      "line-height": {
        "fixed": {
          "1": {
            "type": "lineHeights",
            "value": "15",
            "description": "Fixed line-height size 1"
          },
          "2": {
            "type": "lineHeights",
            "value": "18",
            "description": "Fixed line-height size 2"
          },
          "3": {
            "type": "lineHeights",
            "value": "20",
            "description": "Fixed line-height size 3"
          },
          "4": {
            "type": "lineHeights",
            "value": "25",
            "description": "Fixed line-height size 4"
          },
          "5": {
            "type": "lineHeights",
            "value": "30",
            "description": "Fixed line-height size 5"
          },
          "6": {
            "type": "lineHeights",
            "value": "40",
            "description": "Fixed line-height size 6"
          },
          "7": {
            "type": "lineHeights",
            "value": "50",
            "description": "Fixed line-height size 7"
          },
          "8": {
            "type": "lineHeights",
            "value": "70",
            "description": "Fixed line-height size 8"
          },
          "9": {
            "type": "lineHeights",
            "value": "80",
            "description": "Fixed line-height size 9"
          },
          "10": {
            "type": "lineHeights",
            "value": "90",
            "description": "Fixed line-height size 10"
          },
          "11": {
            "type": "lineHeights",
            "value": "105",
            "description": "Fixed line-height size 11"
          },
          "12": {
            "type": "lineHeights",
            "value": "120",
            "description": "Fixed line-height size 12"
          }
        },
        "heading": {
          "type": "lineHeights",
          "value": "125%",
          "description": "Global line-height for headings"
        },
        "body": {
          "type": "lineHeights",
          "value": "150%",
          "description": "Global line-height for body text"
        },
        "label": {
          "type": "lineHeights",
          "value": "150%",
          "description": "Global line-height for label text"
        },
        "monospace": {
          "type": "lineHeights",
          "value": "125%",
          "description": "Global line-height for monospace text"
        }
      },
      "text-case": {
        "capitalize": {
          "type": "textCase",
          "value": "capitalize",
          "description": "Global capitalize for text."
        },
        "none": {
          "type": "textCase",
          "value": "none",
          "description": "Global default case for text."
        },
        "uppercase": {
          "type": "textCase",
          "value": "uppercase",
          "description": "Global uppercase for text."
        }
      },
      "font-weight": {
        "100-thin": {
          "type": "fontWeights",
          "value": "100",
          "description": "Global font-weight property for Thin (Hairline) text per OpenType specification. In case of mapping error, replace value with precise weight name. This weight is rarely used."
        },
        "200-extralight": {
          "type": "fontWeights",
          "value": "200",
          "description": "Global font-weight property for Extra Light (Ultra Light) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "300-light": {
          "type": "fontWeights",
          "value": "300",
          "description": "Global font-weight property for Light text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "400-normal": {
          "type": "fontWeights",
          "value": "400",
          "description": "Global font-weight property for Normal (Regular, Book) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "500-medium": {
          "type": "fontWeights",
          "value": "500",
          "description": "Global font-weight property for Medium text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "600-semibold": {
          "type": "fontWeights",
          "value": "600",
          "description": "Global font-weight property for Semi Bold (Demi Bold) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "700-bold": {
          "type": "fontWeights",
          "value": "700",
          "description": "Global font-weight property for Bold text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "800-extrabold": {
          "type": "fontWeights",
          "value": "800",
          "description": "Global font-weight property for Extra Bold (Ultra Bold) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "900-black": {
          "type": "fontWeights",
          "value": "900",
          "description": "Global font-weight property for Black (Heavy) text per OpenType specification. In case of mapping error, replace value with precise weight name."
        },
        "950-extrablack": {
          "type": "fontWeights",
          "value": "950",
          "description": "Global font-weight property for Extra Black (Ultra Black) text per OpenType specification. In case of mapping error, replace value with precise weight name. This weight is rarely used."
        }
      },
      "letter-spacing": {
        "normal": {
          "type": "letterSpacing",
          "value": "0",
          "description": "Global default letter-spacing for text."
        }
      },
      "media-query": {
        "phone": {
          "type": "sizing",
          "value": "580",
          "description": "Small form factor for devices such as a phone in a vertical orientation."
        },
        "phone-wide": {
          "type": "sizing",
          "value": "768",
          "description": "Medium form factor for devices such as a phone in horizontal orientation or a tablet in vertical orientation."
        },
        "tablet": {
          "type": "sizing",
          "value": "1024",
          "description": "Large form factor for devices similar to a tablet in landscape orientation and smaller than desktop."
        }
      },
      "paragraph-spacing": {
        "normal": {
          "type": "paragraphSpacing",
          "value": "0",
          "description": "Global default paragraph spacing for text."
        }
      },
      "size": {
        "1": {
          "type": "sizing",
          "value": "8",
          "description": "1x unit of 8-pixel grid"
        },
        "2": {
          "type": "sizing",
          "value": "16",
          "description": "2x unit of 8-pixel grid"
        },
        "3": {
          "type": "sizing",
          "value": "24",
          "description": "3x unit of 8-pixel grid"
        },
        "4": {
          "type": "sizing",
          "value": "32",
          "description": "4x unit of 8-pixel grid"
        },
        "5": {
          "type": "sizing",
          "value": "48",
          "description": "6x unit of 8-pixel grid"
        },
        "6": {
          "type": "sizing",
          "value": "64",
          "description": "8x unit of 8-pixel grid"
        },
        "7": {
          "type": "sizing",
          "value": "80",
          "description": "10x unit of 8-pixel grid"
        }
      },
      "space": {
        "1": {
          "type": "spacing",
          "value": "2",
          "description": "One quarter unit of 8-pixel grid"
        },
        "2": {
          "type": "spacing",
          "value": "4",
          "description": "One half unit of 8-pixel grid"
        },
        "3": {
          "type": "spacing",
          "value": "8",
          "description": "Unit of 8-pixel grid"
        },
        "4": {
          "type": "spacing",
          "value": "12",
          "description": "150% of base unit of 8-pixel grid"
        },
        "5": {
          "type": "spacing",
          "value": "16",
          "description": "200% of base unit of 8-pixel grid"
        },
        "6": {
          "type": "spacing",
          "value": "20",
          "description": "250% of base unit of 8-pixel grid"
        },
        "7": {
          "type": "spacing",
          "value": "24",
          "description": "300% of base unit of 8-pixel grid"
        },
        "8": {
          "type": "spacing",
          "value": "28",
          "description": "350% of base unit of 8-pixel grid"
        },
        "9": {
          "type": "spacing",
          "value": "32",
          "description": "400% of base unit of 8-pixel grid"
        },
        "10": {
          "type": "spacing",
          "value": "40",
          "description": "500% of base unit of 8-pixel grid"
        },
        "11": {
          "type": "spacing",
          "value": "48",
          "description": "600% of base unit of 8-pixel grid"
        },
        "12": {
          "type": "spacing",
          "value": "64",
          "description": "800% of base unit of 8-pixel grid"
        },
        "13": {
          "type": "spacing",
          "value": "80",
          "description": "1000% of base unit of 8-pixel grid"
        },
        "14": {
          "type": "spacing",
          "value": "96",
          "description": "1200% of base unit of 8-pixel grid"
        },
        "15": {
          "type": "spacing",
          "value": "80",
          "description": "2000% of base unit of 8-pixel grid"
        }
      },
      "text-decoration": {
        "line-through": {
          "type": "textDecoration",
          "value": "line-through",
          "description": "Global line-through decoration for text."
        },
        "none": {
          "type": "textDecoration",
          "value": "none",
          "description": "Global default decoration for text."
        },
        "underline": {
          "type": "textDecoration",
          "value": "underline",
          "description": "Global underline decoration for text."
        }
      },
      "duration": {
        "immediate": {
          "value": "70ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "faster": {
          "value": "110ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "fast": {
          "value": "150ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "moderate": {
          "value": "250ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "slow": {
          "value": "400ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "slower": {
          "value": "700ms",
          "type": "other",
          "description": "Experimental token for motion duration"
        }
      },
      "transition": {
        "ease-in": {
          "value": "cubic-bezier({jds.cubic-bezier.accelerate})",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "ease-out": {
          "value": "cubic-bezier({jds.cubic-bezier.decelerate})",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "ease-in-out": {
          "value": "cubic-bezier({jds.cubic-bezier.accelerate-decelerate})",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "ease-none": {
          "value": "cubic-bezier(0, 0, 1, 1)",
          "type": "other",
          "description": "Experimental token for motion duration"
        }
      },
      "cubic-bezier": {
        "accelerate": {
          "value": "0.65, 0, 1, 1",
          "type": "other",
          "description": "Experimental token for cubic bezier"
        },
        "decelerate": {
          "value": "0, 0, 0.35, 1",
          "type": "other",
          "description": "Experimental token for motion duration"
        },
        "accelerate-decelerate": {
          "value": "0.5, 0, 0.5, 1",
          "type": "other",
          "description": "Experimental token for motion duration"
        }
      }
    }
  },
  "Succeed Insurance/Semantic": {
    "jds": {
      "font": {
        "display": {
          "value": {
            "fontFamily": "{jds.font-family.heading}",
            "fontWeight": "{jds.font-weight.900-black}",
            "lineHeight": "{jds.line-height.body}",
            "fontSize": "{jds.font-size.7}",
            "letterSpacing": "{jds.letter-spacing.normal}",
            "paragraphSpacing": "{jds.paragraph-spacing.normal}",
            "textCase": "{jds.text-case.uppercase}",
            "textDecoration": "{jds.text-decoration.none}"
          },
          "type": "typography",
          "description": "Font properties for display text"
        },
        "heading": {
          "1": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.7}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 1 text"
          },
          "2": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.6}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 2 text"
          },
          "3": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 3 text"
          },
          "4": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.4}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 4 text"
          },
          "5": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 5 text"
          },
          "6": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 6 text"
          },
          "7": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for heading 7 text"
          },
          "eyebrow": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.4}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.uppercase}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for eyebrow text typically used in conjunction with a heading"
          },
          "slug": {
            "value": {
              "fontFamily": "{jds.font-family.heading}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.heading}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.uppercase}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for slug text typically used as a section title within a vertical navigation"
          }
        },
        "body": {
          "large": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for large body text"
          },
          "medium": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for medium body text (formerly body-1)"
          },
          "small": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for small body text (formerly body-2)"
          },
          "x-small": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for x-small body text (formerly body-3)"
          }
        },
        "label": {
          "large": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for large label text"
          },
          "large-strong": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for strong large label text"
          },
          "large-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.5}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for large label text with a stronger font weight"
          },
          "medium": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for medium label text"
          },
          "medium-strong": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for strong medium label text"
          },
          "medium-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for label text with a stronger font weight"
          },
          "small": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for label text."
          },
          "small-strong": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for small label text with a strong font weight"
          },
          "small-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for small label text with a stronger font weight"
          },
          "x-small": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for x-small label text"
          },
          "x-small-stronger": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.label}",
              "fontSize": "{jds.font-size.1}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for extra small label text with a stronger font weight"
          }
        },
        "code": {
          "medium": {
            "value": {
              "fontFamily": "{jds.font-family.monospace}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.monospace}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for medium code text"
          }
        },
        "link": {
          "default": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for default state of link text"
          },
          "hover": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.underline}"
            },
            "type": "typography",
            "description": "Font properties for hover state of link text"
          },
          "active": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.underline}"
            },
            "type": "typography",
            "description": "Font properties for active state of link text"
          },
          "visited": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for visited state of link text"
          }
        },
        "button": {
          "label": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for button text label"
          }
        },
        "toggle-button": {
          "label": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for toggle button text label"
          }
        },
        "table": {
          "header-cell": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for table header cell text."
          },
          "data-cell": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for table data cell text."
          },
          "data-cell-action": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.700-bold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for table data cell text."
          }
        },
        "progress": {
          "step-inner-text": {
            "value": {
              "fontFamily": "{jds.font-family.label}",
              "fontWeight": "{jds.font-weight.400-normal}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.2}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textCase": "{jds.text-case.none}",
              "textDecoration": "{jds.text-decoration.none}"
            },
            "type": "typography",
            "description": "Font properties for progress step inner text"
          }
        }
      },
      "focus": {
        "shadow": {
          "regular": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "{jds.color.border.focus}66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Focus shadow using 40% opacity of focus color for use over light backgrounds"
          },
          "inverse": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "{jds.color.white}66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Focus shadow for use over dark backgrounds"
          },
          "error": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "{jds.color.border.error}66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Error focus shadow for use over light backgrounds"
          },
          "error-inverse": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "2",
              "color": "#e69acf66",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Error focus shadow for use over dark backgrounds"
          }
        }
      },
      "color": {
        "background": {
          "neutral": {
            "value": "{jds.color.palette-neutral.20}",
            "type": "color",
            "description": "Neutral background color"
          },
          "neutral-hover": {
            "value": "{jds.color.palette-neutral.30}",
            "type": "color",
            "description": "Neutral background color hover state"
          },
          "neutral-active": {
            "value": "{jds.color.palette-neutral.40}",
            "type": "color",
            "description": "Neutral background color active state"
          },
          "neutral-subtle": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Light neutral background color"
          },
          "neutral-subtle-hover": {
            "value": "{jds.color.palette-neutral.10}",
            "type": "color",
            "description": "Light neutral background color hover state"
          },
          "neutral-subtle-active": {
            "value": "{jds.color.palette-neutral.20}",
            "type": "color",
            "description": "Light neutral background color active state"
          },
          "neutral-inverse": {
            "value": "{jds.color.palette-neutral.100}",
            "type": "color",
            "description": "Neutral inverse background color"
          },
          "page": {
            "value": "{jds.color.palette-neutral.10}",
            "type": "color",
            "description": "Background color for page"
          },
          "track": {
            "value": "{jds.color.palette-neutral.40}",
            "type": "color",
            "description": "Default background color for track element"
          },
          "progress": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Color used for progress indicators"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Background color for error"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Background color for information"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Background color for success"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Background color for warning"
          },
          "error-subtle": {
            "value": "{jds.color.red.10}",
            "type": "color",
            "description": "Subtle background color for error"
          },
          "information-subtle": {
            "value": "{jds.color.blue.10}",
            "type": "color",
            "description": "Subtle background color for information"
          },
          "success-subtle": {
            "value": "{jds.color.green.10}",
            "type": "color",
            "description": "Subtle background color for success"
          },
          "warning-subtle": {
            "value": "{jds.color.yellow.10}",
            "type": "color",
            "description": "Subtle background color for warning"
          },
          "selected": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Color indicating a selected state"
          },
          "selected-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Color indicating a selected hover state"
          },
          "selected-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Color indicating a selected active state"
          },
          "selected-subtle": {
            "value": "{jds.color.palette-brand.40}",
            "type": "color",
            "description": "Lighter color indicating a selected state"
          },
          "selected-subtle-hover": {
            "value": "{jds.color.palette-brand.20}",
            "type": "color",
            "description": "Lighter color indicating a selected hover state"
          },
          "selected-subtle-active": {
            "value": "{jds.color.palette-brand.30}",
            "type": "color",
            "description": "Lighter color indicating a selected active state"
          },
          "input": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Background color for inputs"
          },
          "input-hover": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Background color for hover state of inputs"
          },
          "input-active": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Background color for hover state of inputs"
          },
          "input-read-only": {
            "value": "{jds.color.palette-neutral.20}",
            "type": "color",
            "description": "Background color for read-only state of inputs"
          },
          "brand": {
            "value": "{jds.color.palette-brand.40}",
            "type": "color",
            "description": "To be written"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.50}",
            "type": "color",
            "description": "Brand color for hover state of background"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.50}",
            "type": "color",
            "description": "Brand color for active state of background"
          },
          "brand-subtle": {
            "value": "{jds.color.palette-brand.10}",
            "type": "color",
            "description": "Light brand color for background"
          },
          "brand-subtle-hover": {
            "value": "{jds.color.palette-brand.20}",
            "type": "color",
            "description": "Light brand color for background hover"
          },
          "brand-subtle-active": {
            "value": "{jds.color.palette-brand.30}",
            "type": "color",
            "description": "Light brand color for background active"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for background"
          },
          "brand-accent-1-hover": {
            "value": "{jds.color.palette-brand-accent-1.70}",
            "type": "color",
            "description": "Brand accent 1 color for hover state of background"
          },
          "brand-accent-1-active": {
            "value": "{jds.color.palette-brand-accent-1.80}",
            "type": "color",
            "description": "Brand accent 1 color for hover state of background"
          },
          "brand-accent-1-subtle": {
            "value": "{jds.color.palette-brand-accent-1.10}",
            "type": "color",
            "description": "Light brand accent 1 color"
          },
          "brand-accent-1-subtle-hover": {
            "value": "{jds.color.palette-brand-accent-1.20}",
            "type": "color",
            "description": "Light brand accent 1 color hover"
          },
          "brand-accent-1-subtle-active": {
            "value": "{jds.color.palette-brand-accent-1.30}",
            "type": "color",
            "description": "Light brand accent 1 color active"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for background"
          },
          "brand-accent-2-hover": {
            "value": "{jds.color.palette-brand-accent-2.70}",
            "type": "color",
            "description": "Brand accent 2 color for hover state of background"
          },
          "brand-accent-2-active": {
            "value": "{jds.color.palette-brand-accent-2.80}",
            "type": "color",
            "description": "Brand accent 2 color for active state of background"
          },
          "brand-accent-2-subtle": {
            "value": "{jds.color.palette-brand-accent-2.10}",
            "type": "color",
            "description": "Light brand accent 2 color for background"
          },
          "brand-accent-2-subtle-hover": {
            "value": "{jds.color.palette-brand-accent-2.20}",
            "type": "color",
            "description": "Light brand accent 2 color for hover state of background"
          },
          "brand-accent-2-subtle-active": {
            "value": "{jds.color.palette-brand-accent-2.30}",
            "type": "color",
            "description": "Light brand accent 2 color for active state of background"
          }
        },
        "border": {
          "regular": {
            "value": "{jds.color.gray.30}",
            "type": "color",
            "description": "Regular border color for UI elements"
          },
          "inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse border color for UI elements"
          },
          "focus": {
            "value": "{jds.color.trusted-blue.50}",
            "type": "color",
            "description": "Border color used to indicate focus state"
          },
          "focus-inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse border color used to indicate focus state over a dark background"
          },
          "separator": {
            "value": "{jds.color.palette-neutral.40}",
            "type": "color",
            "description": "Border color of separator"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Border color for error"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Border color for information"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Border color for success"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Border color for warning"
          },
          "selected": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Border color indicating a selected state"
          },
          "selected-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Border color indicating a selected hover state"
          },
          "selected-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Border color indicating a selected active state"
          },
          "input": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for inputs"
          },
          "brand": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Brand color for border"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of border"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of border"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for border"
          },
          "brand-accent-1-hover": {
            "value": "{jds.color.palette-brand-accent-1.70}",
            "type": "color",
            "description": "Brand accent 1 color for hover state of border"
          },
          "brand-accent-1-active": {
            "value": "{jds.color.palette-brand-accent-1.80}",
            "type": "color",
            "description": "Brand accent 1 color for active state of border"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for border"
          },
          "brand-accent-2-hover": {
            "value": "{jds.color.palette-brand-accent-2.70}",
            "type": "color",
            "description": "Brand accent 2 color for hover state of border"
          },
          "brand-accent-2-active": {
            "value": "{jds.color.palette-brand-accent-2.70}",
            "type": "color",
            "description": "Brand accent 2 color for active state of border"
          }
        },
        "text": {
          "regular": {
            "value": "{jds.color.palette-neutral.100}",
            "type": "color",
            "description": "Regular text color"
          },
          "subtle": {
            "value": "{jds.color.palette-neutral.90}",
            "type": "color",
            "description": "Subtle text color"
          },
          "inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse text color"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Error color for text"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Information color for text"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Success color for text"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Warning color for text"
          },
          "required": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Color for indicating required action"
          },
          "brand": {
            "value": "{jds.color.cypher-blue.100}",
            "type": "color",
            "description": "Brand color for text"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of text"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of text"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for text"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for text"
          },
          "link-default": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Link text color"
          },
          "link-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Link text color hover"
          },
          "link-active": {
            "value": "{jds.color.text.brand-active}",
            "type": "color",
            "description": "Link text color active"
          },
          "link-visited": {
            "value": "{jds.color.purple.60}",
            "type": "color",
            "description": "Link text color visited"
          },
          "link-visited-hover": {
            "value": "{jds.color.purple.70}",
            "type": "color",
            "description": "Link text color visited hover"
          },
          "link-visited-active": {
            "value": "{jds.color.purple.80}",
            "type": "color",
            "description": "Link text color visited active"
          },
          "link-default-inverse": {
            "value": "{jds.color.palette-brand.40}",
            "type": "color",
            "description": "Link text color on dark background"
          },
          "link-inverse-hover": {
            "value": "{jds.color.palette-brand.30}",
            "type": "color",
            "description": "Text color for hover state of link on dark background"
          },
          "link-inverse-active": {
            "value": "{jds.color.palette-brand.20}",
            "type": "color",
            "description": "Text color for active state of link on dark background"
          }
        },
        "icon": {
          "regular": {
            "value": "{jds.color.palette-neutral.100}",
            "type": "color",
            "description": "Regular icon color"
          },
          "subtle": {
            "value": "{jds.color.palette-neutral.90}",
            "type": "color",
            "description": "Subtle color for icons"
          },
          "inverse": {
            "value": "{jds.color.white}",
            "type": "color",
            "description": "Inverse icon color"
          },
          "error": {
            "value": "{jds.color.red.60}",
            "type": "color",
            "description": "Error color for icon"
          },
          "information": {
            "value": "{jds.color.blue.60}",
            "type": "color",
            "description": "Information color for icon"
          },
          "success": {
            "value": "{jds.color.green.60}",
            "type": "color",
            "description": "Success color for icon"
          },
          "warning": {
            "value": "{jds.color.yellow.60}",
            "type": "color",
            "description": "Warning color for icon"
          },
          "brand": {
            "value": "{jds.color.palette-brand.60}",
            "type": "color",
            "description": "Brand action color of icon"
          },
          "brand-hover": {
            "value": "{jds.color.palette-brand.70}",
            "type": "color",
            "description": "Brand color for hover state of icon"
          },
          "brand-active": {
            "value": "{jds.color.palette-brand.80}",
            "type": "color",
            "description": "Brand color for active state of icon"
          },
          "brand-accent-1": {
            "value": "{jds.color.palette-brand-accent-1.60}",
            "type": "color",
            "description": "Brand accent 1 color for icon"
          },
          "brand-accent-2": {
            "value": "{jds.color.palette-brand-accent-2.60}",
            "type": "color",
            "description": "Brand accent 2 color for icon"
          },
          "link-default": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Link icon color"
          },
          "link-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Link icon color hover"
          },
          "link-active": {
            "value": "{jds.color.text.brand-active}",
            "type": "color",
            "description": "Link icon color active"
          },
          "link-visited": {
            "value": "{jds.color.purple.60}",
            "type": "color",
            "description": "Link icon color visited"
          },
          "link-visited-hover": {
            "value": "{jds.color.purple.70}",
            "type": "color",
            "description": "Link icon color visited hover"
          },
          "link-visited-active": {
            "value": "{jds.color.purple.80}",
            "type": "color",
            "description": "Link icon color visited active"
          },
          "link-default-inverse": {
            "value": "{jds.color.palette-brand.40}",
            "type": "color",
            "description": "Link icon color on dark background"
          }
        },
        "interaction-overlay": {
          "hover": {
            "value": "#ffffff33",
            "type": "color",
            "description": "Overlay to indicate hover state when a background color cannot change, such as images"
          },
          "active": {
            "value": "#ffffff66",
            "type": "color",
            "description": "Overlay to indicate active state when a background color cannot change, such as images"
          }
        },
        "shadow": {
          "type": "color",
          "value": "rgba(40, 51, 63, 0.24)",
          "description": "Used for color and opacity of shadows"
        }
      },
      "utility": {
        "color": {
          "shadow": {
            "focus": {
              "regular": {
                "value": "{jds.color.border.focus}66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for focus shadow. Will be deprecated."
              },
              "inverse": {
                "value": "{jds.color.white}66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for focus shadow inverse. Will be deprecated."
              },
              "error": {
                "value": "{jds.color.border.error}66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for error focus shadow. Will be deprecated."
              },
              "error-inverse": {
                "value": "#e69acf66",
                "type": "color",
                "description": "A color token used only for backwards compatability for the color with opacity for error focus shadow inverse. Will be deprecated."
              }
            }
          }
        }
      },
      "elevation": {
        "surface": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Primary background for the UI"
        },
        "surface-hover": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color",
          "description": "Primary background hover state for the UI"
        },
        "surface-active": {
          "value": "{jds.color.palette-neutral.20}",
          "type": "color",
          "description": "Primary background active state for the UI"
        },
        "surface-recessed": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color",
          "description": "Secondary background for the UI often used for grouping items"
        },
        "surface-raised": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Primary background for for cards that can be moved"
        },
        "surface-raised-hover": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color",
          "description": "Primary background hover state for for cards that can be moved"
        },
        "surface-raised-active": {
          "value": "{jds.color.palette-neutral.20}",
          "type": "color",
          "description": "Primary background active state for for cards that can be moved"
        },
        "surface-overlay": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background for elements positioned above the UI such as modals, dropdown menus, dialogues, etc., as well as the background for cards that are in a dragged state."
        },
        "surface-overlay-hover": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background hover state for elements positioned above the UI such as modals, dropdown menus, dialogues, etc., as well as the background for cards that are in a dragged state."
        },
        "surface-overlay-active": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background active state for elements positioned above the UI such as modals, dropdown menus, dialogues, etc., as well as the background for cards that are in a dragged state."
        },
        "shadow": {
          "low": {
            "value": {
              "x": "0",
              "y": "1",
              "blur": "1",
              "spread": "0",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow for lowest elevation"
          },
          "raised": {
            "value": {
              "x": "0",
              "y": "2",
              "blur": "4",
              "spread": "0",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Default shadow used for most components"
          },
          "overlay": {
            "value": {
              "x": "0",
              "y": "4",
              "blur": "8",
              "spread": "0",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow for highest level"
          },
          "overflow": {
            "value": {
              "x": "0",
              "y": "1",
              "blur": "6",
              "spread": "2.5",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow used when content scrolls underneath a surface"
          },
          "inset": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "1",
              "spread": "1",
              "color": "{jds.color.shadow}",
              "type": "innerShadow"
            },
            "type": "boxShadow",
            "description": "Inset shadow"
          },
          "none": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "0",
              "spread": "0",
              "color": "{jds.color.transparent}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Shadow value for none"
          }
        }
      },
      "opacity-disabled": {
        "value": ".4",
        "type": "opacity",
        "description": "Opacity for disabled state"
      },
      "size": {
        "input-height": {
          "value": "40",
          "type": "sizing",
          "description": "Height for inputs and related components including fields, selects, and buttons"
        }
      }
    }
  },
  "Succeed Insurance/Component": {
    "jds": {
      "accordion": {
        "card-header-title-color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Color for the title text of the accordion card header"
        },
        "card-header-title-color-text-hover": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Color for the hover state of title text of the accordion card header"
        },
        "card-header-title-color-text-active": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Color for the active state of title text of the accordion card header"
        },
        "card-header-color-action-icon": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Color for accordion card header action icon"
        },
        "card-header-color-action-icon-hover": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Color for the hover state of the accordion card header action icon"
        },
        "card-header-color-action-icon-active": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Color for the active state of the accordion card header action icon"
        },
        "card-header-color-background": {
          "value": "{jds.elevation.surface}",
          "type": "color",
          "description": "Background color for accordion card header"
        },
        "card-header-color-background-hover": {
          "value": "{jds.elevation.surface-hover}",
          "type": "color",
          "description": "Background color for hover state of accordion card header"
        },
        "card-header-color-background-active": {
          "value": "{jds.elevation.surface-active}",
          "type": "color",
          "description": "Background color for active state of accordion card header"
        },
        "card-content-color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color",
          "description": "Background color for accordion card content container"
        },
        "card-header-padding": {
          "value": "5 {jds.space.4} 5",
          "type": "spacing",
          "description": "Padding for the accordion card header"
        },
        "card-header-gap": {
          "value": "{jds.space.2}",
          "type": "spacing",
          "description": "Gap between elements in the accordion card header"
        },
        "card-content-padding": {
          "value": "{jds.space.5} {jds.space.5} {jds.space.5} 36",
          "type": "spacing",
          "description": "Padding for the accordion card content container"
        },
        "item-divider-color-border": {
          "value": "{jds.color.border.separator}",
          "type": "color",
          "description": "Border color for divider between accordion item cards"
        },
        "card-header": {
          "height": {
            "value": "{jds.input-field.height}",
            "type": "sizing",
            "description": "Height for accordion card header"
          }
        }
      },
      "checkbox": {
        "selector": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for checkbox selector"
            },
            "background-hover": {
              "value": "{jds.color.background.neutral-subtle-hover}",
              "type": "color",
              "description": "Background color for hover state of checkbox selector"
            },
            "background-active": {
              "value": "{jds.color.background.neutral-subtle-active}",
              "type": "color",
              "description": "Background color for active state of checkbox selector"
            },
            "border": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for checkbox selector"
            },
            "border-hover": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for hover state of checkbox selector"
            },
            "border-active": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for active state of checkbox selector"
            },
            "border-error": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error state of checkbox selector"
            },
            "background-selected": {
              "value": "{jds.color.background.selected}",
              "type": "color",
              "description": "Background color for selected state of checkbox selector"
            },
            "background-selected-hover": {
              "value": "{jds.color.background.selected-hover}",
              "type": "color",
              "description": "Background color for selected state hover of checkbox selector"
            },
            "background-selected-active": {
              "value": "{jds.color.background.selected-active}",
              "type": "color",
              "description": "Background color for selected state active of checkbox selector"
            },
            "background-selected-error": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Background color for selected state of checkbox selector"
            },
            "border-selected": {
              "value": "{jds.color.border.selected}",
              "type": "color",
              "description": "Border color for selected state of checkbox selector"
            },
            "border-selected-hover": {
              "value": "{jds.color.border.selected-hover}",
              "type": "color",
              "description": "Border color for selected state hover of checkbox selector"
            },
            "border-selected-active": {
              "value": "{jds.color.border.selected-active}",
              "type": "color",
              "description": "Border color for selected state active of checkbox selector"
            }
          },
          "icon": {
            "color": {
              "icon-selected": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for selected state of checkbox selector icon"
              },
              "icon-selected-hover": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for selected hover state of checkbox selector icon"
              },
              "icon-selected-active": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for selected active state of checkbox selector icon"
              }
            },
            "size": {
              "value": "{jds.size.2} - 2",
              "type": "dimension",
              "description": "Size for checkbox selector icon"
            }
          },
          "size": {
            "value": "{jds.size.2}",
            "type": "dimension",
            "description": "Size for checkbox selector"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for checkbox selector"
          },
          "border-width": {
            "value": "{jds.border-width.regular}",
            "type": "borderWidth",
            "description": "Border width for checkbox selector"
          }
        },
        "group": {
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for the checkbox group container"
          },
          "gap-vertical": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap between vertically-aligned checkbox group elements"
          },
          "gap-horizontal": {
            "value": "{jds.space.5}",
            "type": "spacing",
            "description": "Gap between horizontally-aligned checkbox group elements"
          }
        }
      },
      "radio": {
        "selector": {
          "border-width": {
            "value": "{jds.border-width.regular}",
            "type": "borderWidth"
          },
          "color-background": {
            "value": "{jds.elevation.surface}",
            "type": "color",
            "description": "Background color for radio selector"
          },
          "color-background-hover": {
            "value": "{jds.elevation.surface-hover}",
            "type": "color",
            "description": "Background color for hover state of radio selector"
          },
          "color-background-active": {
            "value": "{jds.elevation.surface-active}",
            "type": "color",
            "description": "Background color for active state of radio selector"
          },
          "color-border-error": {
            "value": "{jds.color.border.error}",
            "type": "color",
            "description": "Border color for error state of radio selector"
          },
          "color-background-selected": {
            "value": "{jds.color.background.selected}",
            "type": "color",
            "description": "Background color for selected state of radio selector"
          },
          "color-background-selected-hover": {
            "value": "{jds.color.background.selected-hover}",
            "type": "color",
            "description": "Background color for selected state hover of radio selector"
          },
          "color-background-selected-active": {
            "value": "{jds.color.background.selected-active}",
            "type": "color",
            "description": "Background color for selected state active of radio selector"
          },
          "inner": {
            "color-background-selected": {
              "value": "{jds.elevation.surface}",
              "type": "color",
              "description": "Background color for selected state of radio selector inner"
            },
            "color-background-selected-hover": {
              "value": "{jds.elevation.surface-hover}",
              "type": "color",
              "description": "Background color for selected state hover of radio selector inner"
            },
            "color-background-selected-active": {
              "value": "{jds.elevation.surface-active}",
              "type": "color",
              "description": "Background color for selected state active of radio selector inner"
            },
            "size-selected": {
              "value": "{jds.size.1}",
              "type": "dimension",
              "description": "Size for inner element of radio selector"
            }
          },
          "color-background-selected-error": {
            "value": "{jds.color.background.error}",
            "type": "color",
            "description": "Background color for selected state of radio selector"
          },
          "color-border": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for radio selector"
          },
          "color-border-hover": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for hover state of radio selector"
          },
          "color-border-active": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for active state of radio selector"
          },
          "color-border-selected": {
            "value": "{jds.color.border.selected}",
            "type": "color",
            "description": "Border color for selected state of radio selector"
          },
          "color-border-selected-hover": {
            "value": "{jds.color.border.selected-hover}",
            "type": "color",
            "description": "Border color for selected state hover of radio selector"
          },
          "color-border-selected-active": {
            "value": "{jds.color.border.selected-active}",
            "type": "color",
            "description": "Border color for selected state active of radio selector"
          },
          "size": {
            "value": "{jds.size.2}",
            "type": "dimension",
            "description": "Size for radio selector"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for radio selector"
          }
        },
        "group": {
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for the radio group container"
          },
          "gap-vertical": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap between vertically-aligned radio group elements"
          },
          "gap-horizontal": {
            "value": "{jds.space.5}",
            "type": "spacing",
            "description": "Gap between horizontally-aligned radio group elements"
          }
        }
      },
      "avatar": {
        "color-text-inverse": {
          "value": "{jds.color.text.inverse}",
          "type": "color"
        },
        "color-background": {
          "value": "{jds.color.background.brand}",
          "type": "color"
        },
        "color-background-hover": {
          "value": "{jds.color.background.brand-hover}",
          "type": "color"
        },
        "color-background-active": {
          "value": "{jds.color.background.brand-active}",
          "type": "color"
        },
        "color-border": {
          "value": "{jds.color.border.brand}",
          "type": "color"
        },
        "size": {
          "value": "32px",
          "type": "sizing"
        },
        "header-color-border-focus": {
          "value": "{jds.color.border.focus-inverse}",
          "type": "color"
        }
      },
      "badge": {
        "notification": {
          "color": {
            "background": {
              "value": "{jds.color.background.error}",
              "type": "color"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color"
            }
          },
          "border-width": {
            "value": "{jds.border-width.regular}",
            "type": "borderWidth",
            "description": "Border width for notification badge"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.low}",
            "type": "boxShadow",
            "description": "Shadow for notification badge"
          }
        },
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.error}",
              "type": "color",
              "description": "Background color for error badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for error badge"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for error badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for error badge"
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.information}",
              "type": "color",
              "description": "Background color for information badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for information badge"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for information badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for information badge"
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.success}",
              "type": "color",
              "description": "Background color for success badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for success badge"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for success badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for success badge"
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.warning}",
              "type": "color",
              "description": "Background color for warning badge"
            },
            "border": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for warning badge"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for warning badge"
          }
        },
        "inverse": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for inverse badge"
            },
            "border": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for inverse badge"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for inverse badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for inverse badge"
          }
        },
        "neutral": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral}",
              "type": "color",
              "description": "Background color for neutral badge"
            },
            "border": {
              "value": "{jds.color.border.regular}",
              "type": "color",
              "description": "Border color for neutral badge"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for neutral badge"
            }
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for neutral badge"
          }
        },
        "color": {
          "background": {
            "value": "{jds.color.background.brand}",
            "type": "color"
          },
          "border": {
            "value": "{jds.color.border.inverse}",
            "type": "color",
            "description": "Border color for badge"
          },
          "text": {
            "value": "{jds.color.text.inverse}",
            "type": "color"
          }
        },
        "height": {
          "value": "23",
          "type": "sizing",
          "description": "Test value"
        },
        "min-width": {
          "value": "{jds.badge.height}",
          "type": "sizing",
          "description": "Test value"
        },
        "border-radius": {
          "value": "{jds.border-radius.round}",
          "type": "borderRadius"
        },
        "border-width": {
          "value": "{jds.border-width.none}",
          "type": "borderWidth",
          "description": "Border width for badge"
        },
        "padding": {
          "value": "0 6",
          "type": "spacing"
        }
      },
      "breadcrumb": {
        "divider-color-text": {
          "value": "{jds.color.text.subtle}",
          "type": "color"
        }
      },
      "button": {
        "primary": {
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for primary button (formerly filled button)"
          },
          "color-text-hover": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for hover state of primary button (formerly filled button)"
          },
          "color-text-active": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for active state of primary button (formerly filled button)"
          },
          "color-icon": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon of primary button (formerly filled button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon hover state of primary button (formerly filled button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon active state of primary button (formerly filled button)"
          },
          "color-background": {
            "value": "{jds.color.cypher-blue.40}",
            "type": "color",
            "description": "Background color for primary button (formerly filled button)"
          },
          "color-background-hover": {
            "value": "{jds.color.cypher-blue.50}",
            "type": "color",
            "description": "Background color for hover state of primary button (formerly filled button)"
          },
          "color-background-active": {
            "value": "{jds.color.cypher-blue.50}",
            "type": "color",
            "description": "Background color for active state of primary button (formerly filled button)"
          },
          "color-border": {
            "value": "{jds.color.cypher-blue.50}",
            "type": "color",
            "description": "Border color for primary button (formerly filled button)"
          },
          "color-border-hover": {
            "value": "{jds.color.cypher-blue.50}",
            "type": "color",
            "description": "Border color for hover state of primary button (formerly filled button)"
          },
          "color-border-active": {
            "value": "{jds.color.cypher-blue.50}",
            "type": "color",
            "description": "Border color for active state of primary button (formerly filled button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for primary button (formerly filled button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of primary button (formerly filled button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of primary button (formerly filled button)"
          },
          "height-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Height for small primary button"
          },
          "height-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for medium primary button"
          },
          "icon-size": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of primary button"
          },
          "label-font": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textDecoration": "{jds.text-decoration.none}",
              "textCase": "{jds.text-case.none}"
            },
            "type": "typography",
            "description": "Font for primary button label"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for primary button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for primary button"
          },
          "padding": {
            "value": "0 {jds.space.5}",
            "type": "spacing",
            "description": "Padding for primary button"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Spacing for gap between elements within primary button"
          }
        },
        "secondary": {
          "color-text": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Text color for secondary button (formerly outlined button)"
          },
          "color-text-hover": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for hover state of secondary button (formerly outlined button)"
          },
          "color-text-active": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for active state of secondary button (formerly outlined button)"
          },
          "color-icon": {
            "value": "{jds.color.icon.brand}",
            "type": "color",
            "description": "Icon color for secondary button (formerly outlined button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for hover state of secondary button (formerly outlined button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for active state of secondary button (formerly outlined button)"
          },
          "color-background": {
            "type": "color",
            "value": "{jds.color.background.neutral-subtle}",
            "description": "Background color for secondary button (formerly outlined button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-hover}",
            "type": "color",
            "description": "Background color for hover state of secondary button (formerly outlined button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-active}",
            "type": "color",
            "description": "Background color for active state of secondary button (formerly outlined button)"
          },
          "color-border": {
            "value": "{jds.color.border.brand}",
            "type": "color",
            "description": "Border color for secondary button (formerly outlined button)"
          },
          "color-border-hover": {
            "value": "{jds.color.border.brand-hover}",
            "type": "color",
            "description": "Border color for hover state of secondary button (formerly outlined button)"
          },
          "color-border-active": {
            "value": "{jds.color.border.brand-active}",
            "type": "color",
            "description": "Border color for active state of secondary button (formerly outlined button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for secondary button (formerly outlined button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of secondary button (formerly outlined button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of secondary button (formerly outlined button)"
          },
          "height-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Height for small secondary button"
          },
          "height-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for medium secondary button"
          },
          "icon-size": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of secondary button"
          },
          "label-font": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textDecoration": "{jds.text-decoration.none}",
              "textCase": "{jds.text-case.none}"
            },
            "type": "typography",
            "description": "Font for secondary button label"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for secondary button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for secondary button"
          },
          "padding": {
            "value": "0 {jds.space.5}",
            "type": "spacing",
            "description": "Padding for secondary button"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Spacing for gap between elements within secondary button"
          }
        },
        "tertiary": {
          "color-text": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Text color for tertiary button (formerly text button)"
          },
          "color-text-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Text color for hover state of tertiary button (formerly text button)"
          },
          "color-text-active": {
            "value": "{jds.color.text.brand-active}",
            "type": "color",
            "description": "Text color for active state of tertiary button (formerly text button)"
          },
          "color-icon": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Color of icon for tertiary button (formerly text button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Color of icon for hover state of tertiary button (formerly text button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.brand-active}",
            "type": "color",
            "description": "Color of icon for active state of tertiary button (formerly text button)"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for tertiary button (formerly text button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of tertiary button (formerly text button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.neutral-subtle-active}",
            "type": "color",
            "description": "Text color for active state of tertiary button (formerly text button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for tertiary button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of tertiary button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of tertiary button (formerly text button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for tertiary button (formerly text button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of tertiary button (formerly text button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of tertiary button (formerly text button)"
          },
          "height-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Height for small tertiary button"
          },
          "height-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for medium tertiary button"
          },
          "icon-size": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of tertiary button"
          },
          "label-font": {
            "value": {
              "fontFamily": "{jds.font-family.body}",
              "fontWeight": "{jds.font-weight.600-semibold}",
              "lineHeight": "{jds.line-height.body}",
              "fontSize": "{jds.font-size.3}",
              "letterSpacing": "{jds.letter-spacing.normal}",
              "paragraphSpacing": "{jds.paragraph-spacing.normal}",
              "textDecoration": "{jds.text-decoration.none}",
              "textCase": "{jds.text-case.none}"
            },
            "type": "typography",
            "description": "Font for tertiary button label"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for tertiary button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for tertiary button"
          },
          "padding": {
            "value": "0 {jds.space.5}",
            "type": "spacing",
            "description": "Padding for tertiary button"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Spacing for gap between elements within tertiary button"
          }
        }
      },
      "toggle-button": {
        "color": {
          "background": {
            "value": "{jds.elevation.surface}",
            "type": "color",
            "description": "Background color for toggle button"
          },
          "background-hover": {
            "value": "{jds.elevation.surface-hover}",
            "type": "color",
            "description": "Background color for hover state of toggle button"
          },
          "background-active": {
            "value": "{jds.elevation.surface-active}",
            "type": "color",
            "description": "Background color for active state of toggle button"
          },
          "background-selected": {
            "value": "{jds.color.background.selected}",
            "type": "color",
            "description": "Background color for selected state of toggle button"
          },
          "background-selected-hover": {
            "value": "{jds.color.background.selected-hover}",
            "type": "color",
            "description": "Background color for selected hover state of toggle button"
          },
          "background-selected-active": {
            "value": "{jds.color.background.selected-active}",
            "type": "color",
            "description": "Background color for selected active state of toggle button"
          },
          "border": {
            "value": "{jds.color.border.regular}",
            "type": "color",
            "description": "Border color for toggle button"
          },
          "text": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Text color for toggle button"
          },
          "text-hover": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Text color for hover state of toggle button"
          },
          "text-active": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Text color for active state of toggle button"
          },
          "text-selected": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Selected text color for toggle button"
          },
          "text-selected-hover": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for selected hover state of toggle button"
          },
          "text-selected-active": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Text color for selected active state of toggle button"
          }
        },
        "left": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for left toggle button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for the left button in a toggle button"
          }
        },
        "center": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for center toggle button"
          },
          "border-radius": {
            "value": "0",
            "type": "borderRadius",
            "description": "Border radius for the center button(s) in a toggle button"
          }
        },
        "right": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for right toggle button"
          },
          "border-radius": {
            "value": "0 {jds.border-radius.regular} {jds.border-radius.regular} 0",
            "type": "borderRadius",
            "description": "Border radius for the right button in a toggle button"
          }
        },
        "height-medium": {
          "value": "{jds.size.input-height}",
          "type": "sizing",
          "description": "Height for medium toggle button"
        },
        "padding": {
          "value": "0 {jds.space.5}",
          "type": "spacing",
          "description": "Padding for toggle button"
        },
        "group": {
          "gap": {
            "value": "-1",
            "type": "spacing",
            "description": "Gap between buttons in toggle button group"
          }
        }
      },
      "validation": {
        "icon-size": {
          "value": "{jds.size.2}",
          "type": "sizing",
          "description": "Size for icon in a validation message"
        },
        "gap": {
          "inner": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between elements in a validation message"
          },
          "bottom": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between bottom-positioned validation and the affected component"
          }
        }
      },
      "date-picker": {
        "calendar": {
          "card": {
            "color-background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color of date picker calendar"
            },
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker calendar card"
            },
            "shadow": {
              "value": "{jds.elevation.shadow.raised}",
              "type": "boxShadow",
              "description": "Shadow for date picker calendar"
            }
          },
          "content": {
            "gap": {
              "value": "{jds.space.2}",
              "type": "spacing",
              "description": "Gap for date picker calendar"
            },
            "padding": {
              "value": "{jds.space.3}",
              "type": "spacing",
              "description": "Padding for date picker calendar"
            }
          },
          "day-month-year": {
            "color-background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color for date picker calendar elements"
            },
            "color-background-hover": {
              "value": "{jds.color.background.neutral-subtle-hover}",
              "type": "color",
              "description": "Background color of hover state for date picker calendar elements"
            },
            "color-background-active": {
              "value": "{jds.color.background.neutral-subtle-active}",
              "type": "color",
              "description": "Background color of actove state for date picker calendar elements"
            },
            "color-background-selected": {
              "value": "{jds.color.background.selected}",
              "type": "color",
              "description": "Background color of selected state for date picker calendar elements"
            },
            "color-background-selected-hover": {
              "value": "{jds.color.background.selected-hover}",
              "type": "color",
              "description": "Background color of selected hover state for date picker calendar elements"
            },
            "color-background-selected-active": {
              "value": "{jds.color.background.selected-active}",
              "type": "color",
              "description": "Background color of selected active state for date picker calendar elements"
            },
            "color-text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Background color of date picker calendar text"
            },
            "color-text-selected": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Color for date picker calendar selected text"
            },
            "range": {
              "color-background-selected": {
                "value": "{jds.color.background.selected-subtle}",
                "type": "color",
                "description": "Background color of selected state for date picker days range"
              },
              "color-background-selected-hover": {
                "value": "{jds.color.background.selected-subtle-hover}",
                "type": "color",
                "description": "Background color of selected hover state for date picker days range"
              },
              "color-background-selected-active": {
                "value": "{jds.color.background.selected-subtle-active}",
                "type": "color",
                "description": "Background color of selected active state for date picker days range"
              }
            },
            "previous-next-month": {
              "color-text": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Color of date picker calendar previous or next month text"
              }
            }
          },
          "today": {
            "color-border": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Border color of date picker calendar today"
            },
            "color-background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of date picker calendar today"
            },
            "color-border-selected": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Border color of date picker calendar today selected"
            },
            "color-background-selected": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of date picker calendar today selected"
            },
            "previous-next-month": {
              "color-border": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Border color of previous or next month for date picker calendar today"
              }
            },
            "border-width": {
              "value": {
                "borderWidthTop": "{jds.border-width.none}",
                "borderWidthRight": "{jds.border-width.none}",
                "borderWidthBottom": "{jds.border-width.thick}",
                "borderWidthLeft": "{jds.border-width.none}"
              },
              "type": "composition",
              "description": "Composition token with individual border width values for date picker calendar today border"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for date picker today"
            }
          },
          "day-content": {
            "gap": {
              "value": "2",
              "type": "spacing",
              "description": "Gap between date picker calendar days content elements"
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for date picker calendar days content"
            }
          },
          "day-row": {
            "gap": {
              "value": "0",
              "type": "spacing",
              "description": "Gap for date picker calendar row"
            }
          },
          "month-year-row": {
            "gap": {
              "value": "AUTO",
              "type": "spacing",
              "description": "Gap for date picker calendar row"
            }
          },
          "month-year-content": {
            "gap": {
              "value": "16",
              "type": "spacing",
              "description": "Gap for month-year selection for the date picker"
            },
            "padding": {
              "value": "0 12",
              "type": "spacing",
              "description": "Padding for date picker calendar month and year selection"
            }
          },
          "month-year": {
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker month element"
            }
          },
          "day": {
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker day"
            },
            "range-start-border-radius": {
              "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius for date picker day range start"
            },
            "range-border-radius": {
              "value": "0",
              "type": "borderRadius",
              "description": "Border radius for date picker day range"
            },
            "range-end-border-radius": {
              "value": "0 {jds.border-radius.regular} {jds.border-radius.regular} 0",
              "type": "borderRadius",
              "description": "Border radius for date picker day range end"
            }
          }
        },
        "card": {
          "min-width": {
            "value": "240",
            "type": "sizing",
            "description": "Min-width for the date picker card for consistent width with varying content"
          }
        },
        "elements": {
          "height": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for date picker elements"
          }
        },
        "date-input-field": {
          "month-day": {
            "width": {
              "value": "48",
              "type": "sizing",
              "description": "Width for date picker date two-digit month and day input"
            }
          },
          "year": {
            "width": {
              "value": "64",
              "type": "sizing",
              "description": "Width for date picker date four-digit year input"
            }
          }
        },
        "today": {
          "width": {
            "value": "16",
            "type": "sizing",
            "description": "Width for date picker today container"
          },
          "height": {
            "value": "21",
            "type": "sizing",
            "description": "Height for date picker today container"
          }
        },
        "day": {
          "width": {
            "value": "{jds.date-picker.elements.height}",
            "type": "sizing",
            "description": "Width for date picker day"
          }
        }
      },
      "input-field": {
        "border-width": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for input field"
        },
        "border-width-hover": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for hover state of input field"
        },
        "border-width-active": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for active state of input field"
        },
        "border-width-focus": {
          "value": {
            "borderWidthTop": "{jds.border-width.regular}",
            "borderWidthRight": "{jds.border-width.regular}",
            "borderWidthBottom": "{jds.border-width.regular}",
            "borderWidthLeft": "{jds.border-width.regular}"
          },
          "type": "composition",
          "description": "Composition token with individual border width values for focus state of input field"
        },
        "read-only": {
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.regular}",
              "borderWidthRight": "{jds.border-width.regular}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.regular}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for read-only state of input field"
          }
        },
        "text": {
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-text-read-only": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Color for read-only state of input text"
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.round}",
          "type": "borderRadius",
          "description": "Border radius for input field"
        },
        "color-background": {
          "value": "{jds.color.background.input}",
          "type": "color",
          "description": "Background color for input field"
        },
        "color-background-hover": {
          "value": "{jds.color.background.input-hover}",
          "type": "color",
          "description": "Background color for hover state of input field"
        },
        "color-background-active": {
          "value": "{jds.color.background.input-active}",
          "type": "color",
          "description": "Background color for active state of input field"
        },
        "color-background-read-only": {
          "value": "{jds.color.background.input-read-only}",
          "type": "color",
          "description": "Background color for read-only state of input field"
        },
        "color-border": {
          "value": "{jds.color.cypher-blue.50}",
          "type": "color",
          "description": "Color of border for input field"
        },
        "color-border-read-only": {
          "value": "{jds.color.border.input}",
          "type": "color",
          "description": "Color of border for read-only state of input field"
        },
        "placeholder": {
          "color-text": {
            "value": "{jds.color.text.brand-accent-2}",
            "type": "color"
          }
        },
        "currency": {
          "color-text": {
            "value": "{jds.color.text.subtle}",
            "type": "color",
            "description": "Color for currency text in a currency input field"
          }
        },
        "height": {
          "value": "{jds.size.input-height}",
          "type": "sizing",
          "description": "Height for input field components"
        },
        "gap": {
          "value": "{jds.space.3}",
          "type": "spacing",
          "description": "Gap for input field"
        },
        "padding": {
          "value": "0 12",
          "type": "spacing",
          "description": "Padding for input field"
        },
        "multiselect-gap": {
          "value": "{jds.space.3}",
          "type": "spacing",
          "description": "Gap for the multiselect container in the input field"
        },
        "compound-field": {
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap between multiple fields in a compound input"
          }
        }
      },
      "dropdown": {
        "list-item": {
          "padding": {
            "value": "0 12",
            "type": "spacing",
            "description": "Padding for dropdown list item"
          },
          "gap": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap for dropdown list item"
          },
          "height": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for dropdown option component"
          },
          "placeholder": {
            "color-text": {
              "value": "{jds.color.text.subtle}",
              "type": "color"
            }
          },
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-background": {
            "value": "{jds.elevation.surface}",
            "type": "color"
          },
          "color-background-hover": {
            "value": "{jds.elevation.surface-hover}",
            "type": "color"
          },
          "color-background-active": {
            "value": "{jds.elevation.surface-active}",
            "type": "color"
          },
          "color-text-selected": {
            "value": "{jds.color.text.inverse}",
            "type": "color"
          },
          "color-background-selected": {
            "value": "{jds.color.background.selected}",
            "type": "color"
          },
          "color-background-selected-hover": {
            "value": "{jds.color.background.selected-hover}",
            "type": "color"
          },
          "color-background-selected-active": {
            "value": "{jds.color.background.selected-active}",
            "type": "color"
          }
        },
        "card": {
          "color": {
            "background": {
              "value": "{jds.elevation.surface}",
              "type": "color",
              "description": "Background color for dropdown card container"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for dropdown card container"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for dropdown card container"
          }
        },
        "gap": {
          "value": "{jds.space.1}",
          "type": "spacing",
          "description": "Gap between dropdown card container and its trigger element"
        },
        "max-height": {
          "value": "300",
          "type": "sizing",
          "description": "Maximum height for a dropdown container"
        }
      },
      "label": {
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Text color for labels"
        },
        "color-text-secondary": {
          "value": "{jds.color.text.subtle}",
          "type": "color",
          "description": "Text color for secondary form labels"
        },
        "help": {
          "color-icon": {
            "value": "{jds.color.icon.brand}",
            "type": "color",
            "description": "Color for the help icon used with labels"
          },
          "icon": {
            "size": {
              "value": "{jds.icon.size-medium}",
              "type": "sizing",
              "description": "Size of help icon in label"
            }
          }
        },
        "required": {
          "color-text": {
            "value": "{jds.color.text.required}",
            "type": "color",
            "description": "Required indicator, most typically an asterisk."
          }
        },
        "gap": {
          "inner": {
            "value": "{jds.space.1}",
            "type": "spacing",
            "description": "Gap between elements in the main line of the label base component"
          },
          "top": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between an top-positioned base label and the component it describes"
          },
          "side": {
            "value": "{jds.space.2}",
            "type": "spacing",
            "description": "Gap between an side-positioned base label and the selector it describes"
          },
          "side-large": {
            "value": "{jds.space.7}",
            "type": "spacing",
            "description": "Gap between the base inline label and the component it describes"
          }
        }
      },
      "text-area-field": {
        "padding": {
          "value": "6 12",
          "type": "spacing",
          "description": "Padding for text area input field"
        }
      },
      "phone-field": {
        "country-icon": {
          "border": {
            "value": {
              "style": "solid",
              "width": "{jds.border-width.regular}",
              "color": "{jds.color.white}"
            },
            "type": "border",
            "description": "Border for country icon in the phone field component"
          },
          "shadow": {
            "value": {
              "x": "0",
              "y": "0",
              "blur": "2",
              "spread": "1",
              "color": "{jds.color.shadow}",
              "type": "dropShadow"
            },
            "type": "boxShadow",
            "description": "Drop shadow for the phone field country icon"
          },
          "border-radius": {
            "value": "2",
            "type": "borderRadius",
            "description": "Border radius for the country icon in the phone field component"
          }
        }
      },
      "icon-button": {
        "primary": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small primary icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium primary icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small primary icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium primary icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for primary icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for primary icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon of primary icon button (formerly filled icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon hover state of primary icon button (formerly filled icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color for icon active state of primary icon button (formerly filled icon button)"
          },
          "color-background": {
            "value": "{jds.color.background.brand}",
            "type": "color",
            "description": "Background color for primary icon button (formerly filled icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-hover}",
            "type": "color",
            "description": "Background color for hover state of primary icon button (formerly filled icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-active}",
            "type": "color",
            "description": "Background color for active state of primary icon button (formerly filled icon button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for primary icon button (formerly filled icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of primary icon button (formerly filled icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of primary icon button (formerly filled icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for primary icon button(formerly filled button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of primary icon button (formerly filled button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of primary icon button (formerly filled button)"
          }
        },
        "secondary": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small secondary icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium secondary icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small secondary icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium secondary icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for secondary icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.raised}",
            "type": "boxShadow",
            "description": "Shadow for secondary icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.brand}",
            "type": "color",
            "description": "Icon color for secondary icon button (formerly outlined icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for hover state of secondary icon button (formerly outlined icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Icon color for active state of secondary icon button (formerly outlined icon button)"
          },
          "color-background": {
            "type": "color",
            "value": "{jds.color.background.neutral-subtle}",
            "description": "Background color for secondary icon button (formerly outlined icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-hover}",
            "type": "color",
            "description": "Background color for hover state of secondary icon button (formerly outlined icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-active}",
            "type": "color",
            "description": "Background color for active state of secondary icon button (formerly outlined icon button)"
          },
          "color-border": {
            "value": "{jds.color.border.brand}",
            "type": "color",
            "description": "Border color for secondary icon button (formerly outlined icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.border.brand-hover}",
            "type": "color",
            "description": "Border color for hover state of secondary icon button (formerly outlined icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.border.brand-active}",
            "type": "color",
            "description": "Border color for active state of secondary icon button (formerly outlined icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for secondary icon button (formerly outlined button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of secondary icon button (formerly outlined button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.thick}",
              "borderWidthRight": "{jds.border-width.thick}",
              "borderWidthBottom": "{jds.border-width.thick}",
              "borderWidthLeft": "{jds.border-width.thick}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of secondary icon button (formerly outlined button)"
          }
        },
        "tertiary": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small tertiary icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium tertiary icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small tertiary icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium tertiary icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for tertiary icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for tertiary icon button"
          },
          "color-icon": {
            "value": "{jds.color.text.brand}",
            "type": "color",
            "description": "Color of icon for tertiary icon button (formerly text icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.text.brand-hover}",
            "type": "color",
            "description": "Color of icon for hover state of tertiary icon button (formerly text icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.brand-active}",
            "type": "color",
            "description": "Color of icon for active state of tertiary icon button (formerly text icon button)"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for tertiary icon button (formerly text icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of tertiary icon button (formerly text icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.neutral-subtle-active}",
            "type": "color",
            "description": "Text color for active state of tertiary icon button (formerly text icon button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for tertiary icon button (formerly text icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of tertiary icon button (formerly text icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of tertiary icon button (formerly text icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for tertiary icon button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of tertiary icon button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of tertiary icon button (formerly text button)"
          }
        },
        "neutral": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small neutral icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium neutral icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small neutral icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium neutral icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for neutral icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for neutral icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.regular}",
            "type": "color",
            "description": "Color of icon for neutral icon button (formerly black icon button)"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.regular}",
            "type": "color",
            "description": "Color of icon for hover state of neutral icon button (formerly black icon button)"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.regular}",
            "type": "color",
            "description": "Color of icon for active state of neutral icon button (formerly black icon button)"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for neutral icon button (formerly black icon button)"
          },
          "color-background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of neutral icon button (formerly black icon button)"
          },
          "color-background-active": {
            "value": "{jds.color.background.neutral-subtle-active}",
            "type": "color",
            "description": "Text color for active state of neutral icon button (formerly black icon button)"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for neutral icon button (formerly black icon button)"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of neutral icon button (formerly black icon button)"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of neutral icon button (formerly black icon button)"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for neutral icon button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of neutral icon button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of neutral icon button (formerly text button)"
          }
        },
        "inverse": {
          "size-small": {
            "value": "{jds.size.input-height} - {jds.space.2}",
            "type": "sizing",
            "description": "Size for small inverse icon button"
          },
          "size-medium": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Size for medium inverse icon button"
          },
          "icon-size-small": {
            "value": "{jds.space.5}",
            "type": "sizing",
            "description": "Size for icon of small inverse icon button"
          },
          "icon-size-medium": {
            "value": "{jds.space.6}",
            "type": "sizing",
            "description": "Size for icon of medium inverse icon button"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius for inverse icon button"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.none}",
            "type": "boxShadow",
            "description": "Shadow for inverse icon button"
          },
          "color-icon": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color of icon for inverse icon button"
          },
          "color-icon-hover": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color of icon for hover state of inverse icon button"
          },
          "color-icon-active": {
            "value": "{jds.color.icon.inverse}",
            "type": "color",
            "description": "Color of icon for active state of inverse icon button"
          },
          "color-background": {
            "value": "{jds.color.transparent-virtual}",
            "type": "color",
            "description": "Background color for inverse icon button"
          },
          "color-background-hover": {
            "value": "{jds.color.interaction-overlay.hover}",
            "type": "color",
            "description": "Background color for hover state of inverse icon button"
          },
          "color-background-active": {
            "value": "{jds.color.interaction-overlay.active}",
            "type": "color",
            "description": "Text color for active state of inverse icon button"
          },
          "color-border": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for inverse icon button"
          },
          "color-border-hover": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for hover state of inverse icon button"
          },
          "color-border-active": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Border color for active state of inverse icon button"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for inverse icon button (formerly text button)"
          },
          "border-width-hover": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for hover state of inverse icon button (formerly text button)"
          },
          "border-width-active": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.none}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Composition token with individual border width values for active state of inverse icon button (formerly text button)"
          }
        }
      },
      "card": {
        "color-background": {
          "value": "{jds.elevation.surface}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "border": {
          "value": {
            "color": "{jds.color.cypher-blue.20}",
            "width": "{jds.border-width.regular}"
          },
          "type": "border"
        }
      },
      "footer": {
        "color-background": {
          "value": "{jds.color.background.brand-accent-2}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color"
        }
      },
      "header": {
        "height": {
          "value": "56px",
          "type": "sizing",
          "description": "Height for header"
        },
        "logo-height": {
          "value": "40",
          "type": "sizing",
          "description": "Equivalent to 2.5rem at 16px root. Need to add rem conversion."
        },
        "avatar-size": {
          "value": "28px",
          "type": "sizing",
          "description": "Avatar size when in header"
        },
        "consumer": {
          "height-phone": {
            "value": "48",
            "type": "sizing",
            "description": "Height for consumer header phone."
          },
          "color-border-bottom": {
            "value": "{jds.color.border.brand}",
            "type": "color"
          }
        },
        "color-background": {
          "value": "{jds.color.background.brand-accent-2}",
          "type": "color",
          "description": "Default header background uses the alternate brand color."
        },
        "color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Default text color for header."
        },
        "search-color-background": {
          "value": "{jds.color.interaction-overlay.hover}",
          "type": "color"
        },
        "search-color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Color for text in header search"
        },
        "logo-color-background": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Color for logo in header"
        },
        "title-color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Color for title in header"
        },
        "icon-color-background": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Background color for icon buttons in header"
        },
        "icon-color-icon": {
          "value": "{jds.color.icon.regular}",
          "type": "color",
          "description": "Icon color for icon buttons in header"
        },
        "icon-color-icon-inverse": {
          "value": "{jds.color.white}",
          "type": "color",
          "description": "Icon color for icon buttons in header"
        },
        "label-color-text": {
          "value": "{jds.color.text.inverse}",
          "type": "color",
          "description": "Color for labels in header"
        },
        "subheader-height": {
          "value": "40",
          "type": "sizing",
          "description": "Equivalent of 2.5rem with root of 16px."
        },
        "border-bottom": {
          "value": "0",
          "type": "borderWidth"
        }
      },
      "icon": {
        "size-small": {
          "value": "14px",
          "type": "sizing",
          "description": "Size of small icon"
        },
        "size-medium": {
          "value": "16px",
          "type": "sizing",
          "description": "Size of medium icon"
        },
        "size-large": {
          "value": "20px",
          "type": "sizing",
          "description": "Size of large icon"
        }
      },
      "info-label": {
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.error}",
              "type": "color",
              "description": "Background color for error info label"
            },
            "border": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error info label"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for error info label"
            },
            "icon": {
              "value": "{jds.color.icon.inverse}",
              "type": "color",
              "description": "Icon color for error info label"
            }
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.information}",
              "type": "color",
              "description": "Background color for information info label"
            },
            "border": {
              "value": "{jds.color.border.information}",
              "type": "color",
              "description": "Border color for information info label"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for information info label"
            },
            "icon": {
              "value": "{jds.color.icon.inverse}",
              "type": "color",
              "description": "Icon color for information info label"
            }
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.success}",
              "type": "color",
              "description": "Background color for success info label"
            },
            "border": {
              "value": "{jds.color.border.success}",
              "type": "color",
              "description": "Border color for success info label"
            },
            "text": {
              "value": "{jds.color.text.inverse}",
              "type": "color",
              "description": "Text color for success info label"
            },
            "icon": {
              "value": "{jds.color.icon.inverse}",
              "type": "color",
              "description": "Icon color for success info label"
            }
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.warning}",
              "type": "color",
              "description": "Background color for warning info label"
            },
            "border": {
              "value": "{jds.color.border.warning}",
              "type": "color",
              "description": "Border color for warning info label"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning info label"
            },
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for warning info label"
            }
          }
        },
        "neutral": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral}",
              "type": "color",
              "description": "Background color for neutral info label"
            },
            "border": {
              "value": "{jds.color.palette-neutral.10}",
              "type": "color",
              "description": "Border color for neutral info label"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for neutral info label"
            },
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for neutral info label"
            }
          }
        },
        "height": {
          "value": "23",
          "type": "sizing"
        },
        "border-radius": {
          "value": "{jds.border-radius.round}",
          "type": "borderRadius",
          "description": "Border radius for info label"
        },
        "padding": {
          "value": "0 {jds.space.3}",
          "type": "spacing",
          "description": "Padding for info label"
        },
        "border-width": {
          "value": "{jds.border-width.regular}",
          "type": "borderWidth",
          "description": "Border width for info label"
        }
      },
      "layout": {
        "page-content-area-max-width": {
          "value": "720px",
          "type": "sizing",
          "description": "Maximum of the page content area."
        }
      },
      "progress-bar": {
        "status": {
          "color": {
            "text": {
              "value": "{jds.color.text.subtle}",
              "type": "color",
              "description": "Text color for progress bar status"
            },
            "background": {
              "value": "{jds.color.background.brand}",
              "type": "color",
              "description": "Background color for progress bar status indicator"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of the progress bar status indicator"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of progress bar status indicator"
          }
        },
        "track": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral}",
              "type": "color",
              "description": "Background color for progress bar track"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of the progress bar track"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of progress bar track"
          }
        },
        "label": {
          "color": {
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for progress bar label"
            }
          }
        },
        "color-background-hover": {
          "value": "{jds.color.background.brand}",
          "type": "color"
        },
        "color-background-complete-hover": {
          "value": "{jds.color.background.brand-hover}",
          "type": "color"
        }
      },
      "progress-step": {
        "node": {
          "completed": {
            "color": {
              "background": {
                "value": "{jds.color.background.brand}",
                "type": "color",
                "description": "Background color of completed state of progress step node"
              },
              "background-hover": {
                "value": "{jds.color.background.brand-hover}",
                "type": "color",
                "description": "Background color of completed hover state of progress step node"
              },
              "background-active": {
                "value": "{jds.color.background.brand-active}",
                "type": "color",
                "description": "Background color of completed active state of progress step node"
              },
              "border": {
                "value": "{jds.color.border.brand}",
                "type": "color",
                "description": "Border color of completed state of progress step node"
              },
              "icon": {
                "value": "{jds.color.icon.inverse}",
                "type": "color",
                "description": "Color for icon of completed state of progress step node"
              },
              "icon-hover": {
                "value": "{jds.color.icon.inverse}",
                "type": "color",
                "description": "Color for icon hover state of completed state of progress step node"
              },
              "icon-active": {
                "value": "{jds.color.icon.inverse}",
                "type": "color",
                "description": "Color for icon active state of completed state of progress step node"
              }
            },
            "size": {
              "value": "20",
              "type": "sizing",
              "description": "Size of completed node for progress step"
            },
            "border-radius": {
              "value": "{jds.border-radius.round}",
              "type": "borderRadius",
              "description": "Border radius for completed node of progress step"
            },
            "border-width": {
              "value": "0",
              "type": "borderWidth",
              "description": "Border width for completed node of progress step"
            }
          },
          "current": {
            "color": {
              "background": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Background color for current node of progress step"
              },
              "background-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Background color for current node hover state of progress step"
              },
              "background-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Background color for current node active state of progress step"
              },
              "border": {
                "value": "{jds.color.border.brand}",
                "type": "color",
                "description": "Border color for current node of progress step"
              }
            },
            "inner": {
              "color": {
                "background": {
                  "value": "{jds.color.background.neutral-subtle}",
                  "type": "color",
                  "description": "Background color for inner current node of progress step"
                },
                "background-hover": {
                  "value": "{jds.color.background.neutral-subtle}",
                  "type": "color",
                  "description": "Background color for hover state of inner current node of progress step"
                },
                "background-active": {
                  "value": "{jds.color.background.neutral-subtle}",
                  "type": "color",
                  "description": "Background color for active state of inner current node of progress step"
                }
              },
              "size": {
                "value": "8",
                "type": "sizing",
                "description": "Inner size of current node for progress step"
              }
            },
            "size": {
              "value": "20",
              "type": "sizing",
              "description": "Size of current node for progress step"
            },
            "border-radius": {
              "value": "{jds.border-radius.round}",
              "type": "borderRadius",
              "description": "Border radius for current node of progress step"
            },
            "border-width": {
              "value": "0",
              "type": "borderWidth",
              "description": "Border width for current node of progress step"
            }
          },
          "next": {
            "color": {
              "background": {
                "value": "{jds.color.background.neutral-subtle}",
                "type": "color",
                "description": "Background color for next node state of progress step"
              },
              "background-hover": {
                "value": "{jds.color.background.neutral-subtle-hover}",
                "type": "color",
                "description": "Background color for next node hover state of progress step"
              },
              "background-active": {
                "value": "{jds.color.background.neutral-subtle-active}",
                "type": "color",
                "description": "Background color for next node active state of progress step"
              },
              "border": {
                "value": "{jds.color.border.regular}",
                "type": "color",
                "description": "Border color for next node state of progress step"
              },
              "border-hover": {
                "value": "{jds.color.border.brand-hover}",
                "type": "color",
                "description": "Border color for next node hover state of progress step"
              },
              "border-active": {
                "value": "{jds.color.border.brand-active}",
                "type": "color",
                "description": "Border color for next node active state of progress step"
              },
              "text": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next node state of progress step"
              },
              "text-hover": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next node hover state of progress step"
              },
              "text-active": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next node active state of progress step"
              }
            },
            "size": {
              "value": "20",
              "type": "sizing",
              "description": "Size of next node for progress step"
            },
            "border-radius": {
              "value": "{jds.border-radius.round}",
              "type": "borderRadius",
              "description": "Border radius for next node of progress step"
            },
            "border-width": {
              "value": "0",
              "type": "borderWidth",
              "description": "Border width for next node of progress step"
            }
          }
        },
        "label": {
          "current": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color for current state of progress step label"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color for current hover state of progress step label"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color for current active state of progress step label"
              }
            }
          },
          "completed": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color for completed state of progress step label"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color for completed hover state of progress step label"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color for completed active state of progress step label"
              }
            }
          },
          "next": {
            "color": {
              "text": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next state of progress step label"
              },
              "text-hover": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next hover state of progress step label"
              },
              "text-active": {
                "value": "{jds.color.text.subtle}",
                "type": "color",
                "description": "Text color for next active state of progress step label"
              }
            }
          }
        },
        "status": {
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of status indicator for progress step"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of status indicator for progress step"
          },
          "color": {
            "background": {
              "value": "{jds.color.background.progress}",
              "type": "color",
              "description": "Background color for progress step status indicator"
            }
          }
        },
        "track": {
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of track for progress step"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of track for progress step"
          },
          "color": {
            "background": {
              "value": "{jds.color.background.track}",
              "type": "color",
              "description": "Background color for progress step track"
            }
          }
        },
        "vertical-track": {
          "thickness": {
            "value": "2",
            "type": "sizing",
            "description": "Thickness of vertical track for progress step"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius of vertical track for progress step"
          },
          "completed": {
            "color": {
              "background": {
                "value": "{jds.color.background.brand}",
                "type": "color",
                "description": "Background color for progress step completed vertical track"
              }
            }
          },
          "current": {
            "color": {
              "background": {
                "value": "{jds.color.background.track}",
                "type": "color",
                "description": "Background color for progress step completed vertical track"
              }
            }
          },
          "next": {
            "color": {
              "background": {
                "value": "{jds.color.background.track}",
                "type": "color",
                "description": "Background color for progress step completed next vertical track"
              }
            }
          }
        },
        "vertical": {
          "node-label": {
            "gap": {
              "value": "8",
              "type": "spacing",
              "description": "Gap between the node and label for the vertical progress step"
            }
          },
          "node-bar": {
            "gap": {
              "value": "2",
              "type": "spacing",
              "description": "Gap between the node and bar for the vertical progress step"
            }
          }
        },
        "node-label": {
          "gap": {
            "value": "8",
            "type": "spacing",
            "description": "Gap between the node and label for the progress step"
          }
        },
        "node-bar": {
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap between the node and bar for the progress step"
          }
        }
      },
      "progress-phase": {
        "status": {
          "color": {
            "background": {
              "value": "{jds.color.background.progress}",
              "type": "color",
              "description": "Background color for progress phase status indicator"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of status indicator for progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of status indicator for progress phase"
          }
        },
        "track": {
          "color": {
            "background": {
              "value": "{jds.color.background.track}",
              "type": "color",
              "description": "Background color for progress phase track"
            }
          },
          "thickness": {
            "value": "4",
            "type": "sizing",
            "description": "Thickness of track for progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.regular}",
            "type": "borderRadius",
            "description": "Border radius of track for progress phase"
          }
        },
        "current": {
          "color": {
            "background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of current state of progress phase"
            },
            "background-hover": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of current hover state of progress phase"
            },
            "background-active": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of current active state of progress phase"
            },
            "icon": {
              "value": "{jds.color.icon.brand}",
              "type": "color",
              "description": "Icon color of current state of progress phase"
            },
            "icon-hover": {
              "value": "{jds.color.icon.brand-hover}",
              "type": "color",
              "description": "Icon color of current hover state of progress phase"
            },
            "icon-active": {
              "value": "{jds.color.icon.brand-active}",
              "type": "color",
              "description": "Icon color of current active state of progress phase"
            }
          },
          "icon-container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for current state of progress phase"
              },
              "background-hover": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for current hover state of progress phase"
              },
              "background-active": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for current active state of progress phase"
              }
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for container of icon in current state of progress phase"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for current state icon of progress phase"
            }
          },
          "label": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color of label for current state of progress phase"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color of label for current hover state of progress phase"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color of label for current active state of progress phase"
              }
            }
          },
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for container of current state of progress phase"
          },
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap for container of current state of progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for current state container of progress phase"
          }
        },
        "completed": {
          "icon-container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for completed state of progress phase"
              },
              "background-hover": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for completed hover state of progress phase"
              },
              "background-active": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for completed active state of progress phase"
              }
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for container of icon in completed state of progress phase"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for completed state node of progress phase"
            }
          },
          "color": {
            "background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of completed state of progress phase"
            },
            "background-hover": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of completed hover state of progress phase"
            },
            "background-active": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of completed active state of progress phase"
            },
            "icon": {
              "value": "{jds.color.icon.brand}",
              "type": "color",
              "description": "Icon color of completed state of progress phase"
            },
            "icon-hover": {
              "value": "{jds.color.icon.brand-hover}",
              "type": "color",
              "description": "Icon color of completed hover state of progress phase"
            },
            "icon-active": {
              "value": "{jds.color.icon.brand-active}",
              "type": "color",
              "description": "Icon color of completed active state of progress phase"
            }
          },
          "label": {
            "color": {
              "text": {
                "value": "{jds.color.text.brand}",
                "type": "color",
                "description": "Text color of label for completed state of progress phase"
              },
              "text-hover": {
                "value": "{jds.color.text.brand-hover}",
                "type": "color",
                "description": "Text color of label for completed hover state of progress phase"
              },
              "text-active": {
                "value": "{jds.color.text.brand-active}",
                "type": "color",
                "description": "Text color of label for completed active state of progress phase"
              }
            }
          },
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for container of completed state of progress phase"
          },
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap for container of completed state of progress phase"
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for completed state container of progress phase"
          }
        },
        "next": {
          "icon-container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for next state of progress phase"
              },
              "background-hover": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for next hover state of progress phase"
              },
              "background-active": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color of icon container for next active state of progress phase"
              }
            },
            "padding": {
              "value": "0",
              "type": "spacing",
              "description": "Padding for container of icon in next state of progress phase"
            },
            "border-radius": {
              "value": "{jds.border-radius.none}",
              "type": "borderRadius",
              "description": "Border radius for next state node of progress phase"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for next state container of progress phase"
          },
          "color": {
            "background": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of next state of progress phase"
            },
            "background-hover": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of next hover state of progress phase"
            },
            "background-active": {
              "value": "{jds.color.transparent}",
              "type": "color",
              "description": "Background color of next active state of progress phase"
            },
            "icon": {
              "value": "{jds.color.icon.subtle}",
              "type": "color",
              "description": "Icon color of next state of progress phase"
            },
            "icon-hover": {
              "value": "{jds.color.icon.subtle}",
              "type": "color",
              "description": "Icon color of next hover state of progress phase"
            },
            "icon-active": {
              "value": "{jds.color.icon.subtle}",
              "type": "color",
              "description": "Icon color of next active state of progress phase"
            }
          },
          "label": {
            "color": {
              "text": {
                "value": "{jds.color.icon.subtle}",
                "type": "color",
                "description": "Text color of label for next state of progress phase"
              },
              "text-hover": {
                "value": "{jds.color.icon.subtle}",
                "type": "color",
                "description": "Text color of label for next hover state of progress phase"
              },
              "text-active": {
                "value": "{jds.color.icon.subtle}",
                "type": "color",
                "description": "Text color of label for next active state of progress phase"
              }
            }
          },
          "padding": {
            "value": "0",
            "type": "spacing",
            "description": "Padding for container of next state of progress phase"
          },
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap for container of next state of progress phase"
          }
        },
        "bar-label": {
          "gap": {
            "value": "4",
            "type": "spacing",
            "description": "Gap between progress bar and label for progress phase"
          }
        },
        "label": {
          "color": {
            "error": {
              "text": {
                "value": "{jds.color.text.error}",
                "type": "color",
                "description": "Text color for error state of progress phase label"
              }
            }
          }
        },
        "icon": {
          "color": {
            "error": {
              "value": "{jds.color.icon.error}",
              "type": "color",
              "description": "Background color of error state of progress phase icon"
            }
          }
        },
        "label-secondary": {
          "color": {
            "text": {
              "value": "{jds.color.text.subtle}",
              "type": "color",
              "description": "Text color for progress phase secondary label"
            }
          }
        }
      },
      "selector": {
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text-selected": {
          "value": "{jds.color.text.inverse}",
          "type": "color"
        },
        "color-background": {
          "value": "{jds.elevation.surface}",
          "type": "color"
        },
        "color-background-hover": {
          "value": "{jds.elevation.surface-hover}",
          "type": "color"
        },
        "color-background-active": {
          "value": "{jds.elevation.surface-active}",
          "type": "color"
        },
        "color-icon-selected": {
          "value": "{jds.color.icon.inverse}",
          "type": "color"
        },
        "color-background-selected": {
          "value": "{jds.color.background.selected}",
          "type": "color"
        },
        "color-background-selected-hover": {
          "value": "{jds.color.background.selected-hover}",
          "type": "color"
        },
        "color-background-selected-active": {
          "value": "{jds.color.background.selected-active}",
          "type": "color"
        },
        "color-border-selected": {
          "value": "{jds.color.border.selected}",
          "type": "color"
        },
        "color-border-focus": {
          "value": "{jds.color.border.focus}",
          "type": "color"
        },
        "shadow-border": {
          "value": {
            "x": "0",
            "y": "0",
            "blur": "0",
            "spread": "3",
            "color": "{jds.color.background.neutral-subtle}",
            "type": "innerShadow"
          },
          "type": "boxShadow",
          "description": "Inset shadow used as an optional second border for selectors"
        }
      },
      "side-navigation": {
        "color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text-hover": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text-active": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-background-active": {
          "value": "{jds.color.background.brand-accent-1-subtle}",
          "type": "color",
          "description": "In code, value is ‘unset’. Figma does not have this concept."
        },
        "color-border": {
          "value": "{jds.color.border.regular}",
          "type": "color"
        },
        "item": {
          "color-border-selected": {
            "value": "{jds.color.border.selected}",
            "type": "color"
          },
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-text-hover": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "color-text-active": {
            "value": "{jds.color.text.regular}",
            "type": "color"
          },
          "item-color-background": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "In code, value is ‘unset’. Figma does not have this concept."
          },
          "item-color-background-hover": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color"
          },
          "item-color-background-active": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color"
          },
          "item-select-indicator-color-background": {
            "value": "{jds.color.background.brand-accent-1}",
            "type": "color"
          }
        },
        "left-icon-color-icon": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "left-icon-color-icon-active": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "right-icon-color-icon": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "right-icon-color-icon-active": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "accordion-color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "sub-item-color-background": {
          "value": "{jds.side-navigation.accordion-color-background}",
          "type": "color"
        },
        "sub-item-color-background-hover": {
          "value": "{jds.color.background.brand-accent-1-subtle-hover}",
          "type": "color"
        }
      },
      "switch": {
        "handle": {
          "color": {
            "background": {
              "value": "{jds.elevation.surface}",
              "type": "color",
              "description": "Background color for switch handle"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for switch handle"
          },
          "size": {
            "value": "16",
            "type": "sizing",
            "description": "Size for switch button"
          }
        },
        "track": {
          "color": {
            "background-off": {
              "value": "{jds.color.palette-neutral.70}",
              "type": "color",
              "description": "Background color for off state of switch track"
            },
            "background-off-hover": {
              "value": "{jds.color.palette-neutral.80}",
              "type": "color",
              "description": "Background color for hover off state of switch track"
            },
            "background-off-active": {
              "value": "{jds.color.palette-neutral.90}",
              "type": "color",
              "description": "Background color for active off state of switch track"
            },
            "background-on": {
              "value": "{jds.color.background.selected}",
              "type": "color",
              "description": "Background color for the on state of switch track"
            },
            "background-on-hover": {
              "value": "{jds.color.background.selected-hover}",
              "type": "color",
              "description": "Background color for the hover on state of switch track"
            },
            "background-on-active": {
              "value": "{jds.color.background.selected-active}",
              "type": "color",
              "description": "Background color for the active on state of switch track"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for switch track"
          }
        },
        "width": {
          "value": "40px",
          "type": "sizing",
          "description": "Width for switch"
        },
        "height": {
          "value": "20px",
          "type": "sizing",
          "description": "Height for switch"
        },
        "padding": {
          "value": "2",
          "type": "spacing",
          "description": "Padding for switch"
        }
      },
      "tab": {
        "bar-color-background": {
          "value": "{jds.color.transparent}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-text-hover": {
          "value": "{jds.color.text.brand}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-background-hover": {
          "value": "{jds.color.background.brand}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-border-focus": {
          "value": "{jds.color.border.focus}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "bar-heading-color-border-active": {
          "value": "{jds.color.border.brand-accent-1}",
          "type": "color",
          "description": "Deprecated beginning with 10.4 release"
        },
        "height": {
          "value": "{jds.size.input-height}",
          "type": "sizing",
          "description": "Height of tab"
        },
        "color": {
          "background": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for tab"
          },
          "background-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for hover state of tab"
          },
          "background-active": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for active state of tab"
          },
          "background-selected": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for selected state of tab"
          },
          "background-selected-hover": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for selected hover state of tab"
          },
          "background-selected-active": {
            "value": "{jds.color.background.neutral-subtle}",
            "type": "color",
            "description": "Background color for selected activ state of tab"
          },
          "text": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for tab"
          },
          "text-hover": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for hover state of tab"
          },
          "text-active": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for active state of tab"
          },
          "text-selected": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for selected state of tab"
          },
          "text-selected-hover": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for selected hover state of tab"
          },
          "text-selected-active": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color for selected active state of tab"
          },
          "border-selected": {
            "value": "{jds.color.border.brand-accent-1}",
            "type": "color",
            "description": "Border color for selected state of tab"
          }
        },
        "header": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for tab header"
            },
            "border": {
              "value": "{jds.color.border.separator}",
              "type": "color",
              "description": "Border color for tab header"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for tab header"
          },
          "border-width": {
            "value": {
              "borderWidthTop": "{jds.border-width.none}",
              "borderWidthRight": "{jds.border-width.none}",
              "borderWidthBottom": "{jds.border-width.regular}",
              "borderWidthLeft": "{jds.border-width.none}"
            },
            "type": "composition",
            "description": "Border width for tab header"
          }
        },
        "content": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for tab content container"
            }
          },
          "border-radius": {
            "value": "{jds.border-radius.none}",
            "type": "borderRadius",
            "description": "Border radius for tab content container"
          },
          "padding": {
            "value": "0 12",
            "type": "spacing",
            "description": "Padding for tab content container"
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.none}",
          "type": "borderRadius",
          "description": "Border radius for tab"
        },
        "padding": {
          "value": "0 12",
          "type": "spacing",
          "description": "Padding for tab"
        },
        "border-width-selected": {
          "value": {
            "borderWidthTop": "{jds.border-width.none}",
            "borderWidthRight": "{jds.border-width.none}",
            "borderWidthBottom": "{jds.border-width.thick}",
            "borderWidthLeft": "{jds.border-width.none}"
          },
          "type": "composition",
          "description": "Border width for selected state of tab"
        }
      },
      "table": {
        "title-bar-color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "color-text": {
          "value": "{jds.color.text.regular}",
          "type": "color"
        },
        "cell-color-background": {
          "value": "{jds.color.transparent}",
          "type": "color"
        },
        "row-color-background-hover": {
          "value": "{jds.color.background.selected-subtle}",
          "type": "color"
        },
        "no-data-color-text": {
          "value": "{jds.color.text.subtle}",
          "type": "color"
        },
        "card-odd-row-color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "card-even-row-color-background": {
          "value": "{jds.color.palette-neutral.10}",
          "type": "color"
        }
      },
      "top-navigation": {
        "color-background": {
          "value": "{jds.color.background.neutral-subtle}",
          "type": "color"
        },
        "item-select-indicator-thickness": {
          "value": "4",
          "type": "sizing",
          "description": "Thickness of the select indicator for top navigation"
        },
        "item": {
          "color-text": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Text color within a top nav item."
          },
          "color-text-active": {
            "value": "{jds.color.text.regular}",
            "type": "color",
            "description": "Active text color within a top nav item."
          },
          "select-indicator-color-background": {
            "value": "{jds.color.background.brand-accent-1}",
            "type": "color",
            "description": "Background color of the select indicator within a top nav item."
          },
          "color-background": {
            "value": "{jds.color.transparent}",
            "type": "color",
            "description": "Background color of the default state of a top nav item."
          },
          "color-background-hover": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color",
            "description": "Background color of the hover state of a top nav item."
          },
          "color-background-active": {
            "value": "{jds.color.background.brand-accent-1-subtle}",
            "type": "color",
            "description": "Background color of the active state of a top nav item."
          }
        }
      },
      "slider": {
        "handle": {
          "color": {
            "background": {
              "value": "{jds.color.background.brand}",
              "type": "color",
              "description": "Background color for slider handle"
            },
            "background-hover": {
              "value": "{jds.color.background.brand-hover}",
              "type": "color",
              "description": "Background color for hover state of slider handle"
            },
            "background-active": {
              "value": "{jds.color.background.brand-active}",
              "type": "color",
              "description": "Background color for active state of slider handle"
            },
            "border": {
              "value": "{jds.color.border.brand}",
              "type": "color",
              "description": "Border color for slider handle"
            },
            "border-hover": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for hover state of slider handle"
            },
            "border-active": {
              "value": "{jds.color.border.inverse}",
              "type": "color",
              "description": "Border color for active state of slider handle"
            }
          },
          "current-value": {
            "color": {
              "text": {
                "value": "{jds.color.text.regular}",
                "type": "color",
                "description": "Text color for slider handle value"
              }
            }
          },
          "width": {
            "value": "20",
            "type": "sizing",
            "description": "Width of slider handle"
          },
          "height": {
            "value": "20",
            "type": "sizing",
            "description": "Height of slider handle"
          },
          "border-radius": {
            "value": "{jds.border-radius.round}",
            "type": "borderRadius",
            "description": "Border radius for slider knob"
          },
          "border-width": {
            "value": "{jds.border-width.none}",
            "type": "borderWidth",
            "description": "Border width for slider handle"
          },
          "border-width-hover": {
            "value": "{jds.border-width.thick}",
            "type": "borderWidth",
            "description": "Border width for hover state of slider handle"
          },
          "border-width-active": {
            "value": "{jds.border-width.thick}",
            "type": "borderWidth",
            "description": "Border width for active state of slider handle"
          },
          "shadow": {
            "value": "{jds.elevation.shadow.low}",
            "type": "boxShadow",
            "description": "Shadow for slider handle"
          }
        },
        "range": {
          "color": {
            "text": {
              "value": "{jds.color.text.subtle}",
              "type": "color",
              "description": "Text color for slider range"
            }
          }
        },
        "filled-track": {
          "color": {
            "background": {
              "value": "{jds.color.background.brand}",
              "type": "color",
              "description": "Background color for slider progress bar"
            }
          },
          "thickness": {
            "value": "2",
            "type": "sizing",
            "description": "Thickness of slider progress indicator"
          }
        },
        "track": {
          "color": {
            "background": {
              "value": "{jds.color.background.track}",
              "type": "color",
              "description": "Background color for slider progress track"
            }
          },
          "thickness": {
            "value": "2",
            "type": "sizing",
            "description": "Thickness of slider track"
          }
        },
        "gap": {
          "value": "12",
          "type": "spacing",
          "description": "Gap between elements of slider"
        }
      },
      "toggle": {
        "field": {
          "color-text": {
            "value": "{jds.color.text.subtle}",
            "type": "color"
          }
        }
      },
      "stepper": {
        "gap": {
          "value": "4",
          "type": "spacing",
          "description": "Gap between elements of stepper"
        },
        "input-field": {
          "height": {
            "value": "{jds.size.input-height}",
            "type": "sizing",
            "description": "Height for stepper input field"
          },
          "min-width": {
            "value": "{jds.size.4}",
            "type": "sizing",
            "description": "Min-width for stepper input field"
          }
        }
      },
      "tag": {
        "color": {
          "background": {
            "value": "{jds.color.background.neutral}",
            "type": "color",
            "description": "Background color for tag"
          },
          "background-hover": {
            "value": "{jds.color.background.neutral-hover}",
            "type": "color",
            "description": "Background color for hover state of tag"
          },
          "background-active": {
            "value": "{jds.color.background.neutral-active}",
            "type": "color",
            "description": "Background color for active state of tag"
          }
        },
        "icon": {
          "color": {
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Color for tag close icon"
            }
          }
        },
        "padding": {
          "value": "2 {jds.space.3} 3",
          "type": "spacing",
          "description": "Padding for tag"
        },
        "gap": {
          "value": "{jds.space.1}",
          "type": "spacing",
          "description": "Gap for tag"
        },
        "collapsed": {
          "padding": {
            "value": "2 {jds.space.3} 3",
            "type": "spacing",
            "description": "Padding for collapsed tag"
          },
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap for collapsed tag"
          }
        },
        "container": {
          "gap": {
            "value": "{jds.space.3}",
            "type": "spacing",
            "description": "Gap for tag container"
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for tag"
        },
        "min-height": {
          "value": "23",
          "type": "sizing",
          "description": "Min-height for tag"
        },
        "max-width": {
          "value": "98",
          "type": "sizing",
          "description": "Max-width for tag"
        },
        "icon-size": {
          "value": "14",
          "type": "sizing",
          "description": "Size of icon for tag"
        }
      },
      "inline-notification": {
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.error-subtle}",
              "type": "color",
              "description": "Background color for error inline notification"
            },
            "border": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.error}",
              "type": "color",
              "description": "Icon color for error inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for error inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification error icon container"
                }
              }
            }
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.information-subtle}",
              "type": "color",
              "description": "Background color for information inline notification"
            },
            "border": {
              "value": "{jds.color.border.information}",
              "type": "color",
              "description": "Border color for information inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.information}",
              "type": "color",
              "description": "Icon color for information inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for information inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification information icon container"
                }
              }
            }
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.success-subtle}",
              "type": "color",
              "description": "Background color for success inline notification"
            },
            "border": {
              "value": "{jds.color.border.success}",
              "type": "color",
              "description": "Border color for success inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.success}",
              "type": "color",
              "description": "Icon color for success inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for success inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification success icon container"
                }
              }
            }
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.warning-subtle}",
              "type": "color",
              "description": "Background color for warning inline notification"
            },
            "border": {
              "value": "{jds.color.border.warning}",
              "type": "color",
              "description": "Border color for warning inline notification"
            },
            "icon": {
              "value": "{jds.color.icon.warning}",
              "type": "color",
              "description": "Icon color for warning inline notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning inline notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.transparent}",
                  "type": "color",
                  "description": "Background color for inline notification warning icon container"
                }
              }
            }
          }
        },
        "border-width": {
          "value": "{jds.border-width.regular}",
          "type": "borderWidth",
          "description": "Border width for inline notification"
        },
        "close": {
          "container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color for inline notification close container"
              }
            },
            "border-radius": {
              "value": "0 {jds.border-radius.regular} {jds.border-radius.regular} 0",
              "type": "borderRadius",
              "description": "Border radius of close container for inline notification"
            }
          },
          "color": {
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for inline notification close"
            }
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for inline notification"
        },
        "icon": {
          "container": {
            "border-radius": {
              "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius of icon container for inline notification"
            }
          }
        },
        "width": {
          "value": "320",
          "type": "sizing",
          "description": "Width for inline notification"
        },
        "min-height": {
          "value": "40",
          "type": "sizing",
          "description": "Min-height for inline notification"
        },
        "gap": {
          "value": "0",
          "type": "spacing",
          "description": "Gap between elements within inline notification"
        }
      },
      "toast-notification": {
        "error": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for error toast notification"
            },
            "border": {
              "value": "{jds.color.border.error}",
              "type": "color",
              "description": "Border color for error toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for error toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for error toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.error}",
                  "type": "color",
                  "description": "Background color for toast notification error icon container"
                }
              }
            }
          }
        },
        "information": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for toast inline notification"
            },
            "border": {
              "value": "{jds.color.border.information}",
              "type": "color",
              "description": "Border color for information toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for information toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for information toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.information}",
                  "type": "color",
                  "description": "Background color for toast notification information icon container"
                }
              }
            }
          }
        },
        "success": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for success toast notification"
            },
            "border": {
              "value": "{jds.color.border.success}",
              "type": "color",
              "description": "Border color for success toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for success toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for success toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.success}",
                  "type": "color",
                  "description": "Background color for toast notification success icon container"
                }
              }
            }
          }
        },
        "warning": {
          "color": {
            "background": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Background color for warning toast notification"
            },
            "border": {
              "value": "{jds.color.border.warning}",
              "type": "color",
              "description": "Border color for warning toast notification"
            },
            "icon": {
              "value": "{jds.color.background.neutral-subtle}",
              "type": "color",
              "description": "Icon color for warning toast notification"
            },
            "text": {
              "value": "{jds.color.text.regular}",
              "type": "color",
              "description": "Text color for warning toast notification"
            }
          },
          "icon": {
            "container": {
              "color": {
                "background": {
                  "value": "{jds.color.background.warning}",
                  "type": "color",
                  "description": "Background color for toast notification warning icon container"
                }
              }
            }
          }
        },
        "border-width": {
          "value": "{jds.border-width.regular}",
          "type": "borderWidth",
          "description": "Border width for toast notification"
        },
        "close": {
          "container": {
            "color": {
              "background": {
                "value": "{jds.color.transparent}",
                "type": "color",
                "description": "Background color for toast notification close container"
              }
            },
            "border-radius": {
              "value": "{jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius of close container for toast notification"
            }
          },
          "color": {
            "icon": {
              "value": "{jds.color.icon.regular}",
              "type": "color",
              "description": "Icon color for toast notification close"
            }
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for toast notification"
        },
        "icon": {
          "container": {
            "border-radius": {
              "value": "{jds.border-radius.regular} 0 0 {jds.border-radius.regular}",
              "type": "borderRadius",
              "description": "Border radius of icon container for toast notification"
            }
          }
        },
        "width": {
          "value": "320",
          "type": "sizing",
          "description": "Width for toast notification"
        },
        "min-height": {
          "value": "40",
          "type": "sizing",
          "description": "Min-height for toast notification"
        },
        "gap": {
          "value": "12",
          "type": "spacing",
          "description": "Gap between elements within toast notification"
        }
      },
      "tooltip": {
        "color": {
          "background": {
            "value": "{jds.color.background.neutral-inverse}",
            "type": "color",
            "description": "Background color for tooltip"
          },
          "text": {
            "value": "{jds.color.text.inverse}",
            "type": "color",
            "description": "Background color for tooltip"
          },
          "link": {
            "color": {
              "text": {
                "value": "{jds.color.text.link-default-inverse}",
                "type": "color",
                "description": "Text color for tooltip link"
              },
              "text-hover": {
                "value": "{jds.color.text.link-inverse-hover}",
                "type": "color",
                "description": "Text color for hover state of tooltip link"
              },
              "text-active": {
                "value": "{jds.color.text.link-inverse-active}",
                "type": "color",
                "description": "Text color for active state of tooltip link"
              }
            }
          }
        },
        "border-radius": {
          "value": "{jds.border-radius.regular}",
          "type": "borderRadius",
          "description": "Border radius for tooltip"
        },
        "min-height": {
          "value": "31",
          "type": "sizing",
          "description": "Min-height for tooltip"
        },
        "max-width": {
          "value": "350",
          "type": "sizing",
          "description": "Max-width for tooltip"
        },
        "padding": {
          "value": "5 {jds.space.3}",
          "type": "spacing",
          "description": "Padding for tooltip"
        },
        "icon-trigger": {
          "color": {
            "icon": {
              "value": "{jds.color.icon.brand}",
              "type": "color",
              "description": "Color for tooltip help icon"
            }
          }
        }
      }
    }
  },
  "$themes": [
    {
      "id": "98653265af30e5ef5584757cbe65614cd8c8c92f",
      "name": "Consumer",
      "$figmaStyleReferences": {},
      "selectedTokenSets": {
        "Consumer/Component": "enabled",
        "Consumer/Global": "enabled",
        "Consumer/Semantic": "enabled"
      },
      "$figmaCollectionId": "VariableCollectionId:6221:6593",
      "$figmaModeId": "6221:1",
      "$figmaVariableReferences": {
        "jds.info-label.neutral.color-text": "07ec2f25d0ec1323098aaebe21b65f69daaff029",
        "jds.info-label.neutral.color-background": "c1d650a6b2ca608cd61413a07472a262d5ac649f",
        "jds.date-picker.calendar.month-year-content-row.gap": "1087fde036c33b06d5f2e4b6ff5eaf0d3687eef0",
        "si.font-scale.fixed.1": "513945c361da757d55b40e9c020868e65a6729d4",
        "si.font-scale.fixed.2": "fc43db8aa73503547a3f424e4c5813000a7cf7ae",
        "si.font-scale.fixed.3": "966e7958b26607b4a1cbdfd740e9836ecee31e48",
        "si.font-scale.fixed.4": "0710e591c25afb937c7a9cd58f35938b510f1beb",
        "si.font-scale.fixed.5": "e8f2ac22004c641e6977794abb8072b86039574e",
        "si.font-scale.fixed.6": "52f7989bdb63222430be42f8c15212637ab7faee",
        "si.font-scale.fixed.7": "40b0dc5d205c045f5ae03d5a154d9d721d555fb1",
        "si.font-scale.fixed.8": "e43a8504503ebe2e4689bca1ceb08f5f14a766db",
        "si.font-scale.fixed.9": "f09f6023496557cc46f094ba0e74d2abb5a0456e",
        "si.font-scale.fixed.10": "6972578a4e2d51aa04afda7f11c32cf1449a253e",
        "si.font-scale.fixed.11": "c14297dba6f61d7191e7469cd720c4452996158d",
        "si.font-scale.fixed.12": "e979d255d6e8cb9701ae76871bfe048544364cc4",
        "si.font-scale.harmonic.1": "c1810dbb7099fb21bbb8793c36eb13bf99a0f6ab",
        "si.font-scale.harmonic.2": "c14ff1a277f1b716d318bdda3ebf88dd73043c53",
        "si.font-scale.harmonic.3": "8acc84375e08e37fc59643e566aa8904cd26d88b",
        "si.font-scale.harmonic.4": "b25d24e843070c452b96a7fda01b8fb0dcaeb569",
        "si.font-scale.harmonic.5": "290bf43b77ba0bc9253ba4abd6fb740b55484f7a",
        "si.font-scale.harmonic.6": "ce8260cf2cd6be3ac6d2f4932d63e89843e44fd1",
        "si.font-scale.harmonic.7": "fb67fb140fcfd819492623e4421c8a939acece12",
        "si.font-scale.harmonic.8": "f59073b9eebe289fa877125414bd135da081bf29",
        "si.font-scale.harmonic.9": "6f382257dd2822afd92636968f17f4d6f05bd53c",
        "si.font-scale.harmonic.10": "56b5a3b517b8873098652eaa5c1b265ca624733d",
        "si.font-scale.harmonic.11": "b8ce03dde68e5b3b2311a123799eff9e54d260fb",
        "si.font-scale.harmonic.12": "67363e39bd16ba7c2c1f75e5fcd5cc32e5ba2f28",
        "si.font-scale.harmonic.ratios.selection": "d331d212830d2546b47bb4fbb75e66c09faffdc0",
        "si.font-scale.harmonic.ratios.1067-minor-second": "ead5b2b385d648afb88560a82affa844d9f8ce8e",
        "si.font-scale.harmonic.ratios.1125-major-second": "4bca6485892f0bb120f0f68ec3a0dd2c1414bb87",
        "si.font-scale.harmonic.ratios.1200-minor-third": "978041ef05f3f35b3a85553e8a8f3a44a9a2ed6a",
        "si.font-scale.harmonic.ratios.1250-major-third": "47595ba556d81f10cb29792c6a428f49215a180f",
        "si.font-scale.harmonic.ratios.1333-perfect-fourth": "159a5558066b6600322ac713b51e2a6c86b5d844",
        "si.font-scale.harmonic.ratios.1414-augmented-fourth": "c025e7d25ffd23119d4b8988cb7611b7d3f0d67a",
        "si.font-scale.harmonic.ratios.1500-perfect-fifth": "671b7d256de50cdb849d739956552de65a9e7627",
        "si.font-scale.harmonic.ratios.1618-golden-ratio": "c59cfedb19fa6efe73ffd833fa803eea4c1c284c",
        "si.font-scale.progressive.1": "d4702c3cbac5d5a36364458e0ced62231e9a6bd8",
        "si.font-scale.progressive.2": "d6699d4eec4fcc9592b9f560deffe7bd9e8f1267",
        "si.font-scale.progressive.3": "5be858a985d1414bc299bf9c2d0cb86d52d5249f",
        "si.font-scale.progressive.4": "daa936ff2557e1e0225732575e98f86cea6e0d77",
        "si.font-scale.progressive.5": "4a56eaddf255decadba58e929852cc3ba09e9d1b",
        "si.font-scale.progressive.6": "321c916ba118b54e62987a26d5c864a5e65c051b",
        "si.font-scale.progressive.7": "06d1c5ac871fec37a03f1e70b4788911b576b222",
        "si.font-scale.progressive.8": "c6cbca1846f548202662157bb28fa93a57a7a391",
        "si.font-scale.progressive.9": "1e88b84129119705f2da7a4b3044931b6b29953e",
        "si.font-scale.progressive.10": "f1db561bc404f6bb8509f2226a48c0c454ae7434",
        "si.font-scale.progressive.11": "ed3cb2be51c0368e35c6b79c55be8c27aa191fca",
        "si.font-scale.progressive.12": "11e436d99479c5995fb5013ed77f49fff40a3fe7",
        "si.font-scale.progressive-ratio.1": "a1b0ebff6ad0969034fdd0b46ce6dcba96a4b341",
        "si.font-scale.progressive-ratio.2": "f45987107763ea3acadd662520f21d101f86ec9f",
        "si.font-scale.progressive-ratio.3": "4b28e1fc8f33ef73d8a42172eef827f30505f0f9",
        "si.font-scale.progressive-ratio.4": "3c7f742dfbd643ea69384dc09e9caf4c8794b0aa",
        "si.font-scale.progressive-ratio.5": "89518934bc9be9e16f3e6b5211b8b6fcb73bcbeb",
        "si.font-scale.progressive-ratio.6": "6073f7274905cc1b9ae2cb8d9fadb6b6145095b7",
        "si.font-scale.progressive-ratio.7": "05076fab5bb215708af88ac2afc390b394eb32f1",
        "si.font-scale.progressive-ratio.8": "8c25af04ddb06a78da0db4c9dd4b142af8e5aee7",
        "si.font-scale.progressive-ratio.9": "48d02f9d9b15f747bcef873cf373396750add83a",
        "si.font-scale.progressive-ratio.10": "63f836a077f73f1f70ec8c97145e067dda73a21d",
        "si.font-scale.progressive-ratio.11": "8a3f2d6cf520a141326e44a06a8844d82de7fb70",
        "si.font-scale.progressive-ratio.12": "b3aa8c74ce3ca30bbecfd1b7202a9ce0610e2835",
        "si.media-query.phone": "d08a941266dda4605f0124efce9ea833aafa9238",
        "si.media-query.phone-wide": "2d4c08d884a3439ca0af3716861e4f7c299b49a4",
        "si.media-query.tablet": "84cd3a415ea403621a86394f148f01174b76883a",
        "si.size.1": "3e42f24be1faeceb6baee4753099b6f472076ab1",
        "si.size.2": "951935a9f0c660531657f84c67d7e0c9a964b4f8",
        "si.size.3": "95237f5cb23928298f10b9df9b6d256235f83bc6",
        "si.size.4": "1187826b13bba0cd94599aa92477b6ff3f4862ca",
        "si.size.5": "473263f31cb33e7fcc2f5aa9fe5de6937f40cfd0",
        "si.size.6": "cd4a5a536ef8ad3e5e4849099024195b95f5d487",
        "si.size.7": "d9d8a84e839feac8ed2002b754023a82b195b107",
        "si.space.1": "b65ee3522fcfd733ec2e4ebdf825c1a90b782e32",
        "si.space.2": "eb7b6cbeef25f770aea42dec35ee41556200e0bc",
        "si.space.3": "8633f341f1e540e02ac7c1df3ef847bb15d597e5",
        "si.space.4": "ad1c8df071b24fbb671698b89756f8d5687f51de",
        "si.space.5": "bef7557969e3057201b1859bacf7af59d4b41ec7",
        "si.space.6": "99435cb6ebb5b2b0d01f769c7a1ffa81aef19d7a",
        "si.space.7": "59b4cedd5f3c504c075d094a3f59f68e2e29c4f4",
        "si.space.8": "f33ba4b4e570fb33a53282eb9f956dd5ce021c6f",
        "si.space.9": "e0b552fe1967c0baef0f2bafd25cc7d7da06262b",
        "si.space.10": "d8c8f2bd46f233a5ac6f924ed664283694ce5488",
        "si.space.11": "25776e98d7ee0f0297f64625dd7f0c7c05fc854e",
        "si.space.12": "d83a00648c2a95284332fbd71a3bbdcd529e28ef",
        "si.space.13": "e33fdf9cc36852ff24327cc19825efc522fe8ed5",
        "si.space.14": "e56c26472287cab210ded94eb7881ed6cd1c9dbc",
        "si.space.15": "e6635e22e75096c11214d92eadc896d92159f08d",
        "si.color.palette-brand.10": "9ed20ebb9cadf9110f801524f7d825f853ec5e47",
        "si.color.palette-brand.20": "12a7daf70de1346f5169468e238a6e34f22c2180",
        "si.color.palette-brand.30": "d0d4966dc2dd4900ee88ba67406dea7fbebcb797",
        "si.color.palette-brand.40": "7a9d88b8a2d6a667a4744dda835dc4b5bf31f320",
        "si.color.palette-brand.50": "914435af9c1d50c90d7325e23b11273ca187acee",
        "si.color.palette-brand.60": "c422f98995594f380ecfa4ef7913288ca80d5b83",
        "si.color.palette-brand.70": "9a52d18fd7ac7bb58ccb6b60323f82937839f863",
        "si.color.palette-brand.80": "20b68a523bddc4b18514e776bc9d806a49c2c9fc",
        "si.color.palette-brand.90": "b7e9a66d876981f979935388ccd9c25b0bb9d51b",
        "si.color.palette-brand.100": "ccd8bc561bca10e8d392d6a3baaec00729d00cf7",
        "si.color.palette-brand-accent-1.10": "57e3468ef08dfd5e04f8a57aa69034dfea1e37fa",
        "si.color.palette-brand-accent-1.20": "3ec73a06c17fef068016d60482ca5a95c72538e1",
        "si.color.palette-brand-accent-1.30": "f4e93482cda6c301752a4c3de94c28d6e0031931",
        "si.color.palette-brand-accent-1.40": "5379b8cc1613693539587144857c78eddc7ff84c",
        "si.color.palette-brand-accent-1.50": "13562e08a454fcee57db0e2f6e99d6f2f120d4d3",
        "si.color.palette-brand-accent-1.60": "5b09bb9a1fae6fb1d92d4644b5833ed24c1eae57",
        "si.color.palette-brand-accent-1.70": "9499eba63e14f59722f4273bd46aa39cdf4da41c",
        "si.color.palette-brand-accent-1.80": "066f195a8d4b1a872ce9174389a83e03614ed3a3",
        "si.color.palette-brand-accent-1.90": "8ff7d1d0bccce8b5ce9ea72e1b81aa0fe9aec393",
        "si.color.palette-brand-accent-1.100": "7ff085282b358472874aa8cc1c909dc730cdc9ed",
        "si.color.palette-brand-accent-2.10": "e270dedc3a09a7e34fdd873c4ed239f2b39aeff9",
        "si.color.palette-brand-accent-2.20": "e8b48f82b0a4acafda8fbce5f24fa7de2e4f9054",
        "si.color.palette-brand-accent-2.30": "f10956e24f69109dd19d256767c17200e9eddbb5",
        "si.color.palette-brand-accent-2.40": "0310eb5091036642e58442f91fd586287d5feb7d",
        "si.color.palette-brand-accent-2.50": "2a213e4b03b70a1a4c3dd4b8f17d28404782a8be",
        "si.color.palette-brand-accent-2.60": "c76d2af63671218d393c46bdc9e945810441e0e0",
        "si.color.palette-brand-accent-2.70": "ebcd68d19e41e33e0468dde1505f942fee97eef7",
        "si.color.palette-brand-accent-2.80": "31acead44417ef79c10c15807a3dc6fda9282723",
        "si.color.palette-brand-accent-2.90": "a2527d747a8262f32bd8be37411ec6f53b6391b0",
        "si.color.palette-brand-accent-2.100": "fc992ffe8247446b6ca26cd7d8a4f95d380b5acd",
        "si.color.palette-neutral.10": "e9bb2b0d4d59b6f5db5346c72dd96a2be5b071b9",
        "si.color.palette-neutral.20": "3fa2324072776175455dec6f1d910005fdb83266",
        "si.color.palette-neutral.30": "f48eae7dd69b580197d210d999ad5a4d2b90bae4",
        "si.color.palette-neutral.40": "09fe71b2c07022158e1b50ea84901448de0d2fa0",
        "si.color.palette-neutral.50": "2d0ae3db82a0e18c1bd232a802bbb04cedfe58fe",
        "si.color.palette-neutral.60": "84177550e39833559f0bc6247d312b100ef7da05",
        "si.color.palette-neutral.70": "a8fdceb6c87f9b7697c5e65f08993c42c77c8b1b",
        "si.color.palette-neutral.80": "9099df4a512557e30f2e3ccb7e8e3067090f1e96",
        "si.color.palette-neutral.90": "6a2c2f4e8d3bdba88fcf5daed0fcd593f2265777",
        "si.color.palette-neutral.100": "c81eba39124199f9a9257a33b6cc3fce2339576c",
        "si.color.trusted-blue.10": "09c5c065531957cfebbb0483b02b30cd39d30575",
        "si.color.trusted-blue.20": "9dfbed7fae12d7b0abe88f2ae77c51f4ef53ca4e",
        "si.color.trusted-blue.30": "2d42444454a968fc52fb041669d81eb9f282782f",
        "si.color.trusted-blue.40": "b3ab588542f5407db5cc1d0486e4274cffc44634",
        "si.color.trusted-blue.50": "67923a244fc3df424af5976305811f7a1532266b",
        "si.color.trusted-blue.60": "2a89099ef99b0d2848c78c5967d0e4ecdff53992",
        "si.color.trusted-blue.70": "df078e13cf3c8d9afdb4a499d77f7fb1c63c2edb",
        "si.color.trusted-blue.80": "8d276bcc574ce37169847d0f6c2fbd68476c1d99",
        "si.color.trusted-blue.90": "76bf26c094a4cfdd4ea9d5528f5b376b807b6ed8",
        "si.color.trusted-blue.100": "e1a9087a1bfa2b910f409666796533f00915c9ae",
        "si.color.deep-blue.10": "0a52f57dbd763bc0561fa047a7f815d59e6bf402",
        "si.color.deep-blue.20": "a25484d0a78b10458e2b00a349190fbc5c30ef3a",
        "si.color.deep-blue.30": "752497190ab1295459a8b49cde21305131d47704",
        "si.color.deep-blue.40": "aa4abf1db2e6591b1c7d61346c702c681df12f9f",
        "si.color.deep-blue.50": "37b4c6adb9f4a39668df5afc6f1177e0acc7b11c",
        "si.color.deep-blue.60": "a3db2c110493a8dbf906d0e2a2849c78f753805a",
        "si.color.deep-blue.70": "5736d4e59eeab250c53366ed1fb41140ae6f732e",
        "si.color.deep-blue.80": "668fc6829cfa2bd261864b22c253b814c04f3c39",
        "si.color.deep-blue.90": "39e867a9b6c5b553c198ceeb478232ab5bc99840",
        "si.color.deep-blue.100": "050397d57f2684680c6a7e7455b3dc66f8c77590",
        "si.color.teal.10": "8707a88076ace3c45ad03674fdaf584f78aac5e7",
        "si.color.teal.20": "6415d367a496aa1c46ffd4ea05cc6aa7c62a910c",
        "si.color.teal.30": "1624ca96e9c3639a4191b155b0ca693cd16cdfc2",
        "si.color.teal.40": "95fd939e211b8e8df7e96a11052be1a0a7b86b8e",
        "si.color.teal.50": "203673d655e2d894f57ca0f23c62659bf2c45918",
        "si.color.teal.60": "41148c6d6f8f41a9457f4017574ace2be584ba8c",
        "si.color.teal.70": "13097fe19a872081abbf03210dbdecddcbe0ec63",
        "si.color.teal.80": "5b1964564d598adc4e8eac037566536f093a36cb",
        "si.color.teal.90": "f8b628978394a64e59ad25e48325da0a36e4c85a",
        "si.color.teal.100": "f1dde725f475f0ba5156b9ad4ab569ec6698924f",
        "si.color.red.10": "f44379b6b3422fafef19ff6a3413f3c1f5be4fdd",
        "si.color.red.20": "85ae6d71090bf3ea5fe9ab95a64bf0fc03fded18",
        "si.color.red.30": "a5b314e1bdf4eff481d5b7e5c796d2442bc4e3af",
        "si.color.red.40": "3e61f5ae57d4513d459bc76e7edb5a77c29c5da2",
        "si.color.red.50": "510bc2d28c2c32cb2e6f382128c676cbae1105d3",
        "si.color.red.60": "8b5105a4291aa376898fa7fea178c24f580e9029",
        "si.color.red.70": "b15fd7615345d95a1100e6b356b410e6b5197adf",
        "si.color.red.80": "97352b759eae0d8a4bfeabf843af18197a9ad3c6",
        "si.color.red.90": "95f08a34a11ebda3e7443fbd84257dc667b69138",
        "si.color.red.100": "104977ec5468aeaafc5c0bd52789b24772f4bc24",
        "si.color.yellow.10": "f76510e8bd47dc1dd4efb074c33f18ecd6bbeeff",
        "si.color.yellow.20": "5f9f8e599b3bdd99c1c50208efd79062d24b98ef",
        "si.color.yellow.30": "65279c045b69d9217908a872294d502c13366cb0",
        "si.color.yellow.40": "69a104dca03de29e7dac0f8fbbd7d346aed19131",
        "si.color.yellow.50": "98e2694f52f800f8115a24396b03a453435a39e2",
        "si.color.yellow.60": "6c5479884f4713bd0dd3f736d17cb3b046761835",
        "si.color.yellow.70": "dd2ef3a190bd47b81fd0c6dae3f3c7021779b27d",
        "si.color.yellow.80": "d08fd937ada7af62febabe6ddcfe5455fdb79d8f",
        "si.color.yellow.90": "a8d92168146221bb7206c8b3b7971014bb47094c",
        "si.color.yellow.100": "8df1dfdd7f174f75e45faf01041bd8fc9b39481e",
        "si.color.green.10": "2319a69fd9a1d0a5cf3d6f895331acb06072bcbe",
        "si.color.green.20": "d3bf67ac439c1a9d8bae481130495d9dd1225650",
        "si.color.green.30": "6b4f635945d5f9f0924b0328c6b620c9539a834f",
        "si.color.green.40": "43fd20b08138ea57b408f5b640f0504d241523ef",
        "si.color.green.50": "e7cd5e6a5b8a18bc52ae85cf29b731e49695c041",
        "si.color.green.60": "b589c9ca60741e436152b6b86f6d0d5c88655759",
        "si.color.green.70": "adcc25a5f130176cf952f418595baa597ebf140c",
        "si.color.green.80": "65e6076f32236c218d50ffa646a526e44290af9e",
        "si.color.green.90": "569279b3718ed01d040ed12715de2ee563ca47b9",
        "si.color.green.100": "caaecb5ec78539fe0c9302a248931cb33e66ac40",
        "si.color.blue.10": "2e7ed848d9ce5df21c10304e883a320812d995c5",
        "si.color.blue.20": "49a7183e4275db0390facd414458b471b4c1f225",
        "si.color.blue.30": "858fa37a80331366bab762bfcc35ca07c7b4165b",
        "si.color.blue.40": "aa7d4c8c4cc90f701b45ab7dc6e0c0ea5bb5cbb6",
        "si.color.blue.50": "d0bf014557589635e11736e2b540c15ba3e4d824",
        "si.color.blue.60": "00100d356509aeb162164263e43b694149c416b9",
        "si.color.blue.70": "41f02cc558de500269ad847547cab6924e841aec",
        "si.color.blue.80": "accddb0c69f1e6552657f5daba05dc14a5f5632e",
        "si.color.blue.90": "2902aacb6d4e92db1be22e72f741eff254c17707",
        "si.color.blue.100": "0d6b6e3f157feba53676e032318cbbc03a5fbb90",
        "si.color.gray.10": "f430ed3d3912ccc93c938292c2d8322b33b71775",
        "si.color.gray.20": "230d1bde36bf75616a605f140241897c5753c130",
        "si.color.gray.30": "8995be3346ace98b8fa9c1875df992b551370f19",
        "si.color.gray.40": "793d38be715f8a49efe57e0abeae06301ea8c4ea",
        "si.color.gray.50": "f51213b1942ef18076a33fa4e941411f28eaa944",
        "si.color.gray.60": "1ea1958de6322035c1e3096bf55df89b850c652d",
        "si.color.gray.70": "eb259b5b08b71789d7b07e957a958f668be2e6cd",
        "si.color.gray.80": "7dc676d207ac4bf118c82534494cdcd8293cd909",
        "si.color.gray.90": "aa58abe03f0716904ebf4e1483d8113f3b195e17",
        "si.color.gray.100": "5d0917793c717b02dc71e12eaae4e8a46af0a881",
        "si.color.purple.10": "70074f39b7acbac9ccde2d35c2d986c925f132b3",
        "si.color.purple.20": "6aa4a0148bc2abf8f1834fd1b0d6c04ead468eda",
        "si.color.purple.30": "ba5913cf8a3d2a40d64f4f02c05249734d42ac74",
        "si.color.purple.40": "59b2cdb9d62c8dc3ab62f9c6176a8ac7646775c1",
        "si.color.purple.50": "77282ab36032abc2b003a9255fe8977be9e092fa",
        "si.color.purple.60": "52905cb61199593e688826c59516301acf8b183f",
        "si.color.purple.70": "3f40780e08fc9d959aff7a8c833352f380b15695",
        "si.color.purple.80": "139c61c3b3269da0cc471d150965a44141177ed6",
        "si.color.purple.90": "3bc1618077fc9974e51b0daea7ed9e3cd9105c6d",
        "si.color.purple.100": "d9c8bc48c48273a3705a63afdedf033956b117a9",
        "si.color.black": "f17ead91387ebdfaeb32f0c07e0c383b3187e626",
        "si.color.transparent": "a830b3165334dfc9ed045d9bc3a6f5f62c9b3068",
        "si.color.transparent-virtual": "1219ad860352151c1ab026cc248c1e8fd5c9fce4",
        "si.color.white": "e39ade58f2679311af0d258431c4bdf96305ea72",
        "si.border-radius.regular": "3d74a5792c863c313da5427331c6992b0d822ad2",
        "si.border-radius.round": "152d226de05919ebdea0fc7a7ac05c0f76957b1a",
        "si.border-radius.none": "3b906c2e8d18e350d1990140a2f45da1c7cca36e",
        "si.border-width.regular": "26ee4424c7bb2571a6a76e12a6c23c65664831ad",
        "si.border-width.thick": "d4b10645e82ea47d05762e9d532e9137aefa0ae7",
        "si.border-width.none": "e8a96f3fd72e591e8a36ebf1197d241f3ab61684",
        "si.size.input-height": "732edf037db644f9342b635c476e491c9b9965b6",
        "si.color.background.neutral": "75ee568a64baaddcf4374a6812b9ffc3294fb225",
        "si.color.background.neutral-hover": "7c18e91736eae84d4f79fe4cd9c6fd30bd58f152",
        "si.color.background.neutral-active": "f4cab330830a3a5188aa3380a1478fe52ca869f6",
        "si.color.background.neutral-subtle": "a5e604fa741e6babd2f509c57d3297347a387fca",
        "si.color.background.neutral-subtle-hover": "8edf9db9b45fa6911266758cf168275c1d8e9772",
        "si.color.background.neutral-subtle-active": "40f9aeae7daddd0eb53bd29742243f464c2833f5",
        "si.color.background.page": "6c4d698d2eebafd99b1475d597be3f350ed5561f",
        "si.color.background.track": "f7f440dbd241d69d8af1910831f4899d881a3a67",
        "si.color.background.progress": "d93be70c69c67fdb444f3b90a437ba45bc91eeb9",
        "si.color.background.error": "ffbb4a8e5e9c4b66f84ee057bda715df4cd7c996",
        "si.color.background.information": "b3a3d24b9f5435909e9087d3dcacbcca663c7280",
        "si.color.background.success": "8d2b75f45c8df1da5c1c78d74f45799dcabdd469",
        "si.color.background.warning": "e5b963fecfa76f6d3815ff72bd33a8717eb9d621",
        "si.color.background.error-subtle": "a08029a9840e126a2914e31cb7625086e3df761b",
        "si.color.background.information-subtle": "02b55c7eb39f739531312621631551c2339d1b88",
        "si.color.background.success-subtle": "86aecf04b2cde4b392b2c189324da8e221bdd375",
        "si.color.background.warning-subtle": "9f8abb27ce380dbb29d6852920f3112e96d90fca",
        "si.color.background.selected": "f59789f62ae20e51814d375d845a00d7f7df33b1",
        "si.color.background.selected-hover": "35bbf79234c3a1b5dd7ef8c3002fd3c66113c3d4",
        "si.color.background.selected-active": "4627fbe3bf9b68ef77db5bc1aa2da1465db0714d",
        "si.color.background.selected-subtle": "1dbcc536f703b1fea5bfc0701e8855d103536dc8",
        "si.color.background.selected-subtle-hover": "7df4f4bd9874b40af6c4eed88925ee59e713effb",
        "si.color.background.selected-subtle-active": "410e0090674bebf337ee980355a87c4326931c65",
        "si.color.background.input": "9a696fb931257f5710f2dca4b562a81b3e51039e",
        "si.color.background.input-hover": "c5e5f292fca8c3f961abf11e394061649e2736f0",
        "si.color.background.input-active": "500b8ad3dee4ee932f6152813f09365daf9fb1be",
        "si.color.background.input-read-only": "bd3c41e8f6c899262a11fcf2dbde313768a02ba2",
        "si.color.background.brand": "3d94e19cc1c6a2a773e419a85702cb8a94241d85",
        "si.color.background.brand-hover": "f350d43c300318d57a957861542ca039a3709986",
        "si.color.background.brand-active": "53f679d229d2c27eb68e3256d8468d52a30529e3",
        "si.color.background.brand-subtle": "c01af388293199cbb7b8e5eeb71a53ab034ca229",
        "si.color.background.brand-subtle-hover": "ce8cdab5688d95453a41b65037261893cfe4932d",
        "si.color.background.brand-subtle-active": "fd35c166d9c0cbee14e62466c0cb8af927316f42",
        "si.color.background.brand-accent-1": "cef941caeb0354762f692d79f9a89e4a56ee10de",
        "si.color.background.brand-accent-1-hover": "f6c19c19ae3f24dadc8c3a75419e5f5940f6d6cb",
        "si.color.background.brand-accent-1-active": "c11a46a4cdecc785523008abc7b599510c58e69a",
        "si.color.background.brand-accent-1-subtle": "c2f8b8fdaa49eef503fe19bb1977e218571d58fd",
        "si.color.background.brand-accent-1-subtle-hover": "b2aff639e146d207861192b681903c9238f6412e",
        "si.color.background.brand-accent-1-subtle-active": "dfc278b5306b7f2770e724239bc7f95c256fc8e5",
        "si.color.background.brand-accent-2": "5c1924902e23dbcc1097fb1b5554cda934ab9bcc",
        "si.color.background.brand-accent-2-hover": "4805bb48867fd76151101905ce8ae41d8c0d70fd",
        "si.color.background.brand-accent-2-active": "6fe852204db8545770307caa97ad4b426a8ec9fe",
        "si.color.background.brand-accent-2-subtle": "f8d46c50d266950403fce95086844bbe3ce932be",
        "si.color.background.brand-accent-2-subtle-hover": "b5d563be09c6bccd97059811274841dd4a8928af",
        "si.color.background.brand-accent-2-subtle-active": "b951ad8ce76750a58a2d0f44eab435f4de224f5b",
        "si.color.border.regular": "7f4071c505e7de6ec161227dcf8a1b33cb730c68",
        "si.color.border.inverse": "9f95914a6d022860814e8564673c0a001c35e8bd",
        "si.color.border.focus": "70c336a9a444a4213110537a79c29fd6140cc467",
        "si.color.border.focus-inverse": "275db209262c6b365199b30684d47e379c7e954d",
        "si.color.border.separator": "c7619580d2088d6c074b7fdc052e6e269da831e2",
        "si.color.border.error": "27ab37306670022479e0d38d15b628f8578eaed7",
        "si.color.border.information": "6f18173025a7cf740d31e609f65ba0951c8fbf5f",
        "si.color.border.success": "d11fb814d5a604a5e2049abf82c3a582bfaca296",
        "si.color.border.warning": "09958fa466ea1c6e6d8611708e8a553b3f8930ac",
        "si.color.border.selected": "31f0e6d1ac8d0df979ee69e2bb1ec95649dac9ef",
        "si.color.border.selected-hover": "8cf06bfe8b4be4f71d291f87b5c39da2a9839687",
        "si.color.border.selected-active": "59b6c51526eae1dd48fa3c19863aa46aa13401fd",
        "si.color.border.input": "5c9e43d7ed86a15335944de76fb287720973cbcf",
        "si.color.border.brand": "522a238597f4d5eb68ef3df0da09bf03956b67b6",
        "si.color.border.brand-hover": "b0c492cc4e662c0457181842aa8e09a446278933",
        "si.color.border.brand-active": "be69bce3124a49a34d8d68ba2d5872137462454a",
        "si.color.border.brand-accent-1": "36a027536dbd498fa41390cea4b66200e9455758",
        "si.color.border.brand-accent-1-hover": "40e1038742cba89f44b30b19a8ce45cf649cb834",
        "si.color.border.brand-accent-1-active": "5ed599e048c6d275850e959729c14d1b942a9428",
        "si.color.border.brand-accent-2": "4dd321f6b4a9484a5c2378a1b26ccf15268e6a8a",
        "si.color.border.brand-accent-2-hover": "475e53bd1b20815d164b635b6d5ceb580f180fb3",
        "si.color.border.brand-accent-2-active": "b486de8afb58bdb98703fb4d040d1bdc011b0ba7",
        "si.color.text.regular": "5fe52e7e640284394d9054693fb9b6d9663639f2",
        "si.color.text.subtle": "a9964a07b886eab0df96397ca3801b343d0dcddf",
        "si.color.text.inverse": "a71790ea3d96c044db13cd05471e62cbea2b79d6",
        "si.color.text.error": "bfb34eea44bffcdd91f416354a285c127ad29be7",
        "si.color.text.information": "a2443859d9502c1b02e559f55dfe6a561f74da6d",
        "si.color.text.success": "8516edc3b568a2d77bdd63d40d2d216d3324e9be",
        "si.color.text.warning": "9f12c12a2c63d25ff6399fae5b004f1247dc2142",
        "si.color.text.required": "1523679ca951ad6581dfcfc84cf81dc63b27e49f",
        "si.color.text.brand": "c47087ea7889730bd79ba7c7f7bb8bed14c2bfbf",
        "si.color.text.brand-hover": "74a1cbb0361e02c834419d1c56717b6fe7bb44db",
        "si.color.text.brand-active": "6eebafb1a9ba2c471ed6b3679540931464ea03f4",
        "si.color.text.brand-accent-1": "3f98c4ab4559652f7f25ecf84247562e03d9eee9",
        "si.color.text.brand-accent-2": "471d5b22e2a79a1dd6b9fd74eca15a60c3462ad7",
        "si.color.text.link-default": "525a5b7d4efe57c32f9881adf7d71fe2783737c2",
        "si.color.text.link-hover": "fef9045b4d3567a6d5a614d9757cb51dffa44d7c",
        "si.color.text.link-active": "61a29e3ac15c393583874a4e1a5f086a0fd8b5ca",
        "si.color.text.link-visited": "a878c6ccc259e6e1d6e98f99adc2b57abd392dc3",
        "si.color.text.link-visited-hover": "fb0ad2ee0dbee7e048734bafbd678745ffa5348a",
        "si.color.text.link-visited-active": "6850e306f78db0933ee99faa19a5a01e8540658f",
        "si.color.text.link-default-inverse": "bb5661e61b2844bc28d7fe440ffc199a60f6fb70",
        "si.color.icon.regular": "7b5e8518c5ad79a593422640834e3591e355b12b",
        "si.color.icon.subtle": "b4904d75648428e952cb5fa4895bc8a3e56a3214",
        "si.color.icon.inverse": "3a955e27ae8c2a1f2f2645e966921f95c1ebc278",
        "si.color.icon.error": "4fb073f0770a6460e651e90309353f8a2c542f85",
        "si.color.icon.information": "45537a9c40be742d8dd4d98d7a128c7d4c6a2dc3",
        "si.color.icon.success": "0133cbd669ca4418ec3fcf6dd2ec8dd509f3a081",
        "si.color.icon.warning": "9b9f25d47a1348e4844abfedbb71cc2321c18354",
        "si.color.icon.brand": "e614a58594c6609c52ec4ae1e58b939dcc1d3544",
        "si.color.icon.brand-hover": "9147e4366fb2ecdd410e7b8422375d45914e8f77",
        "si.color.icon.brand-active": "6cdce42eecd5e59c9cb25351f90652f991ba54e8",
        "si.color.icon.brand-accent-1": "b30588410ed6239e63201a5892911f55c004fb9c",
        "si.color.icon.brand-accent-2": "3c39f9c2c3874bc6650cac93c9bd46dc392d9828",
        "si.color.icon.link-default": "d4032162d3ac216e199cc22b5cbfd23f145438a0",
        "si.color.icon.link-hover": "bc8728a65d8ae7f44c40c9b7dcc1d2ccffea6f45",
        "si.color.icon.link-active": "8e69ed40cc3026b2bc17a9928b15dfffe2403a83",
        "si.color.icon.link-visited": "bd50164a449e16a21af3d02325f76caa7e3ddeaa",
        "si.color.icon.link-visited-hover": "6382bb61893b01851ed439146d41cfcffbb1b458",
        "si.color.icon.link-visited-active": "8d5f61a3fd8703706fe2086feff05324c84f83cc",
        "si.color.icon.link-default-inverse": "5eea1074b2432c5dcc7bd7e9f7d380073665e235",
        "si.color.interaction-overlay.hover": "a5a024f407605ae2dbe0a6c3a1745ba8a5258039",
        "si.color.interaction-overlay.active": "c948b3dac99296377f0a6471e07212e1dcd58bd2",
        "si.color.shadow": "c1359825007db24e41e1f8939cd042ad623579a9",
        "si.utility.color.shadow.focus.regular": "a9a83a7f67b493777af3cd2d75ca2c912471fecd",
        "si.utility.color.shadow.focus.inverse": "f86fa12e3eef95aa6955e6d8001dbae713dccc67",
        "si.utility.color.shadow.focus.error": "e7a547fe5433ad9942feb9ae5cde64fe5856f89f",
        "si.utility.color.shadow.focus.error-inverse": "49650999f2657c668eff28cbb87253380757346a",
        "si.elevation.surface": "d8f0b2d6346b78687e529925cf19c7461ca5d61e",
        "si.elevation.surface-hover": "76295b143a025542d93d3158a8b993cbe5499d76",
        "si.elevation.surface-active": "9a334e04c459a64680539f05d80c276fc2a0e19b",
        "si.elevation.surface-recessed": "6d031e33d3832eeef6513d55ed5fa6c5c837d290",
        "si.elevation.surface-raised": "a1bf76e93385425702ea7aa17e3e9151015a434c",
        "si.elevation.surface-raised-hover": "1e45d7c2f32c017827c6fb4b7ca099cebd0f200d",
        "si.elevation.surface-raised-active": "a6e625e124f574b10b5cb93f2a45d64ea2275a1b",
        "si.elevation.surface-overlay": "59a2d2c87ba4e7afe1cb270b31c1086848921fd6",
        "si.elevation.surface-overlay-hover": "66acbed30b7ce7d4e678a6bcf202ccbfd37077a0",
        "si.elevation.surface-overlay-active": "41bab88009f2fbc6473f0a2d6c2a8b793acaaf5b",
        "si.accordion.card-header.height": "6ee66ba7f834f24e320bd2a3c063959268e72960",
        "si.avatar.size": "d5bcf9856b51333354f4c0e8f97a20fa463f55cc",
        "si.button.primary.height-small": "6780710cad4dcd7e1e777e9ce218f9f235329a14",
        "si.button.primary.height-medium": "1ae1f091d68738c70904d45946b4345bd7a2d174",
        "si.button.primary.icon-size": "cb0acf14674199863022d825d7bdaa6ef26862c3",
        "si.button.secondary.height-small": "0bc03aeccba6d05b65f000843733708602721116",
        "si.button.secondary.height-medium": "d381ee42589205424ceb7f4497e9abf29ddcebff",
        "si.button.secondary.icon-size": "b9f84eff534017ae393c38275460d68ae12c901f",
        "si.button.tertiary.height-small": "41e9ec1d2514ffff90bf5298adbfe225ed18f2be",
        "si.button.tertiary.height-medium": "48d16ca8d4aa17b0bd5314168587706354d8e9c0",
        "si.button.tertiary.icon-size": "d189bf9589b0016e26da4e0f913aff7121ecc17e",
        "si.toggle-button.height-medium": "0fb51aab74fd3d50062df63f4e2950c4b6afd697",
        "si.validation.icon-size": "cfb7d995821ba52485709406096359e1921b81c6",
        "si.date-picker.card.min-width": "7dd84e629b80cd8edb9370cb86a78030353fafce",
        "si.date-picker.elements.height": "c71621fc99d280ca3bc254cac8e6f38185f00943",
        "si.date-picker.date-input-field.month-day.width": "731a9fe510a2790453c88640519eea427efa3cc9",
        "si.date-picker.date-input-field.year.width": "df39c0b2cb10fd98c602c075e9688a1a341935eb",
        "si.date-picker.today.width": "c3af1787e0af50f0548d4f4b7faebee706ec9b3b",
        "si.date-picker.today.height": "ceae38b464d61f290b25c2006d615b6e1e0b7e61",
        "si.date-picker.day.width": "8b140df99466c85e448ad198d8bd2371773d189a",
        "si.input-field.height": "df14f218b280eb9431b6a4f79b54fc2276330291",
        "si.dropdown.list-item.height": "db630356e97d3381ba0f420c04833c0660413a77",
        "si.dropdown.max-height": "a5f7d2497d62657bd539fcc5ced1aebcbdd1f4e7",
        "si.label.help.icon.size": "096d938929c71158049a98bca29535bc1f2030ab",
        "si.icon-button.primary.size-small": "a4e0c9ac7653127d52f22741653ebc9ff4de122d",
        "si.icon-button.primary.size-medium": "fb6eb602e160a1811e97f2e2a98af842287e4c6e",
        "si.icon-button.primary.icon-size-small": "5981714ef4c8db7f2e98cf72004dda1796832b5d",
        "si.icon-button.primary.icon-size-medium": "e127d07e693a3d4095e21b0cbc6b9c541edf3ee8",
        "si.icon-button.secondary.size-small": "b87ae81f4c9f1b8a61cf18bcae4747f24e6eddf1",
        "si.icon-button.secondary.size-medium": "48cce7b9b845ada85b985086c0cb1b6877d823eb",
        "si.icon-button.secondary.icon-size-small": "5b9c45a769c6a6bd12ccc56ca7b591fb92addb44",
        "si.icon-button.secondary.icon-size-medium": "cca1ab5e04fed61707aa9642579bc036e2f878be",
        "si.icon-button.tertiary.size-small": "e11aa692283f46d22c5a825d7526bfd8148e10bb",
        "si.icon-button.tertiary.size-medium": "d499e079ea62a228d9cee3757f5e6cb7411e6ef7",
        "si.icon-button.tertiary.icon-size-small": "9411c7d6ab24a5fa908fdfae5a7e6d3cf0a72dd2",
        "si.icon-button.tertiary.icon-size-medium": "05b9c953c78d6cfcb56f928269059168992ec2b4",
        "si.icon-button.neutral.size-small": "38c365692b87d5757b557ab3713927fdff35e93c",
        "si.icon-button.neutral.size-medium": "c4a059ce10877d8427fa35aaf60a2cb0bcbe09f1",
        "si.icon-button.neutral.icon-size-small": "ec389b87402edf8d56cef378fa25b9886b53a32f",
        "si.icon-button.neutral.icon-size-medium": "a2a5c131588dcb69a51ee596cb4abbc6becbeef7",
        "si.icon-button.inverse.size-small": "8e7c8e72d1ad68b181b194118967ca79027cb941",
        "si.icon-button.inverse.size-medium": "a0f13f23e2681c6f7cb53d32c02919a1f158faaf",
        "si.icon-button.inverse.icon-size-small": "439b91f2d32e106ba27670414553d998466b1c15",
        "si.icon-button.inverse.icon-size-medium": "cbcd7cbebf1dd1845b1335bd9467f67920406237",
        "si.header.height": "06a7a731e64f455b70a885ee91bc54c28f617229",
        "si.header.logo-height": "8d36915a598367af003bd9502484c34b886c71e2",
        "si.header.avatar-size": "ae6c2e140cf4ce151b70e5a18e6c6cf2dddf5329",
        "si.header.consumer.height-phone": "bca95f764cd06d3838c21e0825964b2371bbbeb1",
        "si.header.subheader-height": "d10fe5d551191f2c7974f36e67d24c9fa878fb8a",
        "si.icon.size-small": "fcb5aac6b374fd5860ab323ec753fbd44a86e9a7",
        "si.icon.size-medium": "6ccbbcfcf71e8801d6860c30383d964cd114ebb7",
        "si.icon.size-large": "fa5162301a8c9981eb9f70538a739d5d2bd559ef",
        "si.info-label.height": "177c631dd7b66dd41ae02756eb333cf969fe5abf",
        "si.layout.page-content-area-max-width": "dd2bcec69cab08e84325a1909dc40c286e830470",
        "si.switch.handle.size": "d84866878af41d1a50848367ab45fd01d18ae3a0",
        "si.switch.width": "f0b595b154a925710c61c1e4de599a227c0f4cb5",
        "si.switch.height": "4ad27bef9acbbdcc88404cf29faca50614305d1e",
        "si.tab.height": "46cd21a16258fcb8269553f1ec67c435d5b3f641",
        "si.top-navigation.item-select-indicator-thickness": "776365322ec1ea827201e6e11e017f3646b8297f",
        "si.slider.handle.width": "5f242bd60e5dd907ad143eec798c1af2ff4e4a93",
        "si.slider.handle.height": "98f107ac6cfa4cfa4fe2a0420a21a90f6567a683",
        "si.slider.filled-track.thickness": "bee784d4be4da67fc52c89d7b7ce6b526d0289da",
        "si.slider.track.thickness": "811d3de5adbdcbf5677dfd7af78ba04eca8867e4",
        "si.stepper.input-field.height": "6963a93259501dfda90f4809a0973c284de6353c",
        "si.stepper.input-field.min-width": "31baabd3668d090a59fcddeb2ee63a9119ca2ab0",
        "si.accordion.card-header-gap": "4d896fed593a7972ab4e696c76cffd3f76d4f5f4",
        "si.checkbox.group.padding": "94eb13ffa44408220565d1cbb29720e06e3af7ff",
        "si.checkbox.group.gap-vertical": "5ce1689bc857bc6bd542395e35a92b04226c3c42",
        "si.checkbox.group.gap-horizontal": "4731e6e31fd38b3509965ddbfd9777570dc69ee7",
        "si.radio.group.padding": "06d9ce6712cad73e4a3a71efbab1e296df6ed747",
        "si.radio.group.gap-vertical": "980b3a2ad5cbf942936dca9f078539b97bb4ba06",
        "si.radio.group.gap-horizontal": "975abf44409ed948a02fc1eff6c7be74268e77da",
        "si.button.primary.gap": "bc293984d4b8ac975030089a24dab0209ae10a43",
        "si.button.secondary.gap": "9e70809325ac8cb83d2e98c35c41ccdc863a603a",
        "si.button.tertiary.gap": "0e47b19be88e0433a1d76506c6b0bfb4d2e2a0cc",
        "si.toggle-button.group.gap": "1e4a3fef06359d92225f2900691a6ba6875bbfe9",
        "si.validation.gap.inner": "a61be1e120c73597a3d0b90bf0b7b981f98ba88e",
        "si.validation.gap.bottom": "f2eaa08a495c35c9aa95ccc6bbae6601e05ee999",
        "si.date-picker.calendar.content.gap": "d91e9db8083b11b0fb000d838a79ef75c7b25a19",
        "si.date-picker.calendar.content.padding": "ce6ad9c01d17d932781ad17cfa22616c0f2d1651",
        "si.input-field.gap": "0726c1f48f12df554f164fce6ebeed644951fb76",
        "si.input-field.multiselect-gap": "01cae12f3bc3991cce6682992ade550ad98366e8",
        "si.dropdown.list-item.gap": "054758f8ee34101ab4a40328970b141c98048d1c",
        "si.dropdown.gap": "8de9130f2dcf228c2a3f4d6527bb2ca385ba4ae4",
        "si.label.gap.inner": "cef361f7ea28f194a5dbb1e5b57a3c2df362c411",
        "si.label.gap.top": "1348b0306f3bc2bd2a0841a14c12ef33f5927e9f",
        "si.label.gap.side": "a570c95b661746ce4b81be231c90045b9948d4a7",
        "si.label.gap.side-large": "7b61df9fe07957d03de7e2b9e8ede6b55c109d62",
        "si.switch.padding": "d432def666c9958d0cdd6432432c76f759c01064",
        "si.slider.gap": "ac8797f0a179492ed489d404e0f67a6d41ef0b41",
        "si.stepper.gap": "2239fb71d82a91f995d7398303eb47c147415594",
        "si.date-picker.calendar.day-content.gap": "45ac33c5071aa97b230d0df47b8c5b212ddc95b2",
        "si.date-picker.calendar.day-content.padding": "e1ae69a257ce7b40cb0f9f63835734a3f712013a",
        "si.date-picker.calendar.day-row.gap": "a828063657f320c588cb5cc09a150909012e4f0c",
        "si.date-picker.calendar.month-year-content.gap": "abd57ccb511a6d6153559c3d951e57c6a5e8b1a0",
        "si.input-field.compound-field.gap": "a7b44542db2a365f78d34f64bc04896f82518e57",
        "si.accordion.card-header-title-color-text": "f2486720e16977484c915b5f7d4d1ca1357fc8f7",
        "si.accordion.card-header-title-color-text-hover": "7f7630108e5173089648a253234d099fabaeaaa4",
        "si.accordion.card-header-title-color-text-active": "85be67bcf646f4f6a156e1dd8254b8a91cdc37c8",
        "si.accordion.card-header-color-action-icon": "3db180fdc7fa3d63a1f5d2160b6dd2ad47286610",
        "si.accordion.card-header-color-action-icon-hover": "d947b694b8d84005199c6e8ddeedf63e7957556b",
        "si.accordion.card-header-color-action-icon-active": "50fa548fa2ce17646507f60149129ffdbb0a27b0",
        "si.accordion.card-header-color-background": "8e316baeba83452d39b91506bcd1c4b3320c2536",
        "si.accordion.card-header-color-background-hover": "50a4c5b1c25337249fac70a304119f0d7fc11288",
        "si.accordion.card-header-color-background-active": "c23f2975e6d879fdb60ef6339a85b09537e57e35",
        "si.accordion.card-content-color-background": "ffc99c8f6daf126fccc494a40ce6aeae3951da8c",
        "si.accordion.item-divider-color-border": "b19cdb207bbbd2e6d4be383596eb4c936a56b9c7",
        "si.checkbox.selector.color.background": "7f100a1903a1e8cc90c6f4c78d1a4efa906cbc13",
        "si.checkbox.selector.color.background-hover": "c2b0fe7546bbc1afacf92f9629420b6fae427eff",
        "si.checkbox.selector.color.background-active": "142ea52a333ca0d8aa8fa2de5de669fcb47854bf",
        "si.checkbox.selector.color.border": "b3f45a7ba06202ce593d8c09b9509f708b12ccf7",
        "si.checkbox.selector.color.border-hover": "60def977236a136eed07b2ce8fd43ae599963203",
        "si.checkbox.selector.color.border-active": "6d1ad9d6a9c9d4408e48a7b7b0719dae5e381b11",
        "si.checkbox.selector.color.border-error": "98a95ea5a69c3540cdb3dbdaf52051b3eb774ad3",
        "si.checkbox.selector.color.background-selected": "01cf5a402b68c610ccd718ebfb81ffee5e4c580c",
        "si.checkbox.selector.color.background-selected-hover": "c796e6781d7104546a478a311cecc634085acc2b",
        "si.checkbox.selector.color.background-selected-active": "7e48d2c5a236e8cc6c6062c4e3ba87ea1c990865",
        "si.checkbox.selector.color.background-selected-error": "b4bd1b17d52d0b4f2370f924dccfa8c86bb6ada6",
        "si.checkbox.selector.color.border-selected": "7ce926a4d07ee29585954b407ac074f15806793c",
        "si.checkbox.selector.color.border-selected-hover": "7485304495c69e1b11c57a6d273484d715e037a7",
        "si.checkbox.selector.color.border-selected-active": "9ba33b0e1345d91d386cf35f54c9ec7083001500",
        "si.checkbox.selector.icon.color.icon-selected": "ce7a830aefb1b35651cfa8ac29d54a9c85ad1399",
        "si.checkbox.selector.icon.color.icon-selected-hover": "9793d4c2ecb0bde048f93faab5053a86834b9cf5",
        "si.checkbox.selector.icon.color.icon-selected-active": "1c07e28a6aa14807eefaf84333fd09debebfd9f2",
        "si.radio.selector.color-background": "251feafd6d329fa65bd3cf1244a86a78055d55e8",
        "si.radio.selector.color-background-hover": "1880d2fde8f804e1fcf75b507a2bb886f0763689",
        "si.radio.selector.color-background-active": "a7337aaf780d1247590fb55ce254be0ea9362723",
        "si.radio.selector.color-border-error": "a2c479db101ce337cdedb689ab29ac3a656454a4",
        "si.radio.selector.color-background-selected": "0a1a9caf66bd7a5f9c8696f26e023be117ae9d9a",
        "si.radio.selector.color-background-selected-hover": "f6b06f813591d64c094a6002fa32a4c06b6bcb33",
        "si.radio.selector.color-background-selected-active": "4c65a8beacfba14bb7e0d7e85af1800b2f862a65",
        "si.radio.selector.inner.color-background-selected": "2710c8771b172e19c0c1f3eb3d5053f0b22ae043",
        "si.radio.selector.inner.color-background-selected-hover": "ad3897df8cbf1e064a359fc4f6e24c9dcadb17d7",
        "si.radio.selector.inner.color-background-selected-active": "63dcf1d15f8f31320e6235fe6d46726000836dce",
        "si.radio.selector.color-background-selected-error": "fe65e4321adea3107fa2cd75ef717e0fadec0625",
        "si.radio.selector.color-border": "173a9304327e5ae08df573968874d96ba0208b19",
        "si.radio.selector.color-border-hover": "49ee0c385e5539df0ad2ef7ee9ee8e76699a3bca",
        "si.radio.selector.color-border-active": "6c1f131a012dfde62d3a4a341c86cbdf68181e82",
        "si.radio.selector.color-border-selected": "a56580ff28acfc6c032b271f9af126e855895356",
        "si.radio.selector.color-border-selected-hover": "d43e25866236d739a42c3575960fc1bae516ec9b",
        "si.radio.selector.color-border-selected-active": "1f68333ab92b3af9eb982bfbf83f6f72c7d80dc8",
        "si.avatar.color-text-inverse": "4d2e5391c0038c8d252bca31ec88eb8a8d3b52e9",
        "si.avatar.color-background": "55db6cbe8cae2d7755d874aba7bd16a4b8a9edff",
        "si.avatar.color-background-hover": "a46148630171393df9c38fc3d7a68c837093697d",
        "si.avatar.color-background-active": "ff6b11e83e930f267a2370976233655dfe2ee2f6",
        "si.avatar.color-border": "3105a229a509458e97ace5bb706a891a8d84f8ff",
        "si.avatar.header-color-border-focus": "0b1c9dd0f80242f773c652beb7780923b3983877",
        "si.breadcrumb.divider-color-text": "84885abe07ddda1b52ee5d7b466a94fb4df9bff5",
        "si.button.primary.color-text": "561ce67d2cd6788f390bcec87b9c6b4c9837a0b6",
        "si.button.primary.color-text-hover": "2bb48a8928d4a8652c251ec78ef6e7b3278e6d2a",
        "si.button.primary.color-text-active": "9ee7401b112c63a910b1615899af2705dc9a1d00",
        "si.button.primary.color-icon": "dc99830a2b0437d1073a1f561d01e77c41e1a0f3",
        "si.button.primary.color-icon-hover": "a240722ad88f3961044f8d94c55c7bfc0423170d",
        "si.button.primary.color-icon-active": "f1694c9a446f76f21529e10480f2bf8d058e403f",
        "si.button.primary.color-background": "d9dd186de10a39bc72da8c3396d96e6c2ff4039a",
        "si.button.primary.color-background-hover": "795e3298b614b6e654ff058a114709528ed2e096",
        "si.button.primary.color-background-active": "aa3ecec48ca944f045a0dbb2ae693bc609dba931",
        "si.button.primary.color-border": "e43c44554dff1d36d3ceb72005ba186de095d706",
        "si.button.primary.color-border-hover": "31dd05a0a4595c83427a6ae1a793906270a68554",
        "si.button.primary.color-border-active": "3b85ff7c74e47d346d61340c0068c07dfb13efbd",
        "si.button.secondary.color-text": "48e85394f169097a453e1f8e167bfd20dc5d2a40",
        "si.button.secondary.color-text-hover": "e571d0c91eddcd31ccfab9ee905b1c99949eb0af",
        "si.button.secondary.color-text-active": "a8cc898f97b7851d532a910245fb3a31902fde68",
        "si.button.secondary.color-icon": "4df038eb470ef3d3d13db700f60a96324aff24f2",
        "si.button.secondary.color-icon-hover": "a22b0412726d6727babbb8e979326faa549c9b32",
        "si.button.secondary.color-icon-active": "4d810730bcde9d6b20c1265ba1f4af8b6eee90d6",
        "si.button.secondary.color-background": "70d76014c70f160e83241ce61f345af9d4f76de1",
        "si.button.secondary.color-background-hover": "72363b06653f831ecc2bf82d7aec8164adbe1103",
        "si.button.secondary.color-background-active": "9e695b38989a4096ab16d12916ccf7bc23b87f91",
        "si.button.secondary.color-border": "1258f01c25c631347c55aa923fda00eca4b79c20",
        "si.button.secondary.color-border-hover": "14129a866381fdea85ee4d075c2038ce5dcab57e",
        "si.button.secondary.color-border-active": "15088f342e0511249e56bd79543f2aae1683dbd4",
        "si.button.tertiary.color-text": "1d4e1a8884e68e20a48c3161bf0bf15513df4238",
        "si.button.tertiary.color-text-hover": "cd18bb86c45801318e4962395800871d2be61807",
        "si.button.tertiary.color-text-active": "0bf99c91363c1fe0af6608b78bf4804be0937341",
        "si.button.tertiary.color-icon": "ec5e97a2f8841a7aca4a1e2edad45397c3b1f8f0",
        "si.button.tertiary.color-icon-hover": "af95ca4e543a3703d0523dbf1097e90f620c235b",
        "si.button.tertiary.color-icon-active": "f8c31cca8d5a292e7682b0c43ed4165e32b47745",
        "si.button.tertiary.color-background": "96ba00ef7cbe469d60dbd7500a6db2e583a3e5d9",
        "si.button.tertiary.color-background-hover": "cc5ec857176f6149c1ba40a953e63915f1a01690",
        "si.button.tertiary.color-background-active": "0de7d56f6da8633960d2da0d98caf2e5d087da5f",
        "si.button.tertiary.color-border": "869b115b5ef03809a6b0a0d889ac19ab2dafdca9",
        "si.button.tertiary.color-border-hover": "7c57df9a7b58c871d52dbe11872704df345d5a82",
        "si.button.tertiary.color-border-active": "871ba9092185efa0ad7663e7ae4266dac81573ef",
        "si.date-picker.calendar.card.color-background": "a64eee661c0a607d5251176bab523e703d0c46a3",
        "si.date-picker.calendar.day-month-year.color-background": "3514f93b43bdcac1d4de5144adffb15c0d88da92",
        "si.date-picker.calendar.day-month-year.color-background-hover": "d666b06daaf175a30eed36c70446e7840eee07b9",
        "si.date-picker.calendar.day-month-year.color-background-selected": "e65c1514322ffa2e2e6033e153bdb247c8a11ed2",
        "si.date-picker.calendar.day-month-year.color-text": "a9e8ab407c25555904b8bf1e577dc3fefa1f3af9",
        "si.date-picker.calendar.day-month-year.color-text-selected": "5a11476df9ea25e5ba26012f9c15ee5928f4c983",
        "si.date-picker.calendar.day-month-year.range.color-background-selected": "d92d7d0077e74465446bb12602c4fe35a9c5d04c",
        "si.date-picker.calendar.day-month-year.previous-next-month.color-text": "0a56ba0105fc011aa39088fd4a7878b4016f857a",
        "si.date-picker.calendar.today.color-border": "6e4641c0c272c619150852e20ec997bddbcaf61b",
        "si.date-picker.calendar.today.color-background": "51d515f424be7e9f244369e3fb568c6128eb7aff",
        "si.date-picker.calendar.today.color-border-selected": "05e90f9096219cba6998207e15b052b93ef6ddbb",
        "si.date-picker.calendar.today.color-background-selected": "55d18e60f7862beabce53c2348fa95e7f1e99751",
        "si.date-picker.calendar.today.previous-next-month.color-border": "c49a105f7fbf7443699fe75241bcbfacbb06e832",
        "si.input-field.text.color-text": "5e146225158ef4adc238a5e232bf5047d7b39953",
        "si.input-field.text.color-text-read-only": "b01c12965df32f0c656bfd29de8fc6e79102470e",
        "si.input-field.color-background": "b21cd5c07a354751238a0397798000d3e0491c4e",
        "si.input-field.color-background-hover": "0fb23416cc4270921ea4c44de5592c63559c8248",
        "si.input-field.color-background-active": "586b3c4b351328ec8e8d34b1120788fb659078c6",
        "si.input-field.color-background-read-only": "879839d3376cf8924edc34a04478e2d4c458c894",
        "si.input-field.color-border": "d151ab4cbc89dd599daac001a413d1f273dc4c33",
        "si.input-field.color-border-read-only": "e8a377ab701fdbfcee9d5b46b43050158999338d",
        "si.input-field.placeholder.color-text": "f08a9983ee928fe53dbea6cb01d460dd8325f248",
        "si.input-field.currency.color-text": "c162806332cf966ae4c7f45df2da5c5d39b6f9f3",
        "si.dropdown.list-item.placeholder.color-text": "144e470474a83e5440e075d6dc8298359f5acad4",
        "si.dropdown.list-item.color-text": "79251364a846f1d5677d7a11faa4a69bdcacfefe",
        "si.dropdown.list-item.color-background": "86d5b7a78b87af217b8e1700ce099b12970969f9",
        "si.dropdown.list-item.color-background-hover": "6771bdefebae0dccf4b4d63b49cf50d25bf6d7f1",
        "si.dropdown.list-item.color-background-active": "3943440f031527b0bd2c479b649b8015b64d7265",
        "si.dropdown.list-item.color-text-selected": "76c25da8126a82af5b1219ce8867be8d9a4e7638",
        "si.dropdown.list-item.color-background-selected": "dd186a4e7e8fe0aea4f4a20957cf2bfef00c89c3",
        "si.dropdown.list-item.color-background-selected-hover": "475a504df71686b77191ef0affdf9fe9de893dbb",
        "si.dropdown.list-item.color-background-selected-active": "872313aa72760d24a1a91bee9b09b8cfdeedeaff",
        "si.dropdown.card.color.background": "a1a6e65acd6fa240fbbd34097eafc1d329becbef",
        "si.label.color-text": "055d2496e17212aba59ce00c678d5c0cf5c0a5a1",
        "si.label.color-text-secondary": "b9fa6059c0b52ca4cd1954c24121e9080de56b60",
        "si.label.help.color-icon": "6defa7eea73feda2f45e115ba5b4549608f12bde",
        "si.label.required.color-text": "097bbdb41da7a1ba27cf151bd213025c7bff32ba",
        "si.icon-button.primary.color-icon": "8d45c705bad441279aa59c3121fabeaae54cdd2b",
        "si.icon-button.primary.color-icon-hover": "584a2c25e8be4cd5b3890c3df5005d7fb84d7c14",
        "si.icon-button.primary.color-icon-active": "b5a5ed534eb4b87754d2c02f74c94e3d0f3cbbcf",
        "si.icon-button.primary.color-background": "64d9342e9227579aa141add9da02f4059f992faf",
        "si.icon-button.primary.color-background-hover": "59ba48c6ad9cad9902448fe2048bad0a51ae12f4",
        "si.icon-button.primary.color-background-active": "cd207d25034d7379eb2088bb29772f672e8239ab",
        "si.icon-button.primary.color-border": "16fae75b8395bc12ee3293b45ff54d9027705df2",
        "si.icon-button.primary.color-border-hover": "1c82d0dc5bc0438509b14afb396101451675d014",
        "si.icon-button.primary.color-border-active": "802bb66c34d839db3986e67048953598eb84ae2e",
        "si.icon-button.secondary.color-icon": "d0348f282450c3a7d4190523d22746b47f45f0f3",
        "si.icon-button.secondary.color-icon-hover": "c4c17db1d1a7675bc80ae653496ff8d3a6f30daa",
        "si.icon-button.secondary.color-icon-active": "6e2707a8628122bc992020a2b98493844dfef459",
        "si.icon-button.secondary.color-background": "7d03c3e52b35a45a21ed54e402177047005eab01",
        "si.icon-button.secondary.color-background-hover": "d7da5b58c246b71fe796099b169fab4319548465",
        "si.icon-button.secondary.color-background-active": "6fb5fa51b9d3cab8da1054f7669b1a7ff9347642",
        "si.icon-button.secondary.color-border": "8cb64ad82a24a226637133a7f3abd4a3f5890f1f",
        "si.icon-button.secondary.color-border-hover": "f486d9237bdd38ff08127dc3696f04dea63da769",
        "si.icon-button.secondary.color-border-active": "38096ab57876557cf1f3c5cee5f322235a778af0",
        "si.icon-button.tertiary.color-icon": "65883b9fd425bfb8b84402d25b15a72f5446ed37",
        "si.icon-button.tertiary.color-icon-hover": "ce2a6e4ac7717d40a0278cd9c19dc7142a5faaa1",
        "si.icon-button.tertiary.color-icon-active": "a0cb8d5172e9d1d1c7c68198f2057fe42e10b781",
        "si.icon-button.tertiary.color-background": "833c2be77132ed0d5a7faca485c30d829f456390",
        "si.icon-button.tertiary.color-background-hover": "68049f3f4f683a8bce31d68a9c8b2f88fdeb344e",
        "si.icon-button.tertiary.color-background-active": "b66904c6618906a7c886f6b5efbb4f859e3aa9d3",
        "si.icon-button.tertiary.color-border": "5dea52fd484ac28d794e307c2b2eafff95048105",
        "si.icon-button.tertiary.color-border-hover": "28fbd71bc27c401131952a62d2d8e153ceafdee7",
        "si.icon-button.tertiary.color-border-active": "78b983b961ff80b770b3cc5622a751a8113589e9",
        "si.icon-button.neutral.color-icon": "1754e0387c31aa3b4f730c0a77600848afc85431",
        "si.icon-button.neutral.color-icon-hover": "a2356aacea58b6aaa1c780c82b9846443841f5d3",
        "si.icon-button.neutral.color-icon-active": "fd831765a2fb5ac5b2796fc368700412013cbe53",
        "si.icon-button.neutral.color-background": "ecbd7298ed0a43bf91c797f749792aa240fa43e7",
        "si.icon-button.neutral.color-background-hover": "adc30a7dbedd170985e698a0b9907f1169b1547b",
        "si.icon-button.neutral.color-background-active": "042c8152f9cac9874c6749bdab6f51ab18dea6ad",
        "si.icon-button.neutral.color-border": "88f9eea3e7f6b07e518a726df2e3a58d9f460d90",
        "si.icon-button.neutral.color-border-hover": "43657f334ec875bda6517767dd66f2c489c0ab02",
        "si.icon-button.neutral.color-border-active": "6ebace9306f8a15c56f741514c31dbdce889a1d6",
        "si.icon-button.inverse.color-icon": "f66304c0d098b5597188e7b77cd2cf9a7af92db2",
        "si.icon-button.inverse.color-icon-hover": "c6ce9612e85d44b5f3fd8c4fc47b32f74c4a1c3b",
        "si.icon-button.inverse.color-icon-active": "7565af0c37c1b75110f64a6ae5a0ecc5b5e2bb47",
        "si.icon-button.inverse.color-background": "874837055ceea4cf9924503086e109bc90e14e37",
        "si.icon-button.inverse.color-background-hover": "618705772d8d9b40d72f242b7caf0cd610f4280e",
        "si.icon-button.inverse.color-background-active": "400721dc3475f7de0da33cd019d116ea3e5fc185",
        "si.icon-button.inverse.color-border": "603f00ad15cf3ad9cf67fd61911f0148dd6a78e9",
        "si.icon-button.inverse.color-border-hover": "a15854090c791501d37298e4a3b391f9ddbc9466",
        "si.icon-button.inverse.color-border-active": "4b138b40fe8e1c31bd336f7ee4ad644bbbdf468c",
        "si.card.color-background": "b42b9b5480ad58ee78d7df2830da8c77a5122baf",
        "si.card.color-text": "3da60a92d8cc8083feb2464867fa355bc739419e",
        "si.footer.color-background": "c8c1b209d2cfad7ff13b4df4a652a814edf07141",
        "si.footer.color-text": "c1a9e412c64fcd19bb16211949d1f164be09ee76",
        "si.header.consumer.color-border-bottom": "b786c7fb45979f1f34da69a3a5f47ae8be2c1f76",
        "si.header.color-background": "81e3556435493304ce4c2412fa6c911d1b77b7cc",
        "si.header.color-text": "dc2c34ba1cbceaa7b6baad474a70f2c57628f250",
        "si.header.search-color-background": "7ec5dde83885311e91356f9abf67e05e3cc24c66",
        "si.header.search-color-text": "26ed597ef30300091c109936f4c0cdf7be286a40",
        "si.header.logo-color-background": "b5c77c95718bd92103fd46b58c408f2e97b45844",
        "si.header.title-color-text": "bbbeba8a84263047e2a4e0592eacc6d8c4799d86",
        "si.header.icon-color-background": "452a2bc70cd960b851497d4f280b17ef57f354e0",
        "si.header.icon-color-icon": "e577ed23e1a77db490cd18a5147ab36645c6139f",
        "si.header.icon-color-icon-inverse": "977cf3ab22dcee38fed98f550c8c56e52ef7cdbe",
        "si.header.label-color-text": "b0e720d7ccdf87f6856f5032dbfaf8bec9407725",
        "si.progress-bar.color-background-hover": "116a87874e0e5b539f9f86a04f411db23828a8bc",
        "si.progress-bar.color-background-complete-hover": "e7fb6caf124bccfb7ea1a4bc2f8c0f5aaf101671",
        "si.selector.color-text": "ee69e327ba04931ca4d14e59cda33b1fed280989",
        "si.selector.color-text-selected": "d3ef42462d91b21822f853d6a583fe90ab9d4cec",
        "si.selector.color-background": "de69bc0150c66ffa208a101e0730674ae9e93ab1",
        "si.selector.color-background-hover": "da4eb306ccc3481c34f0405395d26f45478f3282",
        "si.selector.color-background-active": "e6bf77a4283be60bc2be5e706f871292eaf22e18",
        "si.selector.color-icon-selected": "3c2a05930bd9a8cd6b0eaf1cc3e1155e271b18ef",
        "si.selector.color-background-selected": "bcfcf4cdaf4660c08ed52a5398f59d5065c2a90f",
        "si.selector.color-background-selected-hover": "b1f450bb7e455f681ed211d008030777560a6e53",
        "si.selector.color-background-selected-active": "ad0bdcc684a62183c1b722f029274c568c0aabed",
        "si.selector.color-border-selected": "99cdc850ea2be5c20dfcfc4ba7782a93d0db5be3",
        "si.selector.color-border-focus": "1a1d4125c9b3fd9a0ee4c573113da55d883c4787",
        "si.side-navigation.color-background": "8653289807e04d0e04b67b65edc6db8b3e77d90c",
        "si.side-navigation.color-text": "300c7706d8163637c340553fbe1dfd0407254331",
        "si.side-navigation.color-text-hover": "eae557949d68bab65f8e09d5b6a1c12988d6f08b",
        "si.side-navigation.color-text-active": "4b7606ce962d887e1df6052cf9a99b83a86c0cd7",
        "si.side-navigation.color-background-active": "00424771f9f48d9eca0c459722b08a5cf2b00a7e",
        "si.side-navigation.color-border": "0325d5c384111baf2dbbc9d06ffead5abed36058",
        "si.side-navigation.item.color-border-selected": "673ddd07bbcc4bc4506f2a0a3e20417a532f43c3",
        "si.side-navigation.item.color-text": "f0b34032c5b3fa478b2dc65fb0301228a6b1a0e3",
        "si.side-navigation.item.color-text-hover": "56afafddc9c40a34d360e51cd196eeb540b5e0f7",
        "si.side-navigation.item.color-text-active": "a2f05e5e1194962e89ce13d45023142ac4055cf5",
        "si.side-navigation.item.item-color-background": "cce859dd92e6791d28088f1ba876a41ae42d8d40",
        "si.side-navigation.item.item-color-background-hover": "20374f1d38d4e88f63354fab64fa327dbae0fea3",
        "si.side-navigation.item.item-color-background-active": "cb62d166b37606e00e28b6c8eb83604f563a0dac",
        "si.side-navigation.item.item-select-indicator-color-background": "57d3f600e57bf78050dd1a8553e8044f4fe09daa",
        "si.side-navigation.left-icon-color-icon": "05a31e09900a207ede4a9248c182b13cf30d9297",
        "si.side-navigation.left-icon-color-icon-active": "ca08ad076eb67753ae0ab50d3f10619e14b9510e",
        "si.side-navigation.right-icon-color-icon": "1499fbacb9954fcfac0f580b173197493be28646",
        "si.side-navigation.right-icon-color-icon-active": "bff72fcda3175cd31f79bb5f25d61c0233738186",
        "si.side-navigation.accordion-color-background": "2666e6b90736689faa81c8f5c12ceca8dd679ee4",
        "si.side-navigation.sub-item-color-background": "44dc1bac57ea7fdd9d37b17aed5e7217f3c5e673",
        "si.side-navigation.sub-item-color-background-hover": "a750120affefe159b79bc866b4d1079e60d0251c",
        "si.tab.bar-color-background": "8b5cafa8a8edb01c589153ba5e28b2c5beab6145",
        "si.tab.bar-heading-color-text": "7d979fd9a5b459eb1bad93a4a24b84a7fb13d919",
        "si.tab.bar-heading-color-text-hover": "35daf8083366b4cfaf194a763abdb30c23aa0a18",
        "si.tab.bar-heading-color-background-hover": "3a7cf3ae624cbba1b2c055b2a0d8eba93a103ab8",
        "si.tab.bar-heading-color-border-focus": "442e9c85a41e0d33dad12808e401e3d99c78b929",
        "si.tab.bar-heading-color-border-active": "5c9ced058961ee87b93b5da787c8c26744338df6",
        "si.table.title-bar-color-text": "0d157144448aa842e36e0c2cbf6ef72eeeba4de5",
        "si.table.color-text": "91827affe2298526b2e3c8e8f7da82b8438db3e4",
        "si.table.cell-color-background": "19a795014663aa0ab9ae4462f946d71dfc7364d7",
        "si.table.row-color-background-hover": "f08b6529a50287d3567cfcb7e550278b77f36ece",
        "si.table.no-data-color-text": "938423356efe4b484fefd5a0f04622a4bf702a4b",
        "si.table.card-odd-row-color-background": "a3f49b92dee715fd4b2d80691efdd6d8c293b7c1",
        "si.table.card-even-row-color-background": "7e60b296eddb06ef1f1e6b18f8402666c363ed98",
        "si.top-navigation.color-background": "f81dd72384661d772d1081c25fa8292e70594fea",
        "si.top-navigation.item.color-text": "be144b9bd09f0ec04771e7123b34704097e32181",
        "si.top-navigation.item.color-text-active": "5e669035172bf5ddbc2d78f54a07c2efcb8f4027",
        "si.top-navigation.item.select-indicator-color-background": "985b191a00d5db4109b6238e144ca0c52c6e359f",
        "si.top-navigation.item.color-background": "d2f78fd81890dccef558fac567bcdf8c4b79dca0",
        "si.top-navigation.item.color-background-hover": "44c0c664ca1bff43eba8d234c620343543f15dc0",
        "si.top-navigation.item.color-background-active": "e518c9b87a012caf5aae0e167e12cace9066e752",
        "si.toggle.field.color-text": "f77b77f22addebe6f515143b360694529e8dd79c",
        "si.badge.notification.color.text": "d251e61517969dfbce471e5c6a04e2dfcda6ef07",
        "si.badge.notification.color.background": "dd019e1eb6330cc118aafb2f9d5d7fe09b4008be",
        "si.badge.notification.color.border": "859b3126377f4dddb23cf77b4af3eb4324187dc4",
        "si.badge.color.text": "03f79a2299267366e9a87c3ee04e0bd8ce6e4812",
        "si.badge.color.background": "b202c0a22bcdeef8deae2f98d9d7be4489ed6100",
        "si.badge.inverse.color.background": "94aa6f06e079a3676b5ea30a0aa5c2040de549c6",
        "si.badge.inverse.color.text": "bbff6afdcd4dd6661e03b1fa23eb78f647b2f8f9",
        "si.toggle-button.color.background": "9226388acab100e1ba12430032dc18f5e1aede3e",
        "si.toggle-button.color.background-hover": "fc524a17b72990dcd748801e5f77d806efb66c62",
        "si.toggle-button.color.background-active": "1380b161a4488ff03384a9093527b315c97ada4f",
        "si.toggle-button.color.background-selected": "16f982becb6e4b370bb2e1793e169d6f76e05e0d",
        "si.toggle-button.color.border": "2c657f851d6d8566e8ac1a02e6b9e83b8d4b296e",
        "si.toggle-button.color.text": "016403c6aa93ff1708988749ac0339100a41098a",
        "si.toggle-button.color.text-selected": "4bd57b1c3e69ddbcdd3e93db7cf56b4deab8f3fb",
        "si.switch.handle.color.background": "d13f9c9cfcec7ab41c2cf8f1eba57caff74f8bba",
        "si.switch.track.color.background-on": "0987debf74d14281d87cde00e4e9ca1e9096eb1b",
        "si.switch.track.color.background-on-hover": "3f417dcaab88b868d8f5ae3be31a150e1c96ddf9",
        "si.switch.track.color.background-on-active": "c5ccda38274e58e5c537045e013387a379e0c1eb",
        "si.slider.handle.color.background-hover": "e175c3c3ea2face63fd72064966c1e94b90e58cd",
        "si.slider.handle.color.background-active": "d45bd824073accfc907aa5882ec2b1151aff567e",
        "si.slider.handle.color.border": "b0b5874bec9e511fe5729dfe77c67887f14f62fc",
        "si.slider.handle.color.border-hover": "bcdb0d5464a1b69018fb6005fbce742f1a7fa893",
        "si.slider.handle.color.border-active": "e0b2a9f53ddd7e3242c5a72b953866430871b651",
        "si.slider.handle.color.background": "6d725479cc915beebe2822e47e62fc639f2cd3db",
        "si.slider.filled-track.color.background": "762a9bf668ebe65f497abdb669fb6aa239805a2b",
        "si.slider.track.color.background": "e619506e3034e92d24dafbf092a87969472ac080",
        "si.switch.track.color.background-off": "dd44fbdb7b8741b8ac0aaa50fedbee0ccfb45970",
        "si.switch.track.color.background-off-hover": "3fa7e34a72d610e7d73c69af1e6a119324ab89a8",
        "si.switch.track.color.background-off-active": "cb1310188f5123b87e3d4af205d9990b1f284550",
        "si.progress-bar.label.color.text": "ea31e5761fbb795b35fa1446e55aedec6a762499",
        "si.progress-bar.status.color.text": "d3916c87443a5a6f9339ca1db5eea8470a62f8b4",
        "si.progress-bar.status.color.background": "47f08e6f27cdae945b2854f640869065d2852125",
        "si.progress-bar.track.color.background": "49225bfe89a0f77e821b42f163dbf0deea9a4526",
        "si.progress-step.node.completed.color.icon": "7296dfdbf59ee7cdce67c01b194b48a6ca798a8b",
        "si.progress-step.node.next.color.text": "d76516c560d38a794d3e0d0ad78bcf58e4206ac0",
        "si.checkbox.selector.border-radius": "985c0fd144a3b35bd684dd2086047f09b1181f40",
        "si.radio.selector.border-radius": "20df116f9eea120f6d7a609b296e8a1c19edc90a",
        "si.button.primary.border-radius": "f523ea71acf71a3be4870feb77de477bae6785d8",
        "si.button.secondary.border-radius": "aeb26ddbdd6ebd21aac079bb4aeada0d5da28f79",
        "si.button.tertiary.border-radius": "2faea1428c4209205d93e520b54f6026a3bb1a5b",
        "si.toggle-button.center.border-radius": "4dc6b545a55eec03370add8cf3270665a81148c2",
        "si.date-picker.calendar.card.border-radius": "68ce57607ba0184a6c5d0a474c3383e3fbcfdb4a",
        "si.date-picker.calendar.today.border-radius": "1701374056b506b9128aa2fd48cff9f8f4376064",
        "si.date-picker.calendar.month-year.border-radius": "a7d9dde235213388d49a59cc62dc5ee282877df8",
        "si.date-picker.calendar.day.border-radius": "ed5536deebadb4d6e81f6b41d49635e9ef5cbe1b",
        "si.date-picker.calendar.day.range-border-radius": "88bc56cb35c28332e083c145088785c7295e7810",
        "si.input-field.border-radius": "8324bb522deff9bf2b466d5cd61adb7e24a701ea",
        "si.dropdown.card.border-radius": "7c77c09498b5125eedc17c8d374d0d8fc4d90559",
        "si.phone-field.country-icon.border-radius": "218a6c83f5bf365b85c4ec374181cdbf648857ca",
        "si.icon-button.primary.border-radius": "fa7539187d10f2ef7d4f28f7621d504cd9537c1a",
        "si.icon-button.secondary.border-radius": "24284b709b14f1d0181c2da23d43961da4693538",
        "si.icon-button.tertiary.border-radius": "79e2e3bc2dddf21e6c80d666a9f59e93a505564a",
        "si.icon-button.neutral.border-radius": "0747e50999f89db648c9bd5421db3b4ad3c8fa12",
        "si.icon-button.inverse.border-radius": "b378b3ab2064252e061595f461bb47dd23426038",
        "si.switch.handle.border-radius": "feccc0f83733b4bf3418ec752f1b91221319fa89",
        "si.switch.track.border-radius": "1b3ee4cad6ed68e2a70f5071f5c793702bc5a861",
        "si.slider.handle.border-radius": "1408435876012ce663d4ed8658234969a6865b02",
        "si.checkbox.selector.border-width": "cc9a9f774fb10d589c663d7a9304d2ba5d7ed1ca",
        "si.radio.selector.border-width": "bfb0cc059f2f201b57767c60dfcfb3177bfadb80",
        "si.header.border-bottom": "a74f959309a8fb60a3b0fe2c64f2fb737bb8dc53",
        "si.slider.handle.border-width": "daa1eb1c766ccf45dd08313790ce68c90481cb6b",
        "si.checkbox.selector.icon.size": "a871b6374db661651c17456cefafe4c38b292fd2",
        "si.checkbox.selector.size": "d6ed16ce590494911d39caf4e794e6df555ea205",
        "si.radio.selector.inner.size-selected": "1499062628057cdafba9c7b40c198b4cc788f048",
        "si.radio.selector.size": "d5c95ae15a7e9b9ce91ba1a6864443aafa754f08"
      },
      "group": "Guidewire"
    }
  ],
  "$metadata": {
    "tokenSetOrder": [
      "Consumer/Global",
      "Consumer/Semantic",
      "Consumer/Component",
      "Succeed Insurance/Global",
      "Succeed Insurance/Semantic",
      "Succeed Insurance/Component"
    ]
  }
}